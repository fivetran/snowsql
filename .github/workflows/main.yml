name: CI

on:
  push:
    branches:
    tags:
  workflow_dispatch:

jobs:
  build-test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            build-command: bazel build //zetasql/local_service:libremote_server.so
            lib-path: bazel-bin/zetasql/local_service/libremote_server.so
            test-command: |
              bazel test //zetasql/analyzer/...
              bazel test //zetasql/base/...
              bazel test //zetasql/common/...
              bazel test //zetasql/compliance/...
              bazel test //zetasql/local_service/...
              bazel test //zetasql/parser/...

          - os: macos-latest
            build-command: |
              bazel build //zetasql/local_service:libremote_server.dylib --features=-supports_dynamic_linker
              install_name_tool -id "@loader_path/libremote_server.dylib" bazel-bin/zetasql/local_service/libremote_server.dylib
            lib-path: bazel-bin/zetasql/local_service/libremote_server.dylib
            test-command: | # Temporary skip 2 tests for MacOS
              bazel test --features=-supports_dynamic_linker -- //zetasql/analyzer/... -//zetasql/analyzer:analyzer_set_operation_test -//zetasql/analyzer:analyzer_test
              bazel test --features=-supports_dynamic_linker //zetasql/base/...
              bazel test --features=-supports_dynamic_linker //zetasql/common/...
              bazel test --features=-supports_dynamic_linker //zetasql/compliance/...
              bazel test --features=-supports_dynamic_linker -- //zetasql/local_service/... \
                -//zetasql/local_service:libremote_server.so \
                -//zetasql/local_service:liblocal_service_jni.so \
                -//zetasql/local_service:liblocal_service_jni.dylib \
                -//zetasql/local_service:local_service_jni
              bazel test --features=-supports_dynamic_linker //zetasql/parser/...

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup bazelisk
        uses: bazelbuild/setup-bazelisk@v2

      - name: Bazel build
        run: ${{ matrix.build-command }}

      - name: Bazel test
        run: ${{ matrix.test-command }}

      - name: Archive build artifacts
        run: tar -cvzf ${{ matrix.lib-path }}.tar.gz ${{ matrix.lib-path }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }}
          path: ${{ matrix.lib-path }}.tar.gz
