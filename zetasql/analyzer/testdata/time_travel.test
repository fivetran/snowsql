[default language_features=V_1_1_FOR_SYSTEM_TIME_AS_OF]
[language_features={{V_1_1_FOR_SYSTEM_TIME_AS_OF|}}]
SELECT COUNT(*) FROM SimpleTypes FOR SYSTEM_TIME AS OF TIMESTAMP '2000-01-01 01:01:01.001'
--
ALTERNATION GROUP: V_1_1_FOR_SYSTEM_TIME_AS_OF
--
QueryStmt
+-output_column_list=
| +-$aggregate.$agg1#19 AS "$col1" [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$aggregate.$agg1#19]
    +-input_scan=
      +-AggregateScan
        +-column_list=[$aggregate.$agg1#19]
        +-input_scan=
        | +-TableScan
        |   +-table=SimpleTypes
        |   +-for_system_time_expr=
        |     +-Literal(type=TIMESTAMP, value=2000-01-01 09:01:01.001+00, has_explicit_type=TRUE)
        +-aggregate_list=
          +-$agg1#19 := AggregateFunctionCall(ZetaSQL:$count_star() -> INT64)
--
ALTERNATION GROUP: <empty>
--
ERROR: FOR SYSTEM_TIME AS OF is not supported [at 1:34]
SELECT COUNT(*) FROM SimpleTypes FOR SYSTEM_TIME AS OF TIMESTAMP '2000-01-01 ...
                                 ^
==

[language_features={{V_1_1_FOR_SYSTEM_TIME_AS_OF|}}]
SELECT COUNT(*) FROM SimpleTypes FOR SYSTEM TIME AS OF TIMESTAMP '2000-01-01 01:01:01.001'
--

ALTERNATION GROUP: V_1_1_FOR_SYSTEM_TIME_AS_OF
--
QueryStmt
+-output_column_list=
| +-$aggregate.$agg1#19 AS "$col1" [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$aggregate.$agg1#19]
    +-input_scan=
      +-AggregateScan
        +-column_list=[$aggregate.$agg1#19]
        +-input_scan=
        | +-TableScan
        |   +-table=SimpleTypes
        |   +-for_system_time_expr=
        |     +-Literal(type=TIMESTAMP, value=2000-01-01 09:01:01.001+00, has_explicit_type=TRUE)
        +-aggregate_list=
          +-$agg1#19 := AggregateFunctionCall(ZetaSQL:$count_star() -> INT64)
--
ALTERNATION GROUP: <empty>
--
ERROR: FOR SYSTEM_TIME AS OF is not supported [at 1:34]
SELECT COUNT(*) FROM SimpleTypes FOR SYSTEM TIME AS OF TIMESTAMP '2000-01-01 ...
                                 ^
==

SELECT COUNT(*) FROM SimpleTypes FOR SYSTEM_TIME AS OF CURRENT_TIMESTAMP
--

QueryStmt
+-output_column_list=
| +-$aggregate.$agg1#19 AS "$col1" [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$aggregate.$agg1#19]
    +-input_scan=
      +-AggregateScan
        +-column_list=[$aggregate.$agg1#19]
        +-input_scan=
        | +-TableScan
        |   +-table=SimpleTypes
        |   +-for_system_time_expr=
        |     +-FunctionCall(ZetaSQL:current_timestamp() -> TIMESTAMP)
        +-aggregate_list=
          +-$agg1#19 := AggregateFunctionCall(ZetaSQL:$count_star() -> INT64)
==

# String literal coercion to TIMESTAMP
SELECT COUNT(*) FROM SimpleTypes FOR SYSTEM_TIME AS OF '2000-01-01 01:01:01'
--
QueryStmt
+-output_column_list=
| +-$aggregate.$agg1#19 AS "$col1" [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$aggregate.$agg1#19]
    +-input_scan=
      +-AggregateScan
        +-column_list=[$aggregate.$agg1#19]
        +-input_scan=
        | +-TableScan
        |   +-table=SimpleTypes
        |   +-for_system_time_expr=
        |     +-Literal(type=TIMESTAMP, value=2000-01-01 09:01:01+00)
        +-aggregate_list=
          +-$agg1#19 := AggregateFunctionCall(ZetaSQL:$count_star() -> INT64)
==

# String literal coercion to TIMESTAMP
SELECT COUNT(*) FROM SimpleTypes FOR SYSTEM_TIME AS OF '2000-01-01'
--
QueryStmt
+-output_column_list=
| +-$aggregate.$agg1#19 AS "$col1" [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$aggregate.$agg1#19]
    +-input_scan=
      +-AggregateScan
        +-column_list=[$aggregate.$agg1#19]
        +-input_scan=
        | +-TableScan
        |   +-table=SimpleTypes
        |   +-for_system_time_expr=
        |     +-Literal(type=TIMESTAMP, value=2000-01-01 08:00:00+00)
        +-aggregate_list=
          +-$agg1#19 := AggregateFunctionCall(ZetaSQL:$count_star() -> INT64)
==

SELECT COUNT(*) FROM SimpleTypes FOR SYSTEM_TIME AS OF TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 30 MINUTE)
--

QueryStmt
+-output_column_list=
| +-$aggregate.$agg1#19 AS "$col1" [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$aggregate.$agg1#19]
    +-input_scan=
      +-AggregateScan
        +-column_list=[$aggregate.$agg1#19]
        +-input_scan=
        | +-TableScan
        |   +-table=SimpleTypes
        |   +-for_system_time_expr=
        |     +-FunctionCall(ZetaSQL:timestamp_sub(TIMESTAMP, INT64, ENUM<zetasql.functions.DateTimestampPart>) -> TIMESTAMP)
        |       +-FunctionCall(ZetaSQL:current_timestamp() -> TIMESTAMP)
        |       +-Literal(type=INT64, value=30)
        |       +-Literal(type=ENUM<zetasql.functions.DateTimestampPart>, value=MINUTE)
        +-aggregate_list=
          +-$agg1#19 := AggregateFunctionCall(ZetaSQL:$count_star() -> INT64)
==

SELECT COUNT(*) FROM ComplexTypes t FOR SYSTEM_TIME AS OF CURRENT_TIMESTAMP, t.Int32Array
--

QueryStmt
+-output_column_list=
| +-$aggregate.$agg1#8 AS "$col1" [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$aggregate.$agg1#8]
    +-input_scan=
      +-AggregateScan
        +-column_list=[$aggregate.$agg1#8]
        +-input_scan=
        | +-ArrayScan
        |   +-column_list=[ComplexTypes.Int32Array#4]
        |   +-input_scan=
        |   | +-TableScan
        |   |   +-column_list=[ComplexTypes.Int32Array#4]
        |   |   +-table=ComplexTypes
        |   |   +-for_system_time_expr=
        |   |   | +-FunctionCall(ZetaSQL:current_timestamp() -> TIMESTAMP)
        |   |   +-column_index_list=[3]
        |   |   +-alias='t'
        |   +-array_expr=
        |   | +-ColumnRef(type=ARRAY<INT32>, column=ComplexTypes.Int32Array#4)
        |   +-element_column=$array.Int32Array#7
        +-aggregate_list=
          +-$agg1#8 := AggregateFunctionCall(ZetaSQL:$count_star() -> INT64)
==

WITH MyTable AS (SELECT int32 FROM SimpleTypes FOR SYSTEM_TIME AS OF TIMESTAMP '1999-11-22 12:21:12')
SELECT * FROM MyTable
--
QueryStmt
+-output_column_list=
| +-MyTable.int32#19 AS int32 [INT32]
+-query=
  +-WithScan
    +-column_list=[MyTable.int32#19]
    +-with_entry_list=
    | +-WithEntry
    |   +-with_query_name='MyTable'
    |   +-with_subquery=
    |     +-ProjectScan
    |       +-column_list=[SimpleTypes.int32#1]
    |       +-input_scan=
    |         +-TableScan
    |           +-column_list=[SimpleTypes.int32#1]
    |           +-table=SimpleTypes
    |           +-for_system_time_expr=
    |           | +-Literal(type=TIMESTAMP, value=1999-11-22 20:21:12+00, has_explicit_type=TRUE)
    |           +-column_index_list=[0]
    +-query=
      +-ProjectScan
        +-column_list=[MyTable.int32#19]
        +-input_scan=
          +-WithRefScan(column_list=[MyTable.int32#19], with_query_name='MyTable')
==

SELECT COUNT(*) FROM SimpleTypes FOR SYSTEM_TIME AS OF CAST(@test_param_string AS TIMESTAMP)
--
QueryStmt
+-output_column_list=
| +-$aggregate.$agg1#19 AS "$col1" [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$aggregate.$agg1#19]
    +-input_scan=
      +-AggregateScan
        +-column_list=[$aggregate.$agg1#19]
        +-input_scan=
        | +-TableScan
        |   +-table=SimpleTypes
        |   +-for_system_time_expr=
        |     +-Cast(STRING -> TIMESTAMP)
        |       +-Parameter(type=STRING, name='test_param_string')
        +-aggregate_list=
          +-$agg1#19 := AggregateFunctionCall(ZetaSQL:$count_star() -> INT64)
==

[language_features=V_1_1_FOR_SYSTEM_TIME_AS_OF,TABLESAMPLE]
SELECT COUNT(*) FROM TestTable FOR SYSTEM_TIME AS OF CURRENT_TIMESTAMP TABLESAMPLE RESERVOIR (100 ROWS)
--
QueryStmt
+-output_column_list=
| +-$aggregate.$agg1#4 AS "$col1" [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$aggregate.$agg1#4]
    +-input_scan=
      +-AggregateScan
        +-column_list=[$aggregate.$agg1#4]
        +-input_scan=
        | +-SampleScan
        |   +-input_scan=
        |   | +-TableScan
        |   |   +-table=TestTable
        |   |   +-for_system_time_expr=
        |   |     +-FunctionCall(ZetaSQL:current_timestamp() -> TIMESTAMP)
        |   +-method='reservoir'
        |   +-size=
        |   | +-Literal(type=INT64, value=100)
        |   +-unit=ROWS
        +-aggregate_list=
          +-$agg1#4 := AggregateFunctionCall(ZetaSQL:$count_star() -> INT64)
==

WITH MyTable AS (SELECT 1 x)
SELECT * FROM MyTable FOR SYSTEM_TIME AS OF CURRENT_TIMESTAMP
--

ERROR: FOR SYSTEM_TIME AS OF cannot be used with tables defined in WITH clause [at 2:23]
SELECT * FROM MyTable FOR SYSTEM_TIME AS OF CURRENT_TIMESTAMP
                      ^
==

[language_features=V_1_1_FOR_SYSTEM_TIME_AS_OF,TABLE_VALUED_FUNCTIONS,CREATE_TABLE_FUNCTION]
CREATE TEMPORARY TABLE FUNCTION MAKETABLE(t TABLE<x INT64, y STRING>)
  RETURNS TABLE<x INT64, y STRING> AS
    SELECT X, Y FROM t FOR SYSTEM_TIME AS OF CURRENT_TIMESTAMP
--

ERROR: FOR SYSTEM_TIME AS OF cannot be used with TABLE parameter t to FUNCTION [at 3:24]
    SELECT X, Y FROM t FOR SYSTEM_TIME AS OF CURRENT_TIMESTAMP
                       ^
==

SELECT COUNT(*) FROM ComplexTypes t, t.Int32Array FOR SYSTEM_TIME AS OF CURRENT_TIMESTAMP
--

ERROR: FOR SYSTEM TIME is not allowed with correlated array reference [at 1:51]
SELECT COUNT(*) FROM ComplexTypes t, t.Int32Array FOR SYSTEM_TIME AS OF CURRE...
                                                  ^
==

SELECT 1 FROM ComplexTypes t, t.Int32Array FOR SYSTEM_TIME AS OF CURRENT_TIMESTAMP WITH OFFSET
--
ERROR: Syntax error: Expected end of input but got keyword WITH [at 1:84]
...Int32Array FOR SYSTEM_TIME AS OF CURRENT_TIMESTAMP WITH OFFSET
                                                      ^
==

SELECT * FROM TestTable FOR SYSTEM_TIME AS OF TestTable.KitchenSink.timestamp_micros
--

ERROR: Unrecognized name: TestTable [at 1:47]
SELECT * FROM TestTable FOR SYSTEM_TIME AS OF TestTable.KitchenSink.timestamp...
                                              ^
==

SELECT * FROM TestTable t
WHERE EXISTS(
  SELECT 1 FROM SimpleTypes FOR SYSTEM_TIME AS OF t.KitchenSink.timestamp_micros
)
--
ERROR: Unrecognized name: t [at 3:51]
  SELECT 1 FROM SimpleTypes FOR SYSTEM_TIME AS OF t.KitchenSink.timestamp_micros
                                                  ^
==

SELECT 1 FROM UNNEST([1, 2]) FOR SYSTEM_TIME AS OF TIMESTAMP '1234-12-23 12:34:56'
--
ERROR: FOR SYSTEM_TIME AS OF is not allowed with array scans [at 1:30]
SELECT 1 FROM UNNEST([1, 2]) FOR SYSTEM_TIME AS OF TIMESTAMP '1234-12-23 12:3...
                             ^
==

SELECT COUNT(*) FROM SimpleTypes FOR SYSTEM_TIME AS OF 123456789
--

ERROR: FOR SYSTEM_TIME AS OF must be of type TIMESTAMP but was of type INT64 [at 1:56]
SELECT COUNT(*) FROM SimpleTypes FOR SYSTEM_TIME AS OF 123456789
                                                       ^
==

SELECT COUNT(*) FROM SimpleTypes FOR SYSTEM_TIME AS OF 'foo'
--

ERROR: FOR SYSTEM_TIME AS OF must be of type TIMESTAMP but was of type STRING [at 1:56]
SELECT COUNT(*) FROM SimpleTypes FOR SYSTEM_TIME AS OF 'foo'
                                                       ^
==

SELECT COUNT(*) FROM SimpleTypes FOR SYSTEM_TIME AS OF DATE '2000-01-01'
--
ERROR: FOR SYSTEM_TIME AS OF must be of type TIMESTAMP but was of type DATE [at 1:56]
SELECT COUNT(*) FROM SimpleTypes FOR SYSTEM_TIME AS OF DATE '2000-01-01'
                                                       ^
==

SELECT COUNT(*) FROM SimpleTypes FOR SYSTEM_TIME AS OF 1 + "foo"
--

ERROR: Could not cast literal "foo" to type INT64 [at 1:60]
SELECT COUNT(*) FROM SimpleTypes FOR SYSTEM_TIME AS OF 1 + "foo"
                                                           ^
==

SELECT COUNT(*) FROM SimpleTypes FOR SYSTEM_TIME AS OF @test_param_string
--

ERROR: FOR SYSTEM_TIME AS OF must be of type TIMESTAMP but was of type STRING [at 1:56]
SELECT COUNT(*) FROM SimpleTypes FOR SYSTEM_TIME AS OF @test_param_string
                                                       ^
