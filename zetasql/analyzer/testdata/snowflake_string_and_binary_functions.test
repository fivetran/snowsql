#
# BASE64_DECODE_STRING( <input> [ , <alphabet> ] )
#
select base64_decode_string('U25vd2ZsYWtl'{{|, '+/='}});
--
ALTERNATION GROUP: <empty>
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [STRING]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:base64_decode_string(STRING, optional(0) STRING) -> STRING)
    |     +-Literal(type=STRING, value="U25vd2ZsYWtl")
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: , '+/='
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [STRING]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:base64_decode_string(STRING, optional(1) STRING) -> STRING)
    |     +-Literal(type=STRING, value="U25vd2ZsYWtl")
    |     +-Literal(type=STRING, value="+/=")
    +-input_scan=
      +-SingleRowScan
==

#
# TRY_BASE64_DECODE_STRING( <input> [ , <alphabet> ] )
#
select try_base64_decode_string('U25vd2ZsYWtl'{{|, '+/='}});
--
ALTERNATION GROUP: <empty>
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [STRING]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:try_base64_decode_string(STRING, optional(0) STRING) -> STRING)
    |     +-Literal(type=STRING, value="U25vd2ZsYWtl")
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: , '+/='
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [STRING]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:try_base64_decode_string(STRING, optional(1) STRING) -> STRING)
    |     +-Literal(type=STRING, value="U25vd2ZsYWtl")
    |     +-Literal(type=STRING, value="+/=")
    +-input_scan=
      +-SingleRowScan
==

#
# CONTAINS( <expr1> , <expr2> )
#
select contains('1234', '23');
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:contains(STRING, STRING) -> BOOL)
    |     +-Literal(type=STRING, value="1234")
    |     +-Literal(type=STRING, value="23")
    +-input_scan=
      +-SingleRowScan
==

#
# ENDSWITH( <expr1> , <expr2> )
#
select endswith('1234', '34');
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:endswith(STRING, STRING) -> BOOL)
    |     +-Literal(type=STRING, value="1234")
    |     +-Literal(type=STRING, value="34")
    +-input_scan=
      +-SingleRowScan
==

#
# INSERT( <base_expr>, <pos>, <len>, <insert_expr> )
#
select insert('abcdef', 3, 2, 'zzz') as str;
--
QueryStmt
+-output_column_list=
| +-$query.str#1 AS str [STRING]
+-query=
  +-ProjectScan
    +-column_list=[$query.str#1]
    +-expr_list=
    | +-str#1 :=
    |   +-FunctionCall(ZetaSQL:insert(STRING, INT64, INT64, STRING) -> STRING)
    |     +-Literal(type=STRING, value="abcdef")
    |     +-Literal(type=INT64, value=3)
    |     +-Literal(type=INT64, value=2)
    |     +-Literal(type=STRING, value="zzz")
    +-input_scan=
      +-SingleRowScan
==
