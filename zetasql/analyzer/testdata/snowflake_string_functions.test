#
# REGEXP_COUNT( <subject> , <pattern> [ , <position> , <parameters> ] )
#
select regexp_count("a", '[[:punct:]][[:alnum:]]+[[:punct:]]'{{|, 1|, 1, 'i'}}) from TestTable;
--
ALTERNATION GROUP: <empty>
--
QueryStmt
+-output_column_list=
| +-$query.$col1#4 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#4]
    +-expr_list=
    | +-$col1#4 :=
    |   +-FunctionCall(ZetaSQL:regexp_count(STRING, STRING, optional(0) INT64, optional(0) STRING) -> INT64)
    |     +-Literal(type=STRING, value="a")
    |     +-Literal(type=STRING, value="[[:punct:]][[:alnum:]]+[[:punct:]]")
    +-input_scan=
      +-TableScan(table=TestTable)
--
ALTERNATION GROUP: , 1
--
QueryStmt
+-output_column_list=
| +-$query.$col1#4 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#4]
    +-expr_list=
    | +-$col1#4 :=
    |   +-FunctionCall(ZetaSQL:regexp_count(STRING, STRING, optional(1) INT64, optional(0) STRING) -> INT64)
    |     +-Literal(type=STRING, value="a")
    |     +-Literal(type=STRING, value="[[:punct:]][[:alnum:]]+[[:punct:]]")
    |     +-Literal(type=INT64, value=1)
    +-input_scan=
      +-TableScan(table=TestTable)
--
ALTERNATION GROUP: , 1, 'i'
--
QueryStmt
+-output_column_list=
| +-$query.$col1#4 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#4]
    +-expr_list=
    | +-$col1#4 :=
    |   +-FunctionCall(ZetaSQL:regexp_count(STRING, STRING, optional(1) INT64, optional(1) STRING) -> INT64)
    |     +-Literal(type=STRING, value="a")
    |     +-Literal(type=STRING, value="[[:punct:]][[:alnum:]]+[[:punct:]]")
    |     +-Literal(type=INT64, value=1)
    |     +-Literal(type=STRING, value="i")
    +-input_scan=
      +-TableScan(table=TestTable)
==
