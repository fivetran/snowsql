CREATE SCHEMA myProject.mySchema;

--
CreateSchemaStmt(name_path=myProject.mySchema)
==

CREATE SCHEMA myProject.mySchema OPTIONS(a="b", c="d");

--
CreateSchemaStmt
+-name_path=myProject.mySchema
+-option_list=
  +-a := Literal(type=STRING, value='b')
  +-c := Literal(type=STRING, value='d')
==

CREATE SCHEMA IF NOT EXISTS myProject.mySchema OPTIONS(a="b", c="d");

--
CreateSchemaStmt
+-name_path=myProject.mySchema
+-create_mode=CREATE_IF_NOT_EXISTS
+-option_list=
  +-a := Literal(type=STRING, value='b')
  +-c := Literal(type=STRING, value='d')
==

CREATE OR REPLACE SCHEMA myProject.mySchema OPTIONS(a="b", c="d");

--
CreateSchemaStmt
+-name_path=myProject.mySchema
+-create_mode=CREATE_OR_REPLACE
+-option_list=
  +-a := Literal(type=STRING, value='b')
  +-c := Literal(type=STRING, value='d')
==

CREATE OR REPLACE SCHEMA IF NOT EXISTS myProject.mySchema
OPTIONS(a="b", c="d");

--
ERROR: CREATE SCHEMA cannot have both OR REPLACE and IF NOT EXISTS [at 1:1]
CREATE OR REPLACE SCHEMA IF NOT EXISTS myProject.mySchema
^
==

[language_features={{|V_1_3_COLLATION_SUPPORT,V_1_3_ANNOTATION_FRAMEWORK}}]
CREATE SCHEMA myProject.mySchema DEFAULT COLLATE 'und:ci';
--
ALTERNATION GROUP: <empty>
--
ERROR: CREATE SCHEMA with DEFAULT COLLATE is not supported [at 1:42]
CREATE SCHEMA myProject.mySchema DEFAULT COLLATE 'und:ci';
                                         ^
--
ALTERNATION GROUP: V_1_3_COLLATION_SUPPORT,V_1_3_ANNOTATION_FRAMEWORK
--
CreateSchemaStmt
+-name_path=myProject.mySchema
+-collation_name=
  +-Literal(type=STRING, value='und:ci')
==

[language_features={{|V_1_3_COLLATION_SUPPORT,V_1_3_ANNOTATION_FRAMEWORK}}]
CREATE SCHEMA myProject.mySchema DEFAULT COLLATE @test_param_string;
--
ALTERNATION GROUP: <empty>
--
ERROR: CREATE SCHEMA with DEFAULT COLLATE is not supported [at 1:42]
CREATE SCHEMA myProject.mySchema DEFAULT COLLATE @test_param_string;
                                         ^
--
ALTERNATION GROUP: V_1_3_COLLATION_SUPPORT,V_1_3_ANNOTATION_FRAMEWORK
--
ERROR: COLLATE must be followed by a string literal [at 1:50]
CREATE SCHEMA myProject.mySchema DEFAULT COLLATE @test_param_string;
                                                 ^
==

[disallow_duplicate_options]
CREATE SCHEMA myProject.mySchema OPTIONS(a="b", a="d");
--
ERROR: Duplicate option specified for 'a' [at 1:49]
CREATE SCHEMA myProject.mySchema OPTIONS(a="b", a="d");
                                                ^