SELECT NORMALIZE('abcdefg'),
       NORMALIZE('abcdefg', NFC),
       NORMALIZE('abcdefg', NFKC),
       NORMALIZE('abcdefg', NFD),
       NORMALIZE('abcdefg', NFKD)
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [STRING]
| +-$query.$col2#2 AS "$col2" [STRING]
| +-$query.$col3#3 AS "$col3" [STRING]
| +-$query.$col4#4 AS "$col4" [STRING]
| +-$query.$col5#5 AS "$col5" [STRING]
+-query=
  +-ProjectScan
    +-column_list=$query.[$col1#1, $col2#2, $col3#3, $col4#4, $col5#5]
    +-expr_list=
    | +-$col1#1 :=
    | | +-FunctionCall(ZetaSQL:normalize(STRING, optional(0) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    | |   +-Literal(type=STRING, value='abcdefg')
    | +-$col2#2 :=
    | | +-FunctionCall(ZetaSQL:normalize(STRING, optional(1) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    | |   +-Literal(type=STRING, value='abcdefg')
    | |   +-Literal(type=ENUM<zetasql.functions.NormalizeMode>, value=NFC)
    | +-$col3#3 :=
    | | +-FunctionCall(ZetaSQL:normalize(STRING, optional(1) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    | |   +-Literal(type=STRING, value='abcdefg')
    | |   +-Literal(type=ENUM<zetasql.functions.NormalizeMode>, value=NFKC)
    | +-$col4#4 :=
    | | +-FunctionCall(ZetaSQL:normalize(STRING, optional(1) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    | |   +-Literal(type=STRING, value='abcdefg')
    | |   +-Literal(type=ENUM<zetasql.functions.NormalizeMode>, value=NFD)
    | +-$col5#5 :=
    |   +-FunctionCall(ZetaSQL:normalize(STRING, optional(1) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    |     +-Literal(type=STRING, value='abcdefg')
    |     +-Literal(type=ENUM<zetasql.functions.NormalizeMode>, value=NFKD)
    +-input_scan=
      +-SingleRowScan
==

# NORMALIZE is not a keyword.
SELECT "NORMALIZE"('abcdefg'),
       "NORMALIZE"('abcdefg', NFC),
       "NORMALIZE"('abcdefg', NFKC),
       "NORMALIZE"('abcdefg', NFD),
       "NORMALIZE"('abcdefg', NFKD)
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [STRING]
| +-$query.$col2#2 AS "$col2" [STRING]
| +-$query.$col3#3 AS "$col3" [STRING]
| +-$query.$col4#4 AS "$col4" [STRING]
| +-$query.$col5#5 AS "$col5" [STRING]
+-query=
  +-ProjectScan
    +-column_list=$query.[$col1#1, $col2#2, $col3#3, $col4#4, $col5#5]
    +-expr_list=
    | +-$col1#1 :=
    | | +-FunctionCall(ZetaSQL:normalize(STRING, optional(0) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    | |   +-Literal(type=STRING, value='abcdefg')
    | +-$col2#2 :=
    | | +-FunctionCall(ZetaSQL:normalize(STRING, optional(1) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    | |   +-Literal(type=STRING, value='abcdefg')
    | |   +-Literal(type=ENUM<zetasql.functions.NormalizeMode>, value=NFC)
    | +-$col3#3 :=
    | | +-FunctionCall(ZetaSQL:normalize(STRING, optional(1) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    | |   +-Literal(type=STRING, value='abcdefg')
    | |   +-Literal(type=ENUM<zetasql.functions.NormalizeMode>, value=NFKC)
    | +-$col4#4 :=
    | | +-FunctionCall(ZetaSQL:normalize(STRING, optional(1) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    | |   +-Literal(type=STRING, value='abcdefg')
    | |   +-Literal(type=ENUM<zetasql.functions.NormalizeMode>, value=NFD)
    | +-$col5#5 :=
    |   +-FunctionCall(ZetaSQL:normalize(STRING, optional(1) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    |     +-Literal(type=STRING, value='abcdefg')
    |     +-Literal(type=ENUM<zetasql.functions.NormalizeMode>, value=NFKD)
    +-input_scan=
      +-SingleRowScan
==

SELECT NORMALIZE('abcdefg', XYZ)
--
ERROR: Argument is not a valid NORMALIZE mode: XYZ [at 1:29]
SELECT NORMALIZE('abcdefg', XYZ)
                            ^
==

SELECT NORMALIZE_AND_CASEFOLD('abcdefg'),
       NORMALIZE_AND_CASEFOLD('abcdefg', NFC),
       NORMALIZE_AND_CASEFOLD('abcdefg', NFKC),
       NORMALIZE_AND_CASEFOLD('abcdefg', NFD),
       NORMALIZE_AND_CASEFOLD('abcdefg', NFKD)
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [STRING]
| +-$query.$col2#2 AS "$col2" [STRING]
| +-$query.$col3#3 AS "$col3" [STRING]
| +-$query.$col4#4 AS "$col4" [STRING]
| +-$query.$col5#5 AS "$col5" [STRING]
+-query=
  +-ProjectScan
    +-column_list=$query.[$col1#1, $col2#2, $col3#3, $col4#4, $col5#5]
    +-expr_list=
    | +-$col1#1 :=
    | | +-FunctionCall(ZetaSQL:normalize_and_casefold(STRING, optional(0) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    | |   +-Literal(type=STRING, value='abcdefg')
    | +-$col2#2 :=
    | | +-FunctionCall(ZetaSQL:normalize_and_casefold(STRING, optional(1) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    | |   +-Literal(type=STRING, value='abcdefg')
    | |   +-Literal(type=ENUM<zetasql.functions.NormalizeMode>, value=NFC)
    | +-$col3#3 :=
    | | +-FunctionCall(ZetaSQL:normalize_and_casefold(STRING, optional(1) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    | |   +-Literal(type=STRING, value='abcdefg')
    | |   +-Literal(type=ENUM<zetasql.functions.NormalizeMode>, value=NFKC)
    | +-$col4#4 :=
    | | +-FunctionCall(ZetaSQL:normalize_and_casefold(STRING, optional(1) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    | |   +-Literal(type=STRING, value='abcdefg')
    | |   +-Literal(type=ENUM<zetasql.functions.NormalizeMode>, value=NFD)
    | +-$col5#5 :=
    |   +-FunctionCall(ZetaSQL:normalize_and_casefold(STRING, optional(1) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    |     +-Literal(type=STRING, value='abcdefg')
    |     +-Literal(type=ENUM<zetasql.functions.NormalizeMode>, value=NFKD)
    +-input_scan=
      +-SingleRowScan
==

# NORMALIZE_AND_CASEFOLD is not a keyword.
SELECT "NORMALIZE_AND_CASEFOLD"('abcdefg'),
       "NORMALIZE_AND_CASEFOLD"('abcdefg', NFC),
       "NORMALIZE_AND_CASEFOLD"('abcdefg', NFKC),
       "NORMALIZE_AND_CASEFOLD"('abcdefg', NFD),
       "NORMALIZE_AND_CASEFOLD"('abcdefg', NFKD)
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [STRING]
| +-$query.$col2#2 AS "$col2" [STRING]
| +-$query.$col3#3 AS "$col3" [STRING]
| +-$query.$col4#4 AS "$col4" [STRING]
| +-$query.$col5#5 AS "$col5" [STRING]
+-query=
  +-ProjectScan
    +-column_list=$query.[$col1#1, $col2#2, $col3#3, $col4#4, $col5#5]
    +-expr_list=
    | +-$col1#1 :=
    | | +-FunctionCall(ZetaSQL:normalize_and_casefold(STRING, optional(0) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    | |   +-Literal(type=STRING, value='abcdefg')
    | +-$col2#2 :=
    | | +-FunctionCall(ZetaSQL:normalize_and_casefold(STRING, optional(1) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    | |   +-Literal(type=STRING, value='abcdefg')
    | |   +-Literal(type=ENUM<zetasql.functions.NormalizeMode>, value=NFC)
    | +-$col3#3 :=
    | | +-FunctionCall(ZetaSQL:normalize_and_casefold(STRING, optional(1) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    | |   +-Literal(type=STRING, value='abcdefg')
    | |   +-Literal(type=ENUM<zetasql.functions.NormalizeMode>, value=NFKC)
    | +-$col4#4 :=
    | | +-FunctionCall(ZetaSQL:normalize_and_casefold(STRING, optional(1) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    | |   +-Literal(type=STRING, value='abcdefg')
    | |   +-Literal(type=ENUM<zetasql.functions.NormalizeMode>, value=NFD)
    | +-$col5#5 :=
    |   +-FunctionCall(ZetaSQL:normalize_and_casefold(STRING, optional(1) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    |     +-Literal(type=STRING, value='abcdefg')
    |     +-Literal(type=ENUM<zetasql.functions.NormalizeMode>, value=NFKD)
    +-input_scan=
      +-SingleRowScan
==

SELECT NORMALIZE(Value),
       NORMALIZE(Value, NFC),
       NORMALIZE(Value, NFKC),
       NORMALIZE(Value, NFD),
       NORMALIZE(Value, NFKD)
FROM KeyValue
--
QueryStmt
+-output_column_list=
| +-$query.$col1#3 AS "$col1" [STRING]
| +-$query.$col2#4 AS "$col2" [STRING]
| +-$query.$col3#5 AS "$col3" [STRING]
| +-$query.$col4#6 AS "$col4" [STRING]
| +-$query.$col5#7 AS "$col5" [STRING]
+-query=
  +-ProjectScan
    +-column_list=$query.[$col1#3, $col2#4, $col3#5, $col4#6, $col5#7]
    +-expr_list=
    | +-$col1#3 :=
    | | +-FunctionCall(ZetaSQL:normalize(STRING, optional(0) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    | |   +-ColumnRef(type=STRING, column=KeyValue.Value#2)
    | +-$col2#4 :=
    | | +-FunctionCall(ZetaSQL:normalize(STRING, optional(1) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    | |   +-ColumnRef(type=STRING, column=KeyValue.Value#2)
    | |   +-Literal(type=ENUM<zetasql.functions.NormalizeMode>, value=NFC)
    | +-$col3#5 :=
    | | +-FunctionCall(ZetaSQL:normalize(STRING, optional(1) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    | |   +-ColumnRef(type=STRING, column=KeyValue.Value#2)
    | |   +-Literal(type=ENUM<zetasql.functions.NormalizeMode>, value=NFKC)
    | +-$col4#6 :=
    | | +-FunctionCall(ZetaSQL:normalize(STRING, optional(1) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    | |   +-ColumnRef(type=STRING, column=KeyValue.Value#2)
    | |   +-Literal(type=ENUM<zetasql.functions.NormalizeMode>, value=NFD)
    | +-$col5#7 :=
    |   +-FunctionCall(ZetaSQL:normalize(STRING, optional(1) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    |     +-ColumnRef(type=STRING, column=KeyValue.Value#2)
    |     +-Literal(type=ENUM<zetasql.functions.NormalizeMode>, value=NFKD)
    +-input_scan=
      +-TableScan(column_list=[KeyValue.Value#2], table=KeyValue, column_index_list=[1])
==

SELECT NORMALIZE_AND_CASEFOLD(Value),
       NORMALIZE_AND_CASEFOLD(Value, NFC),
       NORMALIZE_AND_CASEFOLD(Value, NFKC),
       NORMALIZE_AND_CASEFOLD(Value, NFD),
       NORMALIZE_AND_CASEFOLD(Value, NFKD)
FROM KeyValue
--
QueryStmt
+-output_column_list=
| +-$query.$col1#3 AS "$col1" [STRING]
| +-$query.$col2#4 AS "$col2" [STRING]
| +-$query.$col3#5 AS "$col3" [STRING]
| +-$query.$col4#6 AS "$col4" [STRING]
| +-$query.$col5#7 AS "$col5" [STRING]
+-query=
  +-ProjectScan
    +-column_list=$query.[$col1#3, $col2#4, $col3#5, $col4#6, $col5#7]
    +-expr_list=
    | +-$col1#3 :=
    | | +-FunctionCall(ZetaSQL:normalize_and_casefold(STRING, optional(0) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    | |   +-ColumnRef(type=STRING, column=KeyValue.Value#2)
    | +-$col2#4 :=
    | | +-FunctionCall(ZetaSQL:normalize_and_casefold(STRING, optional(1) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    | |   +-ColumnRef(type=STRING, column=KeyValue.Value#2)
    | |   +-Literal(type=ENUM<zetasql.functions.NormalizeMode>, value=NFC)
    | +-$col3#5 :=
    | | +-FunctionCall(ZetaSQL:normalize_and_casefold(STRING, optional(1) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    | |   +-ColumnRef(type=STRING, column=KeyValue.Value#2)
    | |   +-Literal(type=ENUM<zetasql.functions.NormalizeMode>, value=NFKC)
    | +-$col4#6 :=
    | | +-FunctionCall(ZetaSQL:normalize_and_casefold(STRING, optional(1) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    | |   +-ColumnRef(type=STRING, column=KeyValue.Value#2)
    | |   +-Literal(type=ENUM<zetasql.functions.NormalizeMode>, value=NFD)
    | +-$col5#7 :=
    |   +-FunctionCall(ZetaSQL:normalize_and_casefold(STRING, optional(1) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    |     +-ColumnRef(type=STRING, column=KeyValue.Value#2)
    |     +-Literal(type=ENUM<zetasql.functions.NormalizeMode>, value=NFKD)
    +-input_scan=
      +-TableScan(column_list=[KeyValue.Value#2], table=KeyValue, column_index_list=[1])
==

SELECT NORMALIZE_AND_CASEFOLD('abcdefg', XYZ)
--
ERROR: Argument is not a valid NORMALIZE mode: XYZ [at 1:42]
SELECT NORMALIZE_AND_CASEFOLD('abcdefg', XYZ)
                                         ^
==

SELECT NORMALIZE(Value, NFC) AS x,
       STRING_AGG(Value)
FROM KeyValue
GROUP BY x;
--
QueryStmt
+-output_column_list=
| +-$groupby.x#4 AS x [STRING]
| +-$aggregate.$agg1#3 AS "$col2" [STRING]
+-query=
  +-ProjectScan
    +-column_list=[$groupby.x#4, $aggregate.$agg1#3]
    +-input_scan=
      +-AggregateScan
        +-column_list=[$groupby.x#4, $aggregate.$agg1#3]
        +-input_scan=
        | +-TableScan(column_list=[KeyValue.Value#2], table=KeyValue, column_index_list=[1])
        +-group_by_list=
        | +-x#4 :=
        |   +-FunctionCall(ZetaSQL:normalize(STRING, optional(1) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
        |     +-ColumnRef(type=STRING, column=KeyValue.Value#2)
        |     +-Literal(type=ENUM<zetasql.functions.NormalizeMode>, value=NFC)
        +-aggregate_list=
          +-$agg1#3 :=
            +-AggregateFunctionCall(ZetaSQL:string_agg(STRING) -> STRING)
              +-ColumnRef(type=STRING, column=KeyValue.Value#2)
==

SELECT NORMALIZE(Value, Value)
FROM KeyValue
--
ERROR: Argument is not a valid NORMALIZE mode: Value [at 1:25]
SELECT NORMALIZE(Value, Value)
                        ^
==

SELECT NORMALIZE(1)
--
ERROR: No matching signature for function NORMALIZE for argument types: INT64. Supported signature: NORMALIZE(STRING, [NORMALIZE_MODE]) [at 1:8]
SELECT NORMALIZE(1)
       ^
==

SELECT NORMALIZE_AND_CASEFOLD(1)
--
ERROR: No matching signature for function NORMALIZE_AND_CASEFOLD for argument types: INT64. Supported signature: NORMALIZE_AND_CASEFOLD(STRING, [NORMALIZE_MODE]) [at 1:8]
SELECT NORMALIZE_AND_CASEFOLD(1)
       ^
==

SELECT NORMALIZE(NFC, NFC)
FROM (SELECT 'NFC' AS NFC)
--
QueryStmt
+-output_column_list=
| +-$query.$col1#2 AS "$col1" [STRING]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#2]
    +-expr_list=
    | +-$col1#2 :=
    |   +-FunctionCall(ZetaSQL:normalize(STRING, optional(1) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    |     +-ColumnRef(type=STRING, column=$subquery1.NFC#1)
    |     +-Literal(type=ENUM<zetasql.functions.NormalizeMode>, value=NFC)
    +-input_scan=
      +-ProjectScan
        +-column_list=[$subquery1.NFC#1]
        +-expr_list=
        | +-NFC#1 := Literal(type=STRING, value='NFC')
        +-input_scan=
          +-SingleRowScan
==

SELECT NORMALIZE()
--
ERROR: Number of arguments does not match for function NORMALIZE. Supported signature: NORMALIZE(STRING, [NORMALIZE_MODE]) [at 1:8]
SELECT NORMALIZE()
       ^
==

SELECT NORMALIZE_AND_CASEFOLD()
--
ERROR: Number of arguments does not match for function NORMALIZE_AND_CASEFOLD. Supported signature: NORMALIZE_AND_CASEFOLD(STRING, [NORMALIZE_MODE]) [at 1:8]
SELECT NORMALIZE_AND_CASEFOLD()
       ^
==

SELECT NORMALIZE('abc', 'NFC')
--
ERROR: Argument is not a valid NORMALIZE mode [at 1:25]
SELECT NORMALIZE('abc', 'NFC')
                        ^
==

# Backquoted identifiers are accepted.
SELECT NORMALIZE('abc', "NFC")
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [STRING]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:normalize(STRING, optional(1) ENUM<zetasql.functions.NormalizeMode>) -> STRING)
    |     +-Literal(type=STRING, value='abc')
    |     +-Literal(type=ENUM<zetasql.functions.NormalizeMode>, value=NFC)
    +-input_scan=
      +-SingleRowScan
==

SELECT NORMALIZE('abc', 0)
--
ERROR: Argument is not a valid NORMALIZE mode [at 1:25]
SELECT NORMALIZE('abc', 0)
                        ^
==

SELECT NORMALIZE('abc', NFC, 'xyz')
--
ERROR: Number of arguments does not match for function NORMALIZE. Supported signature: NORMALIZE(STRING, [NORMALIZE_MODE]) [at 1:8]
SELECT NORMALIZE('abc', NFC, 'xyz')
       ^
==

SELECT NORMALIZE_AND_CASEFOLD('abc', 'NFC')
--
ERROR: Argument is not a valid NORMALIZE mode [at 1:38]
SELECT NORMALIZE_AND_CASEFOLD('abc', 'NFC')
                                     ^
==

SELECT NORMALIZE_AND_CASEFOLD('abc', 0)
--
ERROR: Argument is not a valid NORMALIZE mode [at 1:38]
SELECT NORMALIZE_AND_CASEFOLD('abc', 0)
                                     ^
==

SELECT NORMALIZE_AND_CASEFOLD('abc', NFC, 'xyz')
--
ERROR: Number of arguments does not match for function NORMALIZE_AND_CASEFOLD. Supported signature: NORMALIZE_AND_CASEFOLD(STRING, [NORMALIZE_MODE]) [at 1:8]
SELECT NORMALIZE_AND_CASEFOLD('abc', NFC, 'xyz')
       ^
==

SELECT NORMALIZE_AND_CASEFOLD('abc', NFC.NFC)
--
ERROR: Argument is not a valid NORMALIZE mode [at 1:38]
SELECT NORMALIZE_AND_CASEFOLD('abc', NFC.NFC)
                                     ^
