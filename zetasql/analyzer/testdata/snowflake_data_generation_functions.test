#
# RANDOM([seed])
#
select random();
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 := FunctionCall(ZetaSQL:random(optional <T1>) -> INT64)
    +-input_scan=
      +-SingleRowScan
==

[language_features=NUMERIC_TYPE,BIGNUMERIC_TYPE]
select random(cast({{ 1 AS INT32 | 1 AS INT64 | 1 AS UINT32 | 1 AS UINT64 | 1 as float32 | 1 AS FLOAT64 | 1 as float | 1 as Double | 1.23 as numeric | 1.23 as bignumeric | '1.23' as string | true as BOOL }}));
--
ALTERNATION GROUP:  1 AS INT32 
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:random(optional(1) INT32) -> INT64)
    |     +-Literal(type=INT32, value=1, has_explicit_type=TRUE)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP:  1 AS INT64 
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:random(optional(1) INT64) -> INT64)
    |     +-Literal(type=INT64, value=1, has_explicit_type=TRUE)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP:  1 AS UINT32 
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:random(optional(1) UINT32) -> INT64)
    |     +-Literal(type=UINT32, value=1, has_explicit_type=TRUE)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP:  1 AS UINT64 
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:random(optional(1) UINT64) -> INT64)
    |     +-Literal(type=UINT64, value=1, has_explicit_type=TRUE)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUPS:
     1 as float32 
     1 as float 
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:random(optional(1) FLOAT) -> INT64)
    |     +-Literal(type=FLOAT, value=1, has_explicit_type=TRUE)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUPS:
     1 AS FLOAT64 
     1 as Double 
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:random(optional(1) DOUBLE) -> INT64)
    |     +-Literal(type=DOUBLE, value=1, has_explicit_type=TRUE)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP:  1.23 as numeric 
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:random(optional(1) NUMERIC) -> INT64)
    |     +-Literal(type=NUMERIC, value=1.23, has_explicit_type=TRUE)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP:  1.23 as bignumeric 
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:random(optional(1) BIGNUMERIC) -> INT64)
    |     +-Literal(type=BIGNUMERIC, value=1.23, has_explicit_type=TRUE)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP:  '1.23' as string 
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:random(optional(1) STRING) -> INT64)
    |     +-Literal(type=STRING, value="1.23", has_explicit_type=TRUE)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP:  true as BOOL 
--
ERROR: No matching signature for function RANDOM for argument types: BOOL. Supported signature: RANDOM([ANY]) [at 1:8]
select random(cast( true as BOOL ));
       ^
==

#
# RANDSTR( <length> , <gen> )
#
select randstr(cast({{1 AS INT32|'1.23' as string}}), cast(1 AS INT32));
--
ALTERNATION GROUP: 1 AS INT32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [STRING]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:randstr(INT32, INT32) -> STRING)
    |     +-Literal(type=INT32, value=1, has_explicit_type=TRUE)
    |     +-Literal(type=INT32, value=1, has_explicit_type=TRUE)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: '1.23' as string
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [STRING]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:randstr(STRING, INT32) -> STRING)
    |     +-Literal(type=STRING, value="1.23", has_explicit_type=TRUE)
    |     +-Literal(type=INT32, value=1, has_explicit_type=TRUE)
    +-input_scan=
      +-SingleRowScan
==

#
# SEQ1 / SEQ2 / SEQ4 / SEQ8
#
select seq{{1|2|4|8}}({{|0|1|'1.2'}});
--
ALTERNATION GROUP: 1,
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 := FunctionCall(ZetaSQL:seq1(optional <T1>) -> INT64)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 1,0
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:seq1(optional(1) INT64) -> INT64)
    |     +-Literal(type=INT64, value=0)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 1,1
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:seq1(optional(1) INT64) -> INT64)
    |     +-Literal(type=INT64, value=1)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 1,'1.2'
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:seq1(optional(1) STRING) -> INT64)
    |     +-Literal(type=STRING, value="1.2")
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 2,
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 := FunctionCall(ZetaSQL:seq2(optional <T1>) -> INT64)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 2,0
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:seq2(optional(1) INT64) -> INT64)
    |     +-Literal(type=INT64, value=0)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 2,1
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:seq2(optional(1) INT64) -> INT64)
    |     +-Literal(type=INT64, value=1)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 2,'1.2'
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:seq2(optional(1) STRING) -> INT64)
    |     +-Literal(type=STRING, value="1.2")
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 4,
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 := FunctionCall(ZetaSQL:seq4(optional <T1>) -> INT64)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 4,0
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:seq4(optional(1) INT64) -> INT64)
    |     +-Literal(type=INT64, value=0)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 4,1
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:seq4(optional(1) INT64) -> INT64)
    |     +-Literal(type=INT64, value=1)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 4,'1.2'
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:seq4(optional(1) STRING) -> INT64)
    |     +-Literal(type=STRING, value="1.2")
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 8,
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 := FunctionCall(ZetaSQL:seq8(optional <T1>) -> INT64)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 8,0
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:seq8(optional(1) INT64) -> INT64)
    |     +-Literal(type=INT64, value=0)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 8,1
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:seq8(optional(1) INT64) -> INT64)
    |     +-Literal(type=INT64, value=1)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 8,'1.2'
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [INT64]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:seq8(optional(1) STRING) -> INT64)
    |     +-Literal(type=STRING, value="1.2")
    +-input_scan=
      +-SingleRowScan
==
