# Tests for the TYPEOF function.
[default enabled_ast_rewrites=DEFAULTS]

SELECT TYPEOF(NULL);
--
ERROR: Function not found: TYPEOF [at 1:8]
SELECT TYPEOF(NULL);
       ^
==

[default language_features=V_1_3_TYPEOF_FUNCTION]
SELECT TYPEOF({{NULL|1|1+1}});
--
ALTERNATION GROUP: NULL
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [STRING]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:typeof(INT64) -> STRING)
    |     +-Literal(type=INT64, value=NULL)
    +-input_scan=
      +-SingleRowScan

[REWRITTEN AST]
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [STRING]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:if(BOOL, STRING, STRING) -> STRING)
    |     +-Literal(type=BOOL, value=true, has_explicit_type=TRUE)
    |     +-Literal(type=STRING, value="INT64", has_explicit_type=TRUE)
    |     +-Cast(BOOL -> STRING)
    |       +-FunctionCall(ZetaSQL:$is_null(INT64) -> BOOL)
    |         +-Literal(type=INT64, value=NULL)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 1
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [STRING]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:typeof(INT64) -> STRING)
    |     +-Literal(type=INT64, value=1)
    +-input_scan=
      +-SingleRowScan

[REWRITTEN AST]
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [STRING]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:if(BOOL, STRING, STRING) -> STRING)
    |     +-Literal(type=BOOL, value=true, has_explicit_type=TRUE)
    |     +-Literal(type=STRING, value="INT64", has_explicit_type=TRUE)
    |     +-Cast(BOOL -> STRING)
    |       +-FunctionCall(ZetaSQL:$is_null(INT64) -> BOOL)
    |         +-Literal(type=INT64, value=1)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 1+1
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [STRING]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:typeof(INT64) -> STRING)
    |     +-FunctionCall(ZetaSQL:$add(INT64, INT64) -> INT64)
    |       +-Literal(type=INT64, value=1)
    |       +-Literal(type=INT64, value=1)
    +-input_scan=
      +-SingleRowScan

[REWRITTEN AST]
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [STRING]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:if(BOOL, STRING, STRING) -> STRING)
    |     +-Literal(type=BOOL, value=true, has_explicit_type=TRUE)
    |     +-Literal(type=STRING, value="INT64", has_explicit_type=TRUE)
    |     +-Cast(BOOL -> STRING)
    |       +-FunctionCall(ZetaSQL:$is_null(INT64) -> BOOL)
    |         +-FunctionCall(ZetaSQL:$add(INT64, INT64) -> INT64)
    |           +-Literal(type=INT64, value=1)
    |           +-Literal(type=INT64, value=1)
    +-input_scan=
      +-SingleRowScan
==

SELECT TYPEOF(1) || TYPEOF(1);
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [STRING]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:concat(STRING, repeated(1) STRING) -> STRING)
    |     +-FunctionCall(ZetaSQL:typeof(INT64) -> STRING)
    |     | +-Literal(type=INT64, value=1)
    |     +-FunctionCall(ZetaSQL:typeof(INT64) -> STRING)
    |       +-Literal(type=INT64, value=1)
    +-input_scan=
      +-SingleRowScan

[REWRITTEN AST]
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [STRING]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:concat(STRING, repeated(1) STRING) -> STRING)
    |     +-FunctionCall(ZetaSQL:if(BOOL, STRING, STRING) -> STRING)
    |     | +-Literal(type=BOOL, value=true, has_explicit_type=TRUE)
    |     | +-Literal(type=STRING, value="INT64", has_explicit_type=TRUE)
    |     | +-Cast(BOOL -> STRING)
    |     |   +-FunctionCall(ZetaSQL:$is_null(INT64) -> BOOL)
    |     |     +-Literal(type=INT64, value=1)
    |     +-FunctionCall(ZetaSQL:if(BOOL, STRING, STRING) -> STRING)
    |       +-Literal(type=BOOL, value=true, has_explicit_type=TRUE)
    |       +-Literal(type=STRING, value="INT64", has_explicit_type=TRUE)
    |       +-Cast(BOOL -> STRING)
    |         +-FunctionCall(ZetaSQL:$is_null(INT64) -> BOOL)
    |           +-Literal(type=INT64, value=1)
    +-input_scan=
      +-SingleRowScan
==

SELECT TYPEOF(TYPEOF(1))
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [STRING]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:typeof(STRING) -> STRING)
    |     +-FunctionCall(ZetaSQL:typeof(INT64) -> STRING)
    |       +-Literal(type=INT64, value=1)
    +-input_scan=
      +-SingleRowScan

[REWRITTEN AST]
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [STRING]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:if(BOOL, STRING, STRING) -> STRING)
    |     +-Literal(type=BOOL, value=true, has_explicit_type=TRUE)
    |     +-Literal(type=STRING, value="STRING", has_explicit_type=TRUE)
    |     +-Cast(BOOL -> STRING)
    |       +-FunctionCall(ZetaSQL:$is_null(STRING) -> BOOL)
    |         +-FunctionCall(ZetaSQL:if(BOOL, STRING, STRING) -> STRING)
    |           +-Literal(type=BOOL, value=true, has_explicit_type=TRUE)
    |           +-Literal(type=STRING, value="INT64", has_explicit_type=TRUE)
    |           +-Cast(BOOL -> STRING)
    |             +-FunctionCall(ZetaSQL:$is_null(INT64) -> BOOL)
    |               +-Literal(type=INT64, value=1)
    +-input_scan=
      +-SingleRowScan
==

[language_features=V_1_2_SAFE_FUNCTION_CALL,V_1_3_TYPEOF_FUNCTION]
SELECT SAFE.TYPEOF(1);
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [STRING]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall({SAFE_ERROR_MODE} ZetaSQL:typeof(INT64) -> STRING)
    |     +-Literal(type=INT64, value=1)
    +-input_scan=
      +-SingleRowScan

[REWRITTEN AST]
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [STRING]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:if(BOOL, STRING, STRING) -> STRING)
    |     +-Literal(type=BOOL, value=true, has_explicit_type=TRUE)
    |     +-Literal(type=STRING, value="INT64", has_explicit_type=TRUE)
    |     +-Cast(BOOL -> STRING)
    |       +-FunctionCall(ZetaSQL:$is_null(INT64) -> BOOL)
    |         +-Literal(type=INT64, value=1)
    +-input_scan=
      +-SingleRowScan
==

SELECT TYPEOF(1)@{in64_hint=1};
--
[PRE-REWRITE AST]
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [STRING]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:typeof(INT64) -> STRING)
    |     +-Literal(type=INT64, value=1)
    |     +-hint_list=
    |       +-in64_hint := Literal(type=INT64, value=1)
    +-input_scan=
      +-SingleRowScan

Rewrite ERROR: generic::unimplemented: The TYPEOF() operator does not support hints.
