# All comparisons between all numeric types should be supported - no errors
# should be produced.  In normal cases the matching comparison signature is
# the supertype of the two argument types.  Where supertypes are not supported
# (when comparing UINT64 with INT32/INT64), a custom signature is matched.

# TODO: When comparing INT32 and UINT32, this is currently resolving
# to an INT64/UINT64 signature.  It is probably preferable to match the
# INT64/INT64 signature.  Consider preferring casting UINT32 to INT32 instead
# of UINT64 and see what other side effects there are.
#
# TODO: Also see if we can get a comparison like 'uint64col = 5' to
# use a UINT64/UINT64 signature, even though the UINT64/INT64 signature is
# an exact match.  Maybe we only use the custom UINT64/INT64 signature if the
# two operands have the same literalness?

# Note that we only test a subset of comparison operators, since they all
# have the same signatures and use the same coercion/matching rules.
[language_features=NUMERIC_TYPE,BIGNUMERIC_TYPE]
select {{int32|int64|uint32|uint64|float|double|numeric|bignumeric}} {{=|<|>=}}
       {{int32|int64|uint32|uint64|float|double|numeric|bignumeric}}
from SimpleTypes;
--
ALTERNATION GROUP: int32,=,int32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT32, INT32) -> BOOL)
    |     +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    |     +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.int32#1], table=SimpleTypes, column_index_list=[0])
--
ALTERNATION GROUP: int32,=,int64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, INT64) -> BOOL)
    |     +-Cast(INT32 -> INT64)
    |     | +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    |     +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, int64#2], table=SimpleTypes, column_index_list=[0, 1])
--
ALTERNATION GROUP: int32,=,uint32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, UINT64) -> BOOL)
    |     +-Cast(INT32 -> INT64)
    |     | +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    |     +-Cast(UINT32 -> UINT64)
    |       +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, uint32#3], table=SimpleTypes, column_index_list=[0, 2])
--
ALTERNATION GROUP: int32,=,uint64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, UINT64) -> BOOL)
    |     +-Cast(INT32 -> INT64)
    |     | +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    |     +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, uint64#4], table=SimpleTypes, column_index_list=[0, 3])
--
ALTERNATION GROUP: int32,=,float
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(INT32 -> DOUBLE)
    |     | +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    |     +-Cast(FLOAT -> DOUBLE)
    |       +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, float#8], table=SimpleTypes, column_index_list=[0, 7])
--
ALTERNATION GROUP: int32,=,double
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(INT32 -> DOUBLE)
    |     | +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, double#9], table=SimpleTypes, column_index_list=[0, 8])
--
ALTERNATION GROUP: int32,=,numeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(NUMERIC, NUMERIC) -> BOOL)
    |     +-Cast(INT32 -> NUMERIC)
    |     | +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, numeric#16], table=SimpleTypes, column_index_list=[0, 15])
--
ALTERNATION GROUP: int32,=,bignumeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-Cast(INT32 -> BIGNUMERIC)
    |     | +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, bignumeric#17], table=SimpleTypes, column_index_list=[0, 16])
--
ALTERNATION GROUP: int32,<,int32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(INT32, INT32) -> BOOL)
    |     +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    |     +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.int32#1], table=SimpleTypes, column_index_list=[0])
--
ALTERNATION GROUP: int32,<,int64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(INT64, INT64) -> BOOL)
    |     +-Cast(INT32 -> INT64)
    |     | +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    |     +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, int64#2], table=SimpleTypes, column_index_list=[0, 1])
--
ALTERNATION GROUP: int32,<,uint32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(INT64, UINT64) -> BOOL)
    |     +-Cast(INT32 -> INT64)
    |     | +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    |     +-Cast(UINT32 -> UINT64)
    |       +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, uint32#3], table=SimpleTypes, column_index_list=[0, 2])
--
ALTERNATION GROUP: int32,<,uint64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(INT64, UINT64) -> BOOL)
    |     +-Cast(INT32 -> INT64)
    |     | +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    |     +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, uint64#4], table=SimpleTypes, column_index_list=[0, 3])
--
ALTERNATION GROUP: int32,<,float
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(INT32 -> DOUBLE)
    |     | +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    |     +-Cast(FLOAT -> DOUBLE)
    |       +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, float#8], table=SimpleTypes, column_index_list=[0, 7])
--
ALTERNATION GROUP: int32,<,double
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(INT32 -> DOUBLE)
    |     | +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, double#9], table=SimpleTypes, column_index_list=[0, 8])
--
ALTERNATION GROUP: int32,<,numeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(NUMERIC, NUMERIC) -> BOOL)
    |     +-Cast(INT32 -> NUMERIC)
    |     | +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, numeric#16], table=SimpleTypes, column_index_list=[0, 15])
--
ALTERNATION GROUP: int32,<,bignumeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-Cast(INT32 -> BIGNUMERIC)
    |     | +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, bignumeric#17], table=SimpleTypes, column_index_list=[0, 16])
--
ALTERNATION GROUP: int32,>=,int32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(INT32, INT32) -> BOOL)
    |     +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    |     +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.int32#1], table=SimpleTypes, column_index_list=[0])
--
ALTERNATION GROUP: int32,>=,int64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(INT64, INT64) -> BOOL)
    |     +-Cast(INT32 -> INT64)
    |     | +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    |     +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, int64#2], table=SimpleTypes, column_index_list=[0, 1])
--
ALTERNATION GROUP: int32,>=,uint32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(INT64, UINT64) -> BOOL)
    |     +-Cast(INT32 -> INT64)
    |     | +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    |     +-Cast(UINT32 -> UINT64)
    |       +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, uint32#3], table=SimpleTypes, column_index_list=[0, 2])
--
ALTERNATION GROUP: int32,>=,uint64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(INT64, UINT64) -> BOOL)
    |     +-Cast(INT32 -> INT64)
    |     | +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    |     +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, uint64#4], table=SimpleTypes, column_index_list=[0, 3])
--
ALTERNATION GROUP: int32,>=,float
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(INT32 -> DOUBLE)
    |     | +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    |     +-Cast(FLOAT -> DOUBLE)
    |       +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, float#8], table=SimpleTypes, column_index_list=[0, 7])
--
ALTERNATION GROUP: int32,>=,double
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(INT32 -> DOUBLE)
    |     | +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, double#9], table=SimpleTypes, column_index_list=[0, 8])
--
ALTERNATION GROUP: int32,>=,numeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(NUMERIC, NUMERIC) -> BOOL)
    |     +-Cast(INT32 -> NUMERIC)
    |     | +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, numeric#16], table=SimpleTypes, column_index_list=[0, 15])
--
ALTERNATION GROUP: int32,>=,bignumeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-Cast(INT32 -> BIGNUMERIC)
    |     | +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, bignumeric#17], table=SimpleTypes, column_index_list=[0, 16])
--
ALTERNATION GROUP: int64,=,int32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, INT64) -> BOOL)
    |     +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-Cast(INT32 -> INT64)
    |       +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, int64#2], table=SimpleTypes, column_index_list=[0, 1])
--
ALTERNATION GROUP: int64,=,int64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, INT64) -> BOOL)
    |     +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.int64#2], table=SimpleTypes, column_index_list=[1])
--
ALTERNATION GROUP: int64,=,uint32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, UINT64) -> BOOL)
    |     +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-Cast(UINT32 -> UINT64)
    |       +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, uint32#3], table=SimpleTypes, column_index_list=[1, 2])
--
ALTERNATION GROUP: int64,=,uint64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, UINT64) -> BOOL)
    |     +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, uint64#4], table=SimpleTypes, column_index_list=[1, 3])
--
ALTERNATION GROUP: int64,=,float
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(INT64 -> DOUBLE)
    |     | +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-Cast(FLOAT -> DOUBLE)
    |       +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, float#8], table=SimpleTypes, column_index_list=[1, 7])
--
ALTERNATION GROUP: int64,=,double
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(INT64 -> DOUBLE)
    |     | +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, double#9], table=SimpleTypes, column_index_list=[1, 8])
--
ALTERNATION GROUP: int64,=,numeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(NUMERIC, NUMERIC) -> BOOL)
    |     +-Cast(INT64 -> NUMERIC)
    |     | +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, numeric#16], table=SimpleTypes, column_index_list=[1, 15])
--
ALTERNATION GROUP: int64,=,bignumeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-Cast(INT64 -> BIGNUMERIC)
    |     | +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, bignumeric#17], table=SimpleTypes, column_index_list=[1, 16])
--
ALTERNATION GROUP: int64,<,int32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(INT64, INT64) -> BOOL)
    |     +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-Cast(INT32 -> INT64)
    |       +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, int64#2], table=SimpleTypes, column_index_list=[0, 1])
--
ALTERNATION GROUP: int64,<,int64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(INT64, INT64) -> BOOL)
    |     +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.int64#2], table=SimpleTypes, column_index_list=[1])
--
ALTERNATION GROUP: int64,<,uint32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(INT64, UINT64) -> BOOL)
    |     +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-Cast(UINT32 -> UINT64)
    |       +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, uint32#3], table=SimpleTypes, column_index_list=[1, 2])
--
ALTERNATION GROUP: int64,<,uint64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(INT64, UINT64) -> BOOL)
    |     +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, uint64#4], table=SimpleTypes, column_index_list=[1, 3])
--
ALTERNATION GROUP: int64,<,float
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(INT64 -> DOUBLE)
    |     | +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-Cast(FLOAT -> DOUBLE)
    |       +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, float#8], table=SimpleTypes, column_index_list=[1, 7])
--
ALTERNATION GROUP: int64,<,double
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(INT64 -> DOUBLE)
    |     | +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, double#9], table=SimpleTypes, column_index_list=[1, 8])
--
ALTERNATION GROUP: int64,<,numeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(NUMERIC, NUMERIC) -> BOOL)
    |     +-Cast(INT64 -> NUMERIC)
    |     | +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, numeric#16], table=SimpleTypes, column_index_list=[1, 15])
--
ALTERNATION GROUP: int64,<,bignumeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-Cast(INT64 -> BIGNUMERIC)
    |     | +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, bignumeric#17], table=SimpleTypes, column_index_list=[1, 16])
--
ALTERNATION GROUP: int64,>=,int32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(INT64, INT64) -> BOOL)
    |     +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-Cast(INT32 -> INT64)
    |       +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, int64#2], table=SimpleTypes, column_index_list=[0, 1])
--
ALTERNATION GROUP: int64,>=,int64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(INT64, INT64) -> BOOL)
    |     +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.int64#2], table=SimpleTypes, column_index_list=[1])
--
ALTERNATION GROUP: int64,>=,uint32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(INT64, UINT64) -> BOOL)
    |     +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-Cast(UINT32 -> UINT64)
    |       +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, uint32#3], table=SimpleTypes, column_index_list=[1, 2])
--
ALTERNATION GROUP: int64,>=,uint64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(INT64, UINT64) -> BOOL)
    |     +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, uint64#4], table=SimpleTypes, column_index_list=[1, 3])
--
ALTERNATION GROUP: int64,>=,float
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(INT64 -> DOUBLE)
    |     | +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-Cast(FLOAT -> DOUBLE)
    |       +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, float#8], table=SimpleTypes, column_index_list=[1, 7])
--
ALTERNATION GROUP: int64,>=,double
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(INT64 -> DOUBLE)
    |     | +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, double#9], table=SimpleTypes, column_index_list=[1, 8])
--
ALTERNATION GROUP: int64,>=,numeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(NUMERIC, NUMERIC) -> BOOL)
    |     +-Cast(INT64 -> NUMERIC)
    |     | +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, numeric#16], table=SimpleTypes, column_index_list=[1, 15])
--
ALTERNATION GROUP: int64,>=,bignumeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-Cast(INT64 -> BIGNUMERIC)
    |     | +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, bignumeric#17], table=SimpleTypes, column_index_list=[1, 16])
--
ALTERNATION GROUP: uint32,=,int32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(UINT64, INT64) -> BOOL)
    |     +-Cast(UINT32 -> UINT64)
    |     | +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    |     +-Cast(INT32 -> INT64)
    |       +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, uint32#3], table=SimpleTypes, column_index_list=[0, 2])
--
ALTERNATION GROUP: uint32,=,int64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(UINT64, INT64) -> BOOL)
    |     +-Cast(UINT32 -> UINT64)
    |     | +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    |     +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, uint32#3], table=SimpleTypes, column_index_list=[1, 2])
--
ALTERNATION GROUP: uint32,=,uint32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(UINT32, UINT32) -> BOOL)
    |     +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    |     +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.uint32#3], table=SimpleTypes, column_index_list=[2])
--
ALTERNATION GROUP: uint32,=,uint64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(UINT64, UINT64) -> BOOL)
    |     +-Cast(UINT32 -> UINT64)
    |     | +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    |     +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint32#3, uint64#4], table=SimpleTypes, column_index_list=[2, 3])
--
ALTERNATION GROUP: uint32,=,float
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(UINT32 -> DOUBLE)
    |     | +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    |     +-Cast(FLOAT -> DOUBLE)
    |       +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint32#3, float#8], table=SimpleTypes, column_index_list=[2, 7])
--
ALTERNATION GROUP: uint32,=,double
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(UINT32 -> DOUBLE)
    |     | +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint32#3, double#9], table=SimpleTypes, column_index_list=[2, 8])
--
ALTERNATION GROUP: uint32,=,numeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(NUMERIC, NUMERIC) -> BOOL)
    |     +-Cast(UINT32 -> NUMERIC)
    |     | +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint32#3, numeric#16], table=SimpleTypes, column_index_list=[2, 15])
--
ALTERNATION GROUP: uint32,=,bignumeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-Cast(UINT32 -> BIGNUMERIC)
    |     | +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint32#3, bignumeric#17], table=SimpleTypes, column_index_list=[2, 16])
--
ALTERNATION GROUP: uint32,<,int32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(UINT64, INT64) -> BOOL)
    |     +-Cast(UINT32 -> UINT64)
    |     | +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    |     +-Cast(INT32 -> INT64)
    |       +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, uint32#3], table=SimpleTypes, column_index_list=[0, 2])
--
ALTERNATION GROUP: uint32,<,int64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(UINT64, INT64) -> BOOL)
    |     +-Cast(UINT32 -> UINT64)
    |     | +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    |     +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, uint32#3], table=SimpleTypes, column_index_list=[1, 2])
--
ALTERNATION GROUP: uint32,<,uint32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(UINT32, UINT32) -> BOOL)
    |     +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    |     +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.uint32#3], table=SimpleTypes, column_index_list=[2])
--
ALTERNATION GROUP: uint32,<,uint64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(UINT64, UINT64) -> BOOL)
    |     +-Cast(UINT32 -> UINT64)
    |     | +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    |     +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint32#3, uint64#4], table=SimpleTypes, column_index_list=[2, 3])
--
ALTERNATION GROUP: uint32,<,float
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(UINT32 -> DOUBLE)
    |     | +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    |     +-Cast(FLOAT -> DOUBLE)
    |       +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint32#3, float#8], table=SimpleTypes, column_index_list=[2, 7])
--
ALTERNATION GROUP: uint32,<,double
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(UINT32 -> DOUBLE)
    |     | +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint32#3, double#9], table=SimpleTypes, column_index_list=[2, 8])
--
ALTERNATION GROUP: uint32,<,numeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(NUMERIC, NUMERIC) -> BOOL)
    |     +-Cast(UINT32 -> NUMERIC)
    |     | +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint32#3, numeric#16], table=SimpleTypes, column_index_list=[2, 15])
--
ALTERNATION GROUP: uint32,<,bignumeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-Cast(UINT32 -> BIGNUMERIC)
    |     | +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint32#3, bignumeric#17], table=SimpleTypes, column_index_list=[2, 16])
--
ALTERNATION GROUP: uint32,>=,int32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(UINT64, INT64) -> BOOL)
    |     +-Cast(UINT32 -> UINT64)
    |     | +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    |     +-Cast(INT32 -> INT64)
    |       +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, uint32#3], table=SimpleTypes, column_index_list=[0, 2])
--
ALTERNATION GROUP: uint32,>=,int64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(UINT64, INT64) -> BOOL)
    |     +-Cast(UINT32 -> UINT64)
    |     | +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    |     +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, uint32#3], table=SimpleTypes, column_index_list=[1, 2])
--
ALTERNATION GROUP: uint32,>=,uint32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(UINT32, UINT32) -> BOOL)
    |     +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    |     +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.uint32#3], table=SimpleTypes, column_index_list=[2])
--
ALTERNATION GROUP: uint32,>=,uint64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(UINT64, UINT64) -> BOOL)
    |     +-Cast(UINT32 -> UINT64)
    |     | +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    |     +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint32#3, uint64#4], table=SimpleTypes, column_index_list=[2, 3])
--
ALTERNATION GROUP: uint32,>=,float
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(UINT32 -> DOUBLE)
    |     | +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    |     +-Cast(FLOAT -> DOUBLE)
    |       +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint32#3, float#8], table=SimpleTypes, column_index_list=[2, 7])
--
ALTERNATION GROUP: uint32,>=,double
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(UINT32 -> DOUBLE)
    |     | +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint32#3, double#9], table=SimpleTypes, column_index_list=[2, 8])
--
ALTERNATION GROUP: uint32,>=,numeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(NUMERIC, NUMERIC) -> BOOL)
    |     +-Cast(UINT32 -> NUMERIC)
    |     | +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint32#3, numeric#16], table=SimpleTypes, column_index_list=[2, 15])
--
ALTERNATION GROUP: uint32,>=,bignumeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-Cast(UINT32 -> BIGNUMERIC)
    |     | +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint32#3, bignumeric#17], table=SimpleTypes, column_index_list=[2, 16])
--
ALTERNATION GROUP: uint64,=,int32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(UINT64, INT64) -> BOOL)
    |     +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-Cast(INT32 -> INT64)
    |       +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, uint64#4], table=SimpleTypes, column_index_list=[0, 3])
--
ALTERNATION GROUP: uint64,=,int64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(UINT64, INT64) -> BOOL)
    |     +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, uint64#4], table=SimpleTypes, column_index_list=[1, 3])
--
ALTERNATION GROUP: uint64,=,uint32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(UINT64, UINT64) -> BOOL)
    |     +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-Cast(UINT32 -> UINT64)
    |       +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint32#3, uint64#4], table=SimpleTypes, column_index_list=[2, 3])
--
ALTERNATION GROUP: uint64,=,uint64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(UINT64, UINT64) -> BOOL)
    |     +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.uint64#4], table=SimpleTypes, column_index_list=[3])
--
ALTERNATION GROUP: uint64,=,float
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(UINT64 -> DOUBLE)
    |     | +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-Cast(FLOAT -> DOUBLE)
    |       +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint64#4, float#8], table=SimpleTypes, column_index_list=[3, 7])
--
ALTERNATION GROUP: uint64,=,double
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(UINT64 -> DOUBLE)
    |     | +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint64#4, double#9], table=SimpleTypes, column_index_list=[3, 8])
--
ALTERNATION GROUP: uint64,=,numeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(NUMERIC, NUMERIC) -> BOOL)
    |     +-Cast(UINT64 -> NUMERIC)
    |     | +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint64#4, numeric#16], table=SimpleTypes, column_index_list=[3, 15])
--
ALTERNATION GROUP: uint64,=,bignumeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-Cast(UINT64 -> BIGNUMERIC)
    |     | +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint64#4, bignumeric#17], table=SimpleTypes, column_index_list=[3, 16])
--
ALTERNATION GROUP: uint64,<,int32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(UINT64, INT64) -> BOOL)
    |     +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-Cast(INT32 -> INT64)
    |       +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, uint64#4], table=SimpleTypes, column_index_list=[0, 3])
--
ALTERNATION GROUP: uint64,<,int64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(UINT64, INT64) -> BOOL)
    |     +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, uint64#4], table=SimpleTypes, column_index_list=[1, 3])
--
ALTERNATION GROUP: uint64,<,uint32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(UINT64, UINT64) -> BOOL)
    |     +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-Cast(UINT32 -> UINT64)
    |       +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint32#3, uint64#4], table=SimpleTypes, column_index_list=[2, 3])
--
ALTERNATION GROUP: uint64,<,uint64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(UINT64, UINT64) -> BOOL)
    |     +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.uint64#4], table=SimpleTypes, column_index_list=[3])
--
ALTERNATION GROUP: uint64,<,float
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(UINT64 -> DOUBLE)
    |     | +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-Cast(FLOAT -> DOUBLE)
    |       +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint64#4, float#8], table=SimpleTypes, column_index_list=[3, 7])
--
ALTERNATION GROUP: uint64,<,double
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(UINT64 -> DOUBLE)
    |     | +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint64#4, double#9], table=SimpleTypes, column_index_list=[3, 8])
--
ALTERNATION GROUP: uint64,<,numeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(NUMERIC, NUMERIC) -> BOOL)
    |     +-Cast(UINT64 -> NUMERIC)
    |     | +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint64#4, numeric#16], table=SimpleTypes, column_index_list=[3, 15])
--
ALTERNATION GROUP: uint64,<,bignumeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-Cast(UINT64 -> BIGNUMERIC)
    |     | +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint64#4, bignumeric#17], table=SimpleTypes, column_index_list=[3, 16])
--
ALTERNATION GROUP: uint64,>=,int32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(UINT64, INT64) -> BOOL)
    |     +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-Cast(INT32 -> INT64)
    |       +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, uint64#4], table=SimpleTypes, column_index_list=[0, 3])
--
ALTERNATION GROUP: uint64,>=,int64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(UINT64, INT64) -> BOOL)
    |     +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, uint64#4], table=SimpleTypes, column_index_list=[1, 3])
--
ALTERNATION GROUP: uint64,>=,uint32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(UINT64, UINT64) -> BOOL)
    |     +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-Cast(UINT32 -> UINT64)
    |       +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint32#3, uint64#4], table=SimpleTypes, column_index_list=[2, 3])
--
ALTERNATION GROUP: uint64,>=,uint64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(UINT64, UINT64) -> BOOL)
    |     +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.uint64#4], table=SimpleTypes, column_index_list=[3])
--
ALTERNATION GROUP: uint64,>=,float
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(UINT64 -> DOUBLE)
    |     | +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-Cast(FLOAT -> DOUBLE)
    |       +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint64#4, float#8], table=SimpleTypes, column_index_list=[3, 7])
--
ALTERNATION GROUP: uint64,>=,double
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(UINT64 -> DOUBLE)
    |     | +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint64#4, double#9], table=SimpleTypes, column_index_list=[3, 8])
--
ALTERNATION GROUP: uint64,>=,numeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(NUMERIC, NUMERIC) -> BOOL)
    |     +-Cast(UINT64 -> NUMERIC)
    |     | +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint64#4, numeric#16], table=SimpleTypes, column_index_list=[3, 15])
--
ALTERNATION GROUP: uint64,>=,bignumeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-Cast(UINT64 -> BIGNUMERIC)
    |     | +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint64#4, bignumeric#17], table=SimpleTypes, column_index_list=[3, 16])
--
ALTERNATION GROUP: float,=,int32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(FLOAT -> DOUBLE)
    |     | +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    |     +-Cast(INT32 -> DOUBLE)
    |       +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, float#8], table=SimpleTypes, column_index_list=[0, 7])
--
ALTERNATION GROUP: float,=,int64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(FLOAT -> DOUBLE)
    |     | +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    |     +-Cast(INT64 -> DOUBLE)
    |       +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, float#8], table=SimpleTypes, column_index_list=[1, 7])
--
ALTERNATION GROUP: float,=,uint32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(FLOAT -> DOUBLE)
    |     | +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    |     +-Cast(UINT32 -> DOUBLE)
    |       +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint32#3, float#8], table=SimpleTypes, column_index_list=[2, 7])
--
ALTERNATION GROUP: float,=,uint64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(FLOAT -> DOUBLE)
    |     | +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    |     +-Cast(UINT64 -> DOUBLE)
    |       +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint64#4, float#8], table=SimpleTypes, column_index_list=[3, 7])
--
ALTERNATION GROUP: float,=,float
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(FLOAT, FLOAT) -> BOOL)
    |     +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    |     +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.float#8], table=SimpleTypes, column_index_list=[7])
--
ALTERNATION GROUP: float,=,double
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(FLOAT -> DOUBLE)
    |     | +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[float#8, double#9], table=SimpleTypes, column_index_list=[7, 8])
--
ALTERNATION GROUP: float,=,numeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(FLOAT -> DOUBLE)
    |     | +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    |     +-Cast(NUMERIC -> DOUBLE)
    |       +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[float#8, numeric#16], table=SimpleTypes, column_index_list=[7, 15])
--
ALTERNATION GROUP: float,=,bignumeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(FLOAT -> DOUBLE)
    |     | +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    |     +-Cast(BIGNUMERIC -> DOUBLE)
    |       +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[float#8, bignumeric#17], table=SimpleTypes, column_index_list=[7, 16])
--
ALTERNATION GROUP: float,<,int32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(FLOAT -> DOUBLE)
    |     | +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    |     +-Cast(INT32 -> DOUBLE)
    |       +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, float#8], table=SimpleTypes, column_index_list=[0, 7])
--
ALTERNATION GROUP: float,<,int64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(FLOAT -> DOUBLE)
    |     | +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    |     +-Cast(INT64 -> DOUBLE)
    |       +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, float#8], table=SimpleTypes, column_index_list=[1, 7])
--
ALTERNATION GROUP: float,<,uint32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(FLOAT -> DOUBLE)
    |     | +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    |     +-Cast(UINT32 -> DOUBLE)
    |       +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint32#3, float#8], table=SimpleTypes, column_index_list=[2, 7])
--
ALTERNATION GROUP: float,<,uint64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(FLOAT -> DOUBLE)
    |     | +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    |     +-Cast(UINT64 -> DOUBLE)
    |       +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint64#4, float#8], table=SimpleTypes, column_index_list=[3, 7])
--
ALTERNATION GROUP: float,<,float
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(FLOAT, FLOAT) -> BOOL)
    |     +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    |     +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.float#8], table=SimpleTypes, column_index_list=[7])
--
ALTERNATION GROUP: float,<,double
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(FLOAT -> DOUBLE)
    |     | +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[float#8, double#9], table=SimpleTypes, column_index_list=[7, 8])
--
ALTERNATION GROUP: float,<,numeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(FLOAT -> DOUBLE)
    |     | +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    |     +-Cast(NUMERIC -> DOUBLE)
    |       +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[float#8, numeric#16], table=SimpleTypes, column_index_list=[7, 15])
--
ALTERNATION GROUP: float,<,bignumeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(FLOAT -> DOUBLE)
    |     | +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    |     +-Cast(BIGNUMERIC -> DOUBLE)
    |       +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[float#8, bignumeric#17], table=SimpleTypes, column_index_list=[7, 16])
--
ALTERNATION GROUP: float,>=,int32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(FLOAT -> DOUBLE)
    |     | +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    |     +-Cast(INT32 -> DOUBLE)
    |       +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, float#8], table=SimpleTypes, column_index_list=[0, 7])
--
ALTERNATION GROUP: float,>=,int64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(FLOAT -> DOUBLE)
    |     | +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    |     +-Cast(INT64 -> DOUBLE)
    |       +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, float#8], table=SimpleTypes, column_index_list=[1, 7])
--
ALTERNATION GROUP: float,>=,uint32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(FLOAT -> DOUBLE)
    |     | +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    |     +-Cast(UINT32 -> DOUBLE)
    |       +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint32#3, float#8], table=SimpleTypes, column_index_list=[2, 7])
--
ALTERNATION GROUP: float,>=,uint64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(FLOAT -> DOUBLE)
    |     | +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    |     +-Cast(UINT64 -> DOUBLE)
    |       +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint64#4, float#8], table=SimpleTypes, column_index_list=[3, 7])
--
ALTERNATION GROUP: float,>=,float
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(FLOAT, FLOAT) -> BOOL)
    |     +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    |     +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.float#8], table=SimpleTypes, column_index_list=[7])
--
ALTERNATION GROUP: float,>=,double
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(FLOAT -> DOUBLE)
    |     | +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[float#8, double#9], table=SimpleTypes, column_index_list=[7, 8])
--
ALTERNATION GROUP: float,>=,numeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(FLOAT -> DOUBLE)
    |     | +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    |     +-Cast(NUMERIC -> DOUBLE)
    |       +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[float#8, numeric#16], table=SimpleTypes, column_index_list=[7, 15])
--
ALTERNATION GROUP: float,>=,bignumeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(FLOAT -> DOUBLE)
    |     | +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    |     +-Cast(BIGNUMERIC -> DOUBLE)
    |       +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[float#8, bignumeric#17], table=SimpleTypes, column_index_list=[7, 16])
--
ALTERNATION GROUP: double,=,int32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-Cast(INT32 -> DOUBLE)
    |       +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, double#9], table=SimpleTypes, column_index_list=[0, 8])
--
ALTERNATION GROUP: double,=,int64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-Cast(INT64 -> DOUBLE)
    |       +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, double#9], table=SimpleTypes, column_index_list=[1, 8])
--
ALTERNATION GROUP: double,=,uint32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-Cast(UINT32 -> DOUBLE)
    |       +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint32#3, double#9], table=SimpleTypes, column_index_list=[2, 8])
--
ALTERNATION GROUP: double,=,uint64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-Cast(UINT64 -> DOUBLE)
    |       +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint64#4, double#9], table=SimpleTypes, column_index_list=[3, 8])
--
ALTERNATION GROUP: double,=,float
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-Cast(FLOAT -> DOUBLE)
    |       +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[float#8, double#9], table=SimpleTypes, column_index_list=[7, 8])
--
ALTERNATION GROUP: double,=,double
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.double#9], table=SimpleTypes, column_index_list=[8])
--
ALTERNATION GROUP: double,=,numeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-Cast(NUMERIC -> DOUBLE)
    |       +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[double#9, numeric#16], table=SimpleTypes, column_index_list=[8, 15])
--
ALTERNATION GROUP: double,=,bignumeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-Cast(BIGNUMERIC -> DOUBLE)
    |       +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[double#9, bignumeric#17], table=SimpleTypes, column_index_list=[8, 16])
--
ALTERNATION GROUP: double,<,int32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-Cast(INT32 -> DOUBLE)
    |       +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, double#9], table=SimpleTypes, column_index_list=[0, 8])
--
ALTERNATION GROUP: double,<,int64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-Cast(INT64 -> DOUBLE)
    |       +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, double#9], table=SimpleTypes, column_index_list=[1, 8])
--
ALTERNATION GROUP: double,<,uint32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-Cast(UINT32 -> DOUBLE)
    |       +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint32#3, double#9], table=SimpleTypes, column_index_list=[2, 8])
--
ALTERNATION GROUP: double,<,uint64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-Cast(UINT64 -> DOUBLE)
    |       +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint64#4, double#9], table=SimpleTypes, column_index_list=[3, 8])
--
ALTERNATION GROUP: double,<,float
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-Cast(FLOAT -> DOUBLE)
    |       +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[float#8, double#9], table=SimpleTypes, column_index_list=[7, 8])
--
ALTERNATION GROUP: double,<,double
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.double#9], table=SimpleTypes, column_index_list=[8])
--
ALTERNATION GROUP: double,<,numeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-Cast(NUMERIC -> DOUBLE)
    |       +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[double#9, numeric#16], table=SimpleTypes, column_index_list=[8, 15])
--
ALTERNATION GROUP: double,<,bignumeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-Cast(BIGNUMERIC -> DOUBLE)
    |       +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[double#9, bignumeric#17], table=SimpleTypes, column_index_list=[8, 16])
--
ALTERNATION GROUP: double,>=,int32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-Cast(INT32 -> DOUBLE)
    |       +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, double#9], table=SimpleTypes, column_index_list=[0, 8])
--
ALTERNATION GROUP: double,>=,int64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-Cast(INT64 -> DOUBLE)
    |       +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, double#9], table=SimpleTypes, column_index_list=[1, 8])
--
ALTERNATION GROUP: double,>=,uint32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-Cast(UINT32 -> DOUBLE)
    |       +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint32#3, double#9], table=SimpleTypes, column_index_list=[2, 8])
--
ALTERNATION GROUP: double,>=,uint64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-Cast(UINT64 -> DOUBLE)
    |       +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint64#4, double#9], table=SimpleTypes, column_index_list=[3, 8])
--
ALTERNATION GROUP: double,>=,float
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-Cast(FLOAT -> DOUBLE)
    |       +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[float#8, double#9], table=SimpleTypes, column_index_list=[7, 8])
--
ALTERNATION GROUP: double,>=,double
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.double#9], table=SimpleTypes, column_index_list=[8])
--
ALTERNATION GROUP: double,>=,numeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-Cast(NUMERIC -> DOUBLE)
    |       +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[double#9, numeric#16], table=SimpleTypes, column_index_list=[8, 15])
--
ALTERNATION GROUP: double,>=,bignumeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-Cast(BIGNUMERIC -> DOUBLE)
    |       +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[double#9, bignumeric#17], table=SimpleTypes, column_index_list=[8, 16])
--
ALTERNATION GROUP: numeric,=,int32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(NUMERIC, NUMERIC) -> BOOL)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    |     +-Cast(INT32 -> NUMERIC)
    |       +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, numeric#16], table=SimpleTypes, column_index_list=[0, 15])
--
ALTERNATION GROUP: numeric,=,int64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(NUMERIC, NUMERIC) -> BOOL)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    |     +-Cast(INT64 -> NUMERIC)
    |       +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, numeric#16], table=SimpleTypes, column_index_list=[1, 15])
--
ALTERNATION GROUP: numeric,=,uint32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(NUMERIC, NUMERIC) -> BOOL)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    |     +-Cast(UINT32 -> NUMERIC)
    |       +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint32#3, numeric#16], table=SimpleTypes, column_index_list=[2, 15])
--
ALTERNATION GROUP: numeric,=,uint64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(NUMERIC, NUMERIC) -> BOOL)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    |     +-Cast(UINT64 -> NUMERIC)
    |       +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint64#4, numeric#16], table=SimpleTypes, column_index_list=[3, 15])
--
ALTERNATION GROUP: numeric,=,float
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(NUMERIC -> DOUBLE)
    |     | +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    |     +-Cast(FLOAT -> DOUBLE)
    |       +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[float#8, numeric#16], table=SimpleTypes, column_index_list=[7, 15])
--
ALTERNATION GROUP: numeric,=,double
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(NUMERIC -> DOUBLE)
    |     | +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[double#9, numeric#16], table=SimpleTypes, column_index_list=[8, 15])
--
ALTERNATION GROUP: numeric,=,numeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(NUMERIC, NUMERIC) -> BOOL)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.numeric#16], table=SimpleTypes, column_index_list=[15])
--
ALTERNATION GROUP: numeric,=,bignumeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-Cast(NUMERIC -> BIGNUMERIC)
    |     | +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[numeric#16, bignumeric#17], table=SimpleTypes, column_index_list=[15, 16])
--
ALTERNATION GROUP: numeric,<,int32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(NUMERIC, NUMERIC) -> BOOL)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    |     +-Cast(INT32 -> NUMERIC)
    |       +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, numeric#16], table=SimpleTypes, column_index_list=[0, 15])
--
ALTERNATION GROUP: numeric,<,int64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(NUMERIC, NUMERIC) -> BOOL)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    |     +-Cast(INT64 -> NUMERIC)
    |       +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, numeric#16], table=SimpleTypes, column_index_list=[1, 15])
--
ALTERNATION GROUP: numeric,<,uint32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(NUMERIC, NUMERIC) -> BOOL)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    |     +-Cast(UINT32 -> NUMERIC)
    |       +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint32#3, numeric#16], table=SimpleTypes, column_index_list=[2, 15])
--
ALTERNATION GROUP: numeric,<,uint64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(NUMERIC, NUMERIC) -> BOOL)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    |     +-Cast(UINT64 -> NUMERIC)
    |       +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint64#4, numeric#16], table=SimpleTypes, column_index_list=[3, 15])
--
ALTERNATION GROUP: numeric,<,float
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(NUMERIC -> DOUBLE)
    |     | +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    |     +-Cast(FLOAT -> DOUBLE)
    |       +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[float#8, numeric#16], table=SimpleTypes, column_index_list=[7, 15])
--
ALTERNATION GROUP: numeric,<,double
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(NUMERIC -> DOUBLE)
    |     | +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[double#9, numeric#16], table=SimpleTypes, column_index_list=[8, 15])
--
ALTERNATION GROUP: numeric,<,numeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(NUMERIC, NUMERIC) -> BOOL)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.numeric#16], table=SimpleTypes, column_index_list=[15])
--
ALTERNATION GROUP: numeric,<,bignumeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-Cast(NUMERIC -> BIGNUMERIC)
    |     | +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[numeric#16, bignumeric#17], table=SimpleTypes, column_index_list=[15, 16])
--
ALTERNATION GROUP: numeric,>=,int32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(NUMERIC, NUMERIC) -> BOOL)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    |     +-Cast(INT32 -> NUMERIC)
    |       +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, numeric#16], table=SimpleTypes, column_index_list=[0, 15])
--
ALTERNATION GROUP: numeric,>=,int64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(NUMERIC, NUMERIC) -> BOOL)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    |     +-Cast(INT64 -> NUMERIC)
    |       +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, numeric#16], table=SimpleTypes, column_index_list=[1, 15])
--
ALTERNATION GROUP: numeric,>=,uint32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(NUMERIC, NUMERIC) -> BOOL)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    |     +-Cast(UINT32 -> NUMERIC)
    |       +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint32#3, numeric#16], table=SimpleTypes, column_index_list=[2, 15])
--
ALTERNATION GROUP: numeric,>=,uint64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(NUMERIC, NUMERIC) -> BOOL)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    |     +-Cast(UINT64 -> NUMERIC)
    |       +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint64#4, numeric#16], table=SimpleTypes, column_index_list=[3, 15])
--
ALTERNATION GROUP: numeric,>=,float
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(NUMERIC -> DOUBLE)
    |     | +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    |     +-Cast(FLOAT -> DOUBLE)
    |       +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[float#8, numeric#16], table=SimpleTypes, column_index_list=[7, 15])
--
ALTERNATION GROUP: numeric,>=,double
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(NUMERIC -> DOUBLE)
    |     | +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[double#9, numeric#16], table=SimpleTypes, column_index_list=[8, 15])
--
ALTERNATION GROUP: numeric,>=,numeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(NUMERIC, NUMERIC) -> BOOL)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.numeric#16], table=SimpleTypes, column_index_list=[15])
--
ALTERNATION GROUP: numeric,>=,bignumeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-Cast(NUMERIC -> BIGNUMERIC)
    |     | +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[numeric#16, bignumeric#17], table=SimpleTypes, column_index_list=[15, 16])
--
ALTERNATION GROUP: bignumeric,=,int32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    |     +-Cast(INT32 -> BIGNUMERIC)
    |       +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, bignumeric#17], table=SimpleTypes, column_index_list=[0, 16])
--
ALTERNATION GROUP: bignumeric,=,int64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    |     +-Cast(INT64 -> BIGNUMERIC)
    |       +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, bignumeric#17], table=SimpleTypes, column_index_list=[1, 16])
--
ALTERNATION GROUP: bignumeric,=,uint32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    |     +-Cast(UINT32 -> BIGNUMERIC)
    |       +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint32#3, bignumeric#17], table=SimpleTypes, column_index_list=[2, 16])
--
ALTERNATION GROUP: bignumeric,=,uint64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    |     +-Cast(UINT64 -> BIGNUMERIC)
    |       +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint64#4, bignumeric#17], table=SimpleTypes, column_index_list=[3, 16])
--
ALTERNATION GROUP: bignumeric,=,float
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(BIGNUMERIC -> DOUBLE)
    |     | +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    |     +-Cast(FLOAT -> DOUBLE)
    |       +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[float#8, bignumeric#17], table=SimpleTypes, column_index_list=[7, 16])
--
ALTERNATION GROUP: bignumeric,=,double
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(BIGNUMERIC -> DOUBLE)
    |     | +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[double#9, bignumeric#17], table=SimpleTypes, column_index_list=[8, 16])
--
ALTERNATION GROUP: bignumeric,=,numeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    |     +-Cast(NUMERIC -> BIGNUMERIC)
    |       +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[numeric#16, bignumeric#17], table=SimpleTypes, column_index_list=[15, 16])
--
ALTERNATION GROUP: bignumeric,=,bignumeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.bignumeric#17], table=SimpleTypes, column_index_list=[16])
--
ALTERNATION GROUP: bignumeric,<,int32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    |     +-Cast(INT32 -> BIGNUMERIC)
    |       +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, bignumeric#17], table=SimpleTypes, column_index_list=[0, 16])
--
ALTERNATION GROUP: bignumeric,<,int64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    |     +-Cast(INT64 -> BIGNUMERIC)
    |       +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, bignumeric#17], table=SimpleTypes, column_index_list=[1, 16])
--
ALTERNATION GROUP: bignumeric,<,uint32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    |     +-Cast(UINT32 -> BIGNUMERIC)
    |       +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint32#3, bignumeric#17], table=SimpleTypes, column_index_list=[2, 16])
--
ALTERNATION GROUP: bignumeric,<,uint64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    |     +-Cast(UINT64 -> BIGNUMERIC)
    |       +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint64#4, bignumeric#17], table=SimpleTypes, column_index_list=[3, 16])
--
ALTERNATION GROUP: bignumeric,<,float
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(BIGNUMERIC -> DOUBLE)
    |     | +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    |     +-Cast(FLOAT -> DOUBLE)
    |       +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[float#8, bignumeric#17], table=SimpleTypes, column_index_list=[7, 16])
--
ALTERNATION GROUP: bignumeric,<,double
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(BIGNUMERIC -> DOUBLE)
    |     | +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[double#9, bignumeric#17], table=SimpleTypes, column_index_list=[8, 16])
--
ALTERNATION GROUP: bignumeric,<,numeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    |     +-Cast(NUMERIC -> BIGNUMERIC)
    |       +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[numeric#16, bignumeric#17], table=SimpleTypes, column_index_list=[15, 16])
--
ALTERNATION GROUP: bignumeric,<,bignumeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$less(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.bignumeric#17], table=SimpleTypes, column_index_list=[16])
--
ALTERNATION GROUP: bignumeric,>=,int32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    |     +-Cast(INT32 -> BIGNUMERIC)
    |       +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int32#1, bignumeric#17], table=SimpleTypes, column_index_list=[0, 16])
--
ALTERNATION GROUP: bignumeric,>=,int64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    |     +-Cast(INT64 -> BIGNUMERIC)
    |       +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[int64#2, bignumeric#17], table=SimpleTypes, column_index_list=[1, 16])
--
ALTERNATION GROUP: bignumeric,>=,uint32
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    |     +-Cast(UINT32 -> BIGNUMERIC)
    |       +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint32#3, bignumeric#17], table=SimpleTypes, column_index_list=[2, 16])
--
ALTERNATION GROUP: bignumeric,>=,uint64
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    |     +-Cast(UINT64 -> BIGNUMERIC)
    |       +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[uint64#4, bignumeric#17], table=SimpleTypes, column_index_list=[3, 16])
--
ALTERNATION GROUP: bignumeric,>=,float
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(BIGNUMERIC -> DOUBLE)
    |     | +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    |     +-Cast(FLOAT -> DOUBLE)
    |       +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[float#8, bignumeric#17], table=SimpleTypes, column_index_list=[7, 16])
--
ALTERNATION GROUP: bignumeric,>=,double
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(BIGNUMERIC -> DOUBLE)
    |     | +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[double#9, bignumeric#17], table=SimpleTypes, column_index_list=[8, 16])
--
ALTERNATION GROUP: bignumeric,>=,numeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    |     +-Cast(NUMERIC -> BIGNUMERIC)
    |       +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    +-input_scan=
      +-TableScan(column_list=SimpleTypes.[numeric#16, bignumeric#17], table=SimpleTypes, column_index_list=[15, 16])
--
ALTERNATION GROUP: bignumeric,>=,bignumeric
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$greater_or_equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.bignumeric#17], table=SimpleTypes, column_index_list=[16])
==

# Check comparisons between non-literals of all numeric types, compared with
# numeric literals of all types and all ranges.  Integer literal values in
# different ranges can coerce differently (for example, -1 coerces to signed
# integers but not unsigned integers), so we need to check different literal
# values.
# TODO: None of these should fail.  Fix the broken ones.
[language_features=NUMERIC_TYPE,BIGNUMERIC_TYPE]
select {{int32|int64|uint32|uint64|float|double|numeric|bignumeric}} =
       {{-3000000000|-1|1|3000000000|10000000000000000000|1.0|NUMERIC '3.14'|BIGNUMERIC '123456789012345678901234567890123456789.12345678901234567890123456789012345678'}}
from SimpleTypes
--
ALTERNATION GROUP: int32,-3000000000
--
ERROR: Could not cast literal -3000000000 to type INT32 [at 2:8]
       -3000000000
       ^
--
ALTERNATION GROUP: int32,-1
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT32, INT32) -> BOOL)
    |     +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    |     +-Literal(type=INT32, value=-1)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.int32#1], table=SimpleTypes, column_index_list=[0])
--
ALTERNATION GROUP: int32,1
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT32, INT32) -> BOOL)
    |     +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    |     +-Literal(type=INT32, value=1)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.int32#1], table=SimpleTypes, column_index_list=[0])
--
ALTERNATION GROUP: int32,3000000000
--
ERROR: Could not cast literal 3000000000 to type INT32 [at 2:8]
       3000000000
       ^
--
ALTERNATION GROUP: int32,10000000000000000000
--
ERROR: Could not cast literal 10000000000000000000 to type INT32 [at 2:8]
       10000000000000000000
       ^
--
ALTERNATION GROUP: int32,1.0
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(INT32 -> DOUBLE)
    |     | +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    |     +-Literal(type=DOUBLE, value=1, float_literal_id=1)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.int32#1], table=SimpleTypes, column_index_list=[0])
--
ALTERNATION GROUP: int32,NUMERIC '3.14'
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(NUMERIC, NUMERIC) -> BOOL)
    |     +-Cast(INT32 -> NUMERIC)
    |     | +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    |     +-Literal(type=NUMERIC, value=3.14, has_explicit_type=TRUE)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.int32#1], table=SimpleTypes, column_index_list=[0])
--
ALTERNATION GROUP: int32,BIGNUMERIC '123456789012345678901234567890123456789.12345678901234567890123456789012345678'
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-Cast(INT32 -> BIGNUMERIC)
    |     | +-ColumnRef(type=INT32, column=SimpleTypes.int32#1)
    |     +-Literal(type=BIGNUMERIC, value=123456789012345678901234567890123456789.12345678901234567890123456789012345678, has_explicit_type=TRUE)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.int32#1], table=SimpleTypes, column_index_list=[0])
--
ALTERNATION GROUP: int64,-3000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, INT64) -> BOOL)
    |     +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-Literal(type=INT64, value=-3000000000)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.int64#2], table=SimpleTypes, column_index_list=[1])
--
ALTERNATION GROUP: int64,-1
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, INT64) -> BOOL)
    |     +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-Literal(type=INT64, value=-1)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.int64#2], table=SimpleTypes, column_index_list=[1])
--
ALTERNATION GROUP: int64,1
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, INT64) -> BOOL)
    |     +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-Literal(type=INT64, value=1)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.int64#2], table=SimpleTypes, column_index_list=[1])
--
ALTERNATION GROUP: int64,3000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, INT64) -> BOOL)
    |     +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-Literal(type=INT64, value=3000000000)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.int64#2], table=SimpleTypes, column_index_list=[1])
--
ALTERNATION GROUP: int64,10000000000000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, UINT64) -> BOOL)
    |     +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-Literal(type=UINT64, value=10000000000000000000)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.int64#2], table=SimpleTypes, column_index_list=[1])
--
ALTERNATION GROUP: int64,1.0
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(INT64 -> DOUBLE)
    |     | +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-Literal(type=DOUBLE, value=1, float_literal_id=1)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.int64#2], table=SimpleTypes, column_index_list=[1])
--
ALTERNATION GROUP: int64,NUMERIC '3.14'
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(NUMERIC, NUMERIC) -> BOOL)
    |     +-Cast(INT64 -> NUMERIC)
    |     | +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-Literal(type=NUMERIC, value=3.14, has_explicit_type=TRUE)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.int64#2], table=SimpleTypes, column_index_list=[1])
--
ALTERNATION GROUP: int64,BIGNUMERIC '123456789012345678901234567890123456789.12345678901234567890123456789012345678'
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-Cast(INT64 -> BIGNUMERIC)
    |     | +-ColumnRef(type=INT64, column=SimpleTypes.int64#2)
    |     +-Literal(type=BIGNUMERIC, value=123456789012345678901234567890123456789.12345678901234567890123456789012345678, has_explicit_type=TRUE)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.int64#2], table=SimpleTypes, column_index_list=[1])
--
ALTERNATION GROUP: uint32,-3000000000
--
ERROR: Could not cast literal -3000000000 to type UINT32 [at 2:8]
       -3000000000
       ^
--
ALTERNATION GROUP: uint32,-1
--
ERROR: Could not cast literal -1 to type UINT32 [at 2:8]
       -1
       ^
--
ALTERNATION GROUP: uint32,1
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(UINT32, UINT32) -> BOOL)
    |     +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    |     +-Literal(type=UINT32, value=1)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.uint32#3], table=SimpleTypes, column_index_list=[2])
--
ALTERNATION GROUP: uint32,3000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(UINT32, UINT32) -> BOOL)
    |     +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    |     +-Literal(type=UINT32, value=3000000000)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.uint32#3], table=SimpleTypes, column_index_list=[2])
--
ALTERNATION GROUP: uint32,10000000000000000000
--
ERROR: Could not cast literal 10000000000000000000 to type UINT32 [at 2:8]
       10000000000000000000
       ^
--
ALTERNATION GROUP: uint32,1.0
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(UINT32 -> DOUBLE)
    |     | +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    |     +-Literal(type=DOUBLE, value=1, float_literal_id=1)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.uint32#3], table=SimpleTypes, column_index_list=[2])
--
ALTERNATION GROUP: uint32,NUMERIC '3.14'
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(NUMERIC, NUMERIC) -> BOOL)
    |     +-Cast(UINT32 -> NUMERIC)
    |     | +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    |     +-Literal(type=NUMERIC, value=3.14, has_explicit_type=TRUE)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.uint32#3], table=SimpleTypes, column_index_list=[2])
--
ALTERNATION GROUP: uint32,BIGNUMERIC '123456789012345678901234567890123456789.12345678901234567890123456789012345678'
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-Cast(UINT32 -> BIGNUMERIC)
    |     | +-ColumnRef(type=UINT32, column=SimpleTypes.uint32#3)
    |     +-Literal(type=BIGNUMERIC, value=123456789012345678901234567890123456789.12345678901234567890123456789012345678, has_explicit_type=TRUE)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.uint32#3], table=SimpleTypes, column_index_list=[2])
--
ALTERNATION GROUP: uint64,-3000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(UINT64, INT64) -> BOOL)
    |     +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-Literal(type=INT64, value=-3000000000)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.uint64#4], table=SimpleTypes, column_index_list=[3])
--
ALTERNATION GROUP: uint64,-1
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(UINT64, INT64) -> BOOL)
    |     +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-Literal(type=INT64, value=-1)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.uint64#4], table=SimpleTypes, column_index_list=[3])
--
ALTERNATION GROUP: uint64,1
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(UINT64, INT64) -> BOOL)
    |     +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-Literal(type=INT64, value=1)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.uint64#4], table=SimpleTypes, column_index_list=[3])
--
ALTERNATION GROUP: uint64,3000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(UINT64, INT64) -> BOOL)
    |     +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-Literal(type=INT64, value=3000000000)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.uint64#4], table=SimpleTypes, column_index_list=[3])
--
ALTERNATION GROUP: uint64,10000000000000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(UINT64, UINT64) -> BOOL)
    |     +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-Literal(type=UINT64, value=10000000000000000000)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.uint64#4], table=SimpleTypes, column_index_list=[3])
--
ALTERNATION GROUP: uint64,1.0
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(UINT64 -> DOUBLE)
    |     | +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-Literal(type=DOUBLE, value=1, float_literal_id=1)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.uint64#4], table=SimpleTypes, column_index_list=[3])
--
ALTERNATION GROUP: uint64,NUMERIC '3.14'
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(NUMERIC, NUMERIC) -> BOOL)
    |     +-Cast(UINT64 -> NUMERIC)
    |     | +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-Literal(type=NUMERIC, value=3.14, has_explicit_type=TRUE)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.uint64#4], table=SimpleTypes, column_index_list=[3])
--
ALTERNATION GROUP: uint64,BIGNUMERIC '123456789012345678901234567890123456789.12345678901234567890123456789012345678'
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-Cast(UINT64 -> BIGNUMERIC)
    |     | +-ColumnRef(type=UINT64, column=SimpleTypes.uint64#4)
    |     +-Literal(type=BIGNUMERIC, value=123456789012345678901234567890123456789.12345678901234567890123456789012345678, has_explicit_type=TRUE)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.uint64#4], table=SimpleTypes, column_index_list=[3])
--
ALTERNATION GROUP: float,-3000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(FLOAT, FLOAT) -> BOOL)
    |     +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    |     +-Literal(type=FLOAT, value=-3e+09)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.float#8], table=SimpleTypes, column_index_list=[7])
--
ALTERNATION GROUP: float,-1
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(FLOAT, FLOAT) -> BOOL)
    |     +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    |     +-Literal(type=FLOAT, value=-1)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.float#8], table=SimpleTypes, column_index_list=[7])
--
ALTERNATION GROUPS:
    float,1
    float,1.0
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(FLOAT, FLOAT) -> BOOL)
    |     +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    |     +-Literal(type=FLOAT, value=1)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.float#8], table=SimpleTypes, column_index_list=[7])
--
ALTERNATION GROUP: float,3000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(FLOAT, FLOAT) -> BOOL)
    |     +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    |     +-Literal(type=FLOAT, value=3e+09)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.float#8], table=SimpleTypes, column_index_list=[7])
--
ALTERNATION GROUP: float,10000000000000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(FLOAT, FLOAT) -> BOOL)
    |     +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    |     +-Literal(type=FLOAT, value=1e+19)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.float#8], table=SimpleTypes, column_index_list=[7])
--
ALTERNATION GROUP: float,NUMERIC '3.14'
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(FLOAT -> DOUBLE)
    |     | +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    |     +-Literal(type=DOUBLE, value=3.14, has_explicit_type=TRUE)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.float#8], table=SimpleTypes, column_index_list=[7])
--
ALTERNATION GROUP: float,BIGNUMERIC '123456789012345678901234567890123456789.12345678901234567890123456789012345678'
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Cast(FLOAT -> DOUBLE)
    |     | +-ColumnRef(type=FLOAT, column=SimpleTypes.float#8)
    |     +-Literal(type=DOUBLE, value=1.2345678901234568e+38, has_explicit_type=TRUE)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.float#8], table=SimpleTypes, column_index_list=[7])
--
ALTERNATION GROUP: double,-3000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-Literal(type=DOUBLE, value=-3000000000)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.double#9], table=SimpleTypes, column_index_list=[8])
--
ALTERNATION GROUP: double,-1
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-Literal(type=DOUBLE, value=-1)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.double#9], table=SimpleTypes, column_index_list=[8])
--
ALTERNATION GROUP: double,1
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-Literal(type=DOUBLE, value=1)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.double#9], table=SimpleTypes, column_index_list=[8])
--
ALTERNATION GROUP: double,3000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-Literal(type=DOUBLE, value=3000000000)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.double#9], table=SimpleTypes, column_index_list=[8])
--
ALTERNATION GROUP: double,10000000000000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-Literal(type=DOUBLE, value=1e+19)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.double#9], table=SimpleTypes, column_index_list=[8])
--
ALTERNATION GROUP: double,1.0
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-Literal(type=DOUBLE, value=1, float_literal_id=1)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.double#9], table=SimpleTypes, column_index_list=[8])
--
ALTERNATION GROUP: double,NUMERIC '3.14'
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-Literal(type=DOUBLE, value=3.14, has_explicit_type=TRUE)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.double#9], table=SimpleTypes, column_index_list=[8])
--
ALTERNATION GROUP: double,BIGNUMERIC '123456789012345678901234567890123456789.12345678901234567890123456789012345678'
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-ColumnRef(type=DOUBLE, column=SimpleTypes.double#9)
    |     +-Literal(type=DOUBLE, value=1.2345678901234568e+38, has_explicit_type=TRUE)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.double#9], table=SimpleTypes, column_index_list=[8])
--
ALTERNATION GROUP: numeric,-3000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(NUMERIC, NUMERIC) -> BOOL)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    |     +-Literal(type=NUMERIC, value=-3000000000)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.numeric#16], table=SimpleTypes, column_index_list=[15])
--
ALTERNATION GROUP: numeric,-1
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(NUMERIC, NUMERIC) -> BOOL)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    |     +-Literal(type=NUMERIC, value=-1)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.numeric#16], table=SimpleTypes, column_index_list=[15])
--
ALTERNATION GROUPS:
    numeric,1
    numeric,1.0
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(NUMERIC, NUMERIC) -> BOOL)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    |     +-Literal(type=NUMERIC, value=1)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.numeric#16], table=SimpleTypes, column_index_list=[15])
--
ALTERNATION GROUP: numeric,3000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(NUMERIC, NUMERIC) -> BOOL)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    |     +-Literal(type=NUMERIC, value=3000000000)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.numeric#16], table=SimpleTypes, column_index_list=[15])
--
ALTERNATION GROUP: numeric,10000000000000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(NUMERIC, NUMERIC) -> BOOL)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    |     +-Literal(type=NUMERIC, value=10000000000000000000)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.numeric#16], table=SimpleTypes, column_index_list=[15])
--
ALTERNATION GROUP: numeric,NUMERIC '3.14'
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(NUMERIC, NUMERIC) -> BOOL)
    |     +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    |     +-Literal(type=NUMERIC, value=3.14, has_explicit_type=TRUE)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.numeric#16], table=SimpleTypes, column_index_list=[15])
--
ALTERNATION GROUP: numeric,BIGNUMERIC '123456789012345678901234567890123456789.12345678901234567890123456789012345678'
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-Cast(NUMERIC -> BIGNUMERIC)
    |     | +-ColumnRef(type=NUMERIC, column=SimpleTypes.numeric#16)
    |     +-Literal(type=BIGNUMERIC, value=123456789012345678901234567890123456789.12345678901234567890123456789012345678, has_explicit_type=TRUE)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.numeric#16], table=SimpleTypes, column_index_list=[15])
--
ALTERNATION GROUP: bignumeric,-3000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    |     +-Literal(type=BIGNUMERIC, value=-3000000000)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.bignumeric#17], table=SimpleTypes, column_index_list=[16])
--
ALTERNATION GROUP: bignumeric,-1
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    |     +-Literal(type=BIGNUMERIC, value=-1)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.bignumeric#17], table=SimpleTypes, column_index_list=[16])
--
ALTERNATION GROUPS:
    bignumeric,1
    bignumeric,1.0
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    |     +-Literal(type=BIGNUMERIC, value=1)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.bignumeric#17], table=SimpleTypes, column_index_list=[16])
--
ALTERNATION GROUP: bignumeric,3000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    |     +-Literal(type=BIGNUMERIC, value=3000000000)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.bignumeric#17], table=SimpleTypes, column_index_list=[16])
--
ALTERNATION GROUP: bignumeric,10000000000000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    |     +-Literal(type=BIGNUMERIC, value=10000000000000000000)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.bignumeric#17], table=SimpleTypes, column_index_list=[16])
--
ALTERNATION GROUP: bignumeric,NUMERIC '3.14'
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    |     +-Literal(type=BIGNUMERIC, value=3.14, has_explicit_type=TRUE)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.bignumeric#17], table=SimpleTypes, column_index_list=[16])
--
ALTERNATION GROUP: bignumeric,BIGNUMERIC '123456789012345678901234567890123456789.12345678901234567890123456789012345678'
--
QueryStmt
+-output_column_list=
| +-$query.$col1#19 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#19]
    +-expr_list=
    | +-$col1#19 :=
    |   +-FunctionCall(ZetaSQL:$equal(BIGNUMERIC, BIGNUMERIC) -> BOOL)
    |     +-ColumnRef(type=BIGNUMERIC, column=SimpleTypes.bignumeric#17)
    |     +-Literal(type=BIGNUMERIC, value=123456789012345678901234567890123456789.12345678901234567890123456789012345678, has_explicit_type=TRUE)
    +-input_scan=
      +-TableScan(column_list=[SimpleTypes.bignumeric#17], table=SimpleTypes, column_index_list=[16])
==

select {{-3000000000|-1|1|3000000000|10000000000000000000|1.0}} =
       {{-3000000000|-1|1|3000000000|10000000000000000000|1.0}}
--
ALTERNATION GROUP: -3000000000,-3000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, INT64) -> BOOL)
    |     +-Literal(type=INT64, value=-3000000000)
    |     +-Literal(type=INT64, value=-3000000000)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: -3000000000,-1
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, INT64) -> BOOL)
    |     +-Literal(type=INT64, value=-3000000000)
    |     +-Literal(type=INT64, value=-1)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: -3000000000,1
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, INT64) -> BOOL)
    |     +-Literal(type=INT64, value=-3000000000)
    |     +-Literal(type=INT64, value=1)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: -3000000000,3000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, INT64) -> BOOL)
    |     +-Literal(type=INT64, value=-3000000000)
    |     +-Literal(type=INT64, value=3000000000)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: -3000000000,10000000000000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, UINT64) -> BOOL)
    |     +-Literal(type=INT64, value=-3000000000)
    |     +-Literal(type=UINT64, value=10000000000000000000)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: -3000000000,1.0
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Literal(type=DOUBLE, value=-3000000000)
    |     +-Literal(type=DOUBLE, value=1)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: -1,-3000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, INT64) -> BOOL)
    |     +-Literal(type=INT64, value=-1)
    |     +-Literal(type=INT64, value=-3000000000)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: -1,-1
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, INT64) -> BOOL)
    |     +-Literal(type=INT64, value=-1)
    |     +-Literal(type=INT64, value=-1)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: -1,1
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, INT64) -> BOOL)
    |     +-Literal(type=INT64, value=-1)
    |     +-Literal(type=INT64, value=1)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: -1,3000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, INT64) -> BOOL)
    |     +-Literal(type=INT64, value=-1)
    |     +-Literal(type=INT64, value=3000000000)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: -1,10000000000000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, UINT64) -> BOOL)
    |     +-Literal(type=INT64, value=-1)
    |     +-Literal(type=UINT64, value=10000000000000000000)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: -1,1.0
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Literal(type=DOUBLE, value=-1)
    |     +-Literal(type=DOUBLE, value=1)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 1,-3000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, INT64) -> BOOL)
    |     +-Literal(type=INT64, value=1)
    |     +-Literal(type=INT64, value=-3000000000)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 1,-1
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, INT64) -> BOOL)
    |     +-Literal(type=INT64, value=1)
    |     +-Literal(type=INT64, value=-1)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 1,1
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, INT64) -> BOOL)
    |     +-Literal(type=INT64, value=1)
    |     +-Literal(type=INT64, value=1)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 1,3000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, INT64) -> BOOL)
    |     +-Literal(type=INT64, value=1)
    |     +-Literal(type=INT64, value=3000000000)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 1,10000000000000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, UINT64) -> BOOL)
    |     +-Literal(type=INT64, value=1)
    |     +-Literal(type=UINT64, value=10000000000000000000)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUPS:
    1,1.0
    1.0,1
    1.0,1.0
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Literal(type=DOUBLE, value=1)
    |     +-Literal(type=DOUBLE, value=1)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 3000000000,-3000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, INT64) -> BOOL)
    |     +-Literal(type=INT64, value=3000000000)
    |     +-Literal(type=INT64, value=-3000000000)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 3000000000,-1
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, INT64) -> BOOL)
    |     +-Literal(type=INT64, value=3000000000)
    |     +-Literal(type=INT64, value=-1)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 3000000000,1
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, INT64) -> BOOL)
    |     +-Literal(type=INT64, value=3000000000)
    |     +-Literal(type=INT64, value=1)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 3000000000,3000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, INT64) -> BOOL)
    |     +-Literal(type=INT64, value=3000000000)
    |     +-Literal(type=INT64, value=3000000000)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 3000000000,10000000000000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(INT64, UINT64) -> BOOL)
    |     +-Literal(type=INT64, value=3000000000)
    |     +-Literal(type=UINT64, value=10000000000000000000)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 3000000000,1.0
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Literal(type=DOUBLE, value=3000000000)
    |     +-Literal(type=DOUBLE, value=1)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 10000000000000000000,-3000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(UINT64, INT64) -> BOOL)
    |     +-Literal(type=UINT64, value=10000000000000000000)
    |     +-Literal(type=INT64, value=-3000000000)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 10000000000000000000,-1
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(UINT64, INT64) -> BOOL)
    |     +-Literal(type=UINT64, value=10000000000000000000)
    |     +-Literal(type=INT64, value=-1)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 10000000000000000000,1
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(UINT64, INT64) -> BOOL)
    |     +-Literal(type=UINT64, value=10000000000000000000)
    |     +-Literal(type=INT64, value=1)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 10000000000000000000,3000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(UINT64, INT64) -> BOOL)
    |     +-Literal(type=UINT64, value=10000000000000000000)
    |     +-Literal(type=INT64, value=3000000000)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 10000000000000000000,10000000000000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(UINT64, UINT64) -> BOOL)
    |     +-Literal(type=UINT64, value=10000000000000000000)
    |     +-Literal(type=UINT64, value=10000000000000000000)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 10000000000000000000,1.0
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Literal(type=DOUBLE, value=1e+19)
    |     +-Literal(type=DOUBLE, value=1)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 1.0,-3000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Literal(type=DOUBLE, value=1)
    |     +-Literal(type=DOUBLE, value=-3000000000)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 1.0,-1
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Literal(type=DOUBLE, value=1)
    |     +-Literal(type=DOUBLE, value=-1)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 1.0,3000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Literal(type=DOUBLE, value=1)
    |     +-Literal(type=DOUBLE, value=3000000000)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUP: 1.0,10000000000000000000
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS "$col1" [BOOL]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 :=
    |   +-FunctionCall(ZetaSQL:$equal(DOUBLE, DOUBLE) -> BOOL)
    |     +-Literal(type=DOUBLE, value=1)
    |     +-Literal(type=DOUBLE, value=1e+19)
    +-input_scan=
      +-SingleRowScan
