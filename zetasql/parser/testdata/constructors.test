select new x()
--
QueryStatement [0-14] [select new x()]
  Query [0-14] [select new x()]
    Select [0-14] [select new x()]
      SelectList [7-14] [new x()]
        SelectColumn [7-14] [new x()]
          NewConstructor [7-14] [new x()]
            SimpleType [11-12] [x]
              PathExpression [11-12] [x]
                Identifier(x) [11-12] [x]
--
SELECT
  NEW x()
==

select new a.b.c.d(5)
--
QueryStatement [0-21] [select new a.b.c.d(5)]
  Query [0-21] [select new a.b.c.d(5)]
    Select [0-21] [select new a.b.c.d(5)]
      SelectList [7-21] [new a.b.c.d(5)]
        SelectColumn [7-21] [new a.b.c.d(5)]
          NewConstructor [7-21] [new a.b.c.d(5)]
            SimpleType [11-18] [a.b.c.d]
              PathExpression [11-18] [a.b.c.d]
                Identifier(a) [11-12] [a]
                Identifier(b) [13-14] [b]
                Identifier(c) [15-16] [c]
                Identifier(d) [17-18] [d]
            NewConstructorArg [19-20] [5]
              IntLiteral(5) [19-20] [5]
--
SELECT
  NEW a.b.c.d(5)
==

select new a.b(x+y, @p, @@sysvar)
--
QueryStatement [0-33] [select new...@@sysvar)]
  Query [0-33] [select new...@@sysvar)]
    Select [0-33] [select new...@@sysvar)]
      SelectList [7-33] [new a.b(x+y, @p, @@sysvar)]
        SelectColumn [7-33] [new a.b(x+y, @p, @@sysvar)]
          NewConstructor [7-33] [new a.b(x+y, @p, @@sysvar)]
            SimpleType [11-14] [a.b]
              PathExpression [11-14] [a.b]
                Identifier(a) [11-12] [a]
                Identifier(b) [13-14] [b]
            NewConstructorArg [15-18] [x+y]
              BinaryExpression(+) [15-18] [x+y]
                PathExpression [15-16] [x]
                  Identifier(x) [15-16] [x]
                PathExpression [17-18] [y]
                  Identifier(y) [17-18] [y]
            NewConstructorArg [20-22] [@p]
              ParameterExpr [20-22] [@p]
                Identifier(p) [21-22] [p]
            NewConstructorArg [24-32] [@@sysvar]
              SystemVariableExpr [24-32] [@@sysvar]
                PathExpression [26-32] [sysvar]
                  Identifier(sysvar) [26-32] [sysvar]
--
SELECT
  NEW a.b(x + y, @p, @@sysvar)
==

select new a.b(1 as x, y as z)
--
QueryStatement [0-30] [select new a.b(1 as x, y as z)]
  Query [0-30] [select new a.b(1 as x, y as z)]
    Select [0-30] [select new a.b(1 as x, y as z)]
      SelectList [7-30] [new a.b(1 as x, y as z)]
        SelectColumn [7-30] [new a.b(1 as x, y as z)]
          NewConstructor [7-30] [new a.b(1 as x, y as z)]
            SimpleType [11-14] [a.b]
              PathExpression [11-14] [a.b]
                Identifier(a) [11-12] [a]
                Identifier(b) [13-14] [b]
            NewConstructorArg [15-21] [1 as x]
              IntLiteral(1) [15-16] [1]
              Identifier(x) [20-21] [x]
            NewConstructorArg [23-29] [y as z]
              PathExpression [23-24] [y]
                Identifier(y) [23-24] [y]
              Identifier(z) [28-29] [z]
--
SELECT
  NEW a.b(1 AS x, y AS z)
==

# AS is required if there is an alias.
select new a.b(1 as x, y z)
--
ERROR: Syntax error: Expected ")" or "," but got identifier "z" [at 1:26]
select new a.b(1 as x, y z)
                         ^
==

# Path expressions must be parenthesized.
select new a.b(1 as x, y as foo.bar)
--
ERROR: Syntax error: Expected ")" or "," but got "." [at 1:32]
select new a.b(1 as x, y as foo.bar)
                               ^
==

select new a.b(1 as x, y as (foo))
--
QueryStatement [0-34] [select new...as (foo))]
  Query [0-34] [select new...as (foo))]
    Select [0-34] [select new...as (foo))]
      SelectList [7-34] [new a.b(1 as x, y as (foo))]
        SelectColumn [7-34] [new a.b(1 as x, y as (foo))]
          NewConstructor [7-34] [new a.b(1 as x, y as (foo))]
            SimpleType [11-14] [a.b]
              PathExpression [11-14] [a.b]
                Identifier(a) [11-12] [a]
                Identifier(b) [13-14] [b]
            NewConstructorArg [15-21] [1 as x]
              IntLiteral(1) [15-16] [1]
              Identifier(x) [20-21] [x]
            NewConstructorArg [23-33] [y as (foo)]
              PathExpression [23-24] [y]
                Identifier(y) [23-24] [y]
              PathExpression [29-32] [foo]
                Identifier(foo) [29-32] [foo]
--
SELECT
  NEW a.b(1 AS x, y AS (foo))
==

select new a.b(1 as x, y as (foo.bar))
--
QueryStatement [0-38] [select new...(foo.bar))]
  Query [0-38] [select new...(foo.bar))]
    Select [0-38] [select new...(foo.bar))]
      SelectList [7-38] [new a.b(1...(foo.bar))]
        SelectColumn [7-38] [new a.b(1...(foo.bar))]
          NewConstructor [7-38] [new a.b(1...(foo.bar))]
            SimpleType [11-14] [a.b]
              PathExpression [11-14] [a.b]
                Identifier(a) [11-12] [a]
                Identifier(b) [13-14] [b]
            NewConstructorArg [15-21] [1 as x]
              IntLiteral(1) [15-16] [1]
              Identifier(x) [20-21] [x]
            NewConstructorArg [23-37] [y as (foo.bar)]
              PathExpression [23-24] [y]
                Identifier(y) [23-24] [y]
              PathExpression [29-36] [foo.bar]
                Identifier(foo) [29-32] [foo]
                Identifier(bar) [33-36] [bar]
--
SELECT
  NEW a.b(1 AS x, y AS (foo.bar))

==

select 1 + new `x y`().field
--
QueryStatement [0-28] [select 1 + new `x y`().field]
  Query [0-28] [select 1 + new `x y`().field]
    Select [0-28] [select 1 + new `x y`().field]
      SelectList [7-28] [1 + new `x y`().field]
        SelectColumn [7-28] [1 + new `x y`().field]
          BinaryExpression(+) [7-28] [1 + new `x y`().field]
            IntLiteral(1) [7-8] [1]
            DotIdentifier [11-28] [new `x y`().field]
              NewConstructor [11-22] [new `x y`()]
                SimpleType [15-20] [`x y`]
                  PathExpression [15-20] [`x y`]
                    Identifier("x y") [15-20] [`x y`]
              Identifier(field) [23-28] [field]
--
SELECT
  1 + NEW `x y`().field
==

select new abc
--
ERROR: Syntax error: Expected "(" or "{" but got end of statement [at 1:15]
select new abc
              ^
==

select new abc.
--
ERROR: Syntax error: Unexpected end of statement [at 1:16]
select new abc.
               ^
==

select new abc.(
--
ERROR: Syntax error: Unexpected "(" [at 1:16]
select new abc.(
               ^
==

select new
--
ERROR: Syntax error: Unexpected end of statement [at 1:11]
select new
          ^
==

# Only named types are allowed.
select new array<int32>(5)
--
ERROR: Syntax error: Unexpected keyword ARRAY [at 1:12]
select new array<int32>(5)
           ^
==

select new struct<int32>(6)
--
ERROR: Syntax error: Unexpected keyword STRUCT [at 1:12]
select new struct<int32>(6)
           ^
==

select new struct(5)
--
ERROR: Syntax error: Unexpected keyword STRUCT [at 1:12]
select new struct(5)
           ^
