# Tests for the FROM clause, including all join varieties and combinations.
select a as c, b as d from Table1 as T1 inner join Table2 T2 on(T1.c = T2.c);
--
QueryStatement [0-76] [select a as....c = T2.c)]
  Query [0-76] [select a as....c = T2.c)]
    Select [0-76] [select a as....c = T2.c)]
      SelectList [7-21] [a as c, b as d]
        SelectColumn [7-13] [a as c]
          PathExpression [7-8] [a]
            Identifier(a) [7-8] [a]
          Alias [9-13] [as c]
            Identifier(c) [12-13] [c]
        SelectColumn [15-21] [b as d]
          PathExpression [15-16] [b]
            Identifier(b) [15-16] [b]
          Alias [17-21] [as d]
            Identifier(d) [20-21] [d]
      FromClause [22-76] [from Table1....c = T2.c)]
        Join(INNER) [27-76] [Table1 as....c = T2.c)]
          TablePathExpression [27-39] [Table1 as T1]
            PathExpression [27-33] [Table1]
              Identifier(Table1) [27-33] [Table1]
            Alias [34-39] [as T1]
              Identifier(T1) [37-39] [T1]
          Location [40-50] [inner join]
          TablePathExpression [51-60] [Table2 T2]
            PathExpression [51-57] [Table2]
              Identifier(Table2) [51-57] [Table2]
            Alias [58-60] [T2]
              Identifier(T2) [58-60] [T2]
          OnClause [61-76] [on(T1.c = T2.c)]
            BinaryExpression(=) [64-75] [T1.c = T2.c]
              PathExpression [64-68] [T1.c]
                Identifier(T1) [64-66] [T1]
                Identifier(c) [67-68] [c]
              PathExpression [71-75] [T2.c]
                Identifier(T2) [71-73] [T2]
                Identifier(c) [74-75] [c]
--
SELECT
  a AS c,
  b AS d
FROM
  Table1 AS T1
  INNER JOIN
  Table2 AS T2
  ON (T1.c = T2.c)
==

select T1.a as a, T2.b as b from Table1 as T1 left join Table2 T2 using (c, d);
--
QueryStatement [0-78] [select T1....using (c, d)]
  Query [0-78] [select T1....using (c, d)]
    Select [0-78] [select T1....using (c, d)]
      SelectList [7-27] [T1.a as a, T2.b as b]
        SelectColumn [7-16] [T1.a as a]
          PathExpression [7-11] [T1.a]
            Identifier(T1) [7-9] [T1]
            Identifier(a) [10-11] [a]
          Alias [12-16] [as a]
            Identifier(a) [15-16] [a]
        SelectColumn [18-27] [T2.b as b]
          PathExpression [18-22] [T2.b]
            Identifier(T2) [18-20] [T2]
            Identifier(b) [21-22] [b]
          Alias [23-27] [as b]
            Identifier(b) [26-27] [b]
      FromClause [28-78] [from Table1...using (c, d)]
        Join(LEFT) [33-78] [Table1 as...using (c, d)]
          TablePathExpression [33-45] [Table1 as T1]
            PathExpression [33-39] [Table1]
              Identifier(Table1) [33-39] [Table1]
            Alias [40-45] [as T1]
              Identifier(T1) [43-45] [T1]
          Location [46-55] [left join]
          TablePathExpression [56-65] [Table2 T2]
            PathExpression [56-62] [Table2]
              Identifier(Table2) [56-62] [Table2]
            Alias [63-65] [T2]
              Identifier(T2) [63-65] [T2]
          UsingClause [66-78] [using (c, d)]
            Identifier(c) [73-74] [c]
            Identifier(d) [76-77] [d]
--
SELECT
  T1.a AS a,
  T2.b AS b
FROM
  Table1 AS T1
  LEFT JOIN
  Table2 AS T2
  USING(c, d)
==

select a as x, b as y from Table1 as T1 inner join
    Table2 T2 on T2.x = T3.y join Table3 as T3 using(c);
--
QueryStatement [0-106] [select a as...T3 using(c)]
  Query [0-106] [select a as...T3 using(c)]
    Select [0-106] [select a as...T3 using(c)]
      SelectList [7-21] [a as x, b as y]
        SelectColumn [7-13] [a as x]
          PathExpression [7-8] [a]
            Identifier(a) [7-8] [a]
          Alias [9-13] [as x]
            Identifier(x) [12-13] [x]
        SelectColumn [15-21] [b as y]
          PathExpression [15-16] [b]
            Identifier(b) [15-16] [b]
          Alias [17-21] [as y]
            Identifier(y) [20-21] [y]
      FromClause [22-106] [from Table1...T3 using(c)]
        Join [27-106] [Table1 as...T3 using(c)]
          Join(INNER) [27-79] [Table1 as...T2.x = T3.y]
            TablePathExpression [27-39] [Table1 as T1]
              PathExpression [27-33] [Table1]
                Identifier(Table1) [27-33] [Table1]
              Alias [34-39] [as T1]
                Identifier(T1) [37-39] [T1]
            Location [40-50] [inner join]
            TablePathExpression [55-64] [Table2 T2]
              PathExpression [55-61] [Table2]
                Identifier(Table2) [55-61] [Table2]
              Alias [62-64] [T2]
                Identifier(T2) [62-64] [T2]
            OnClause [65-79] [on T2.x = T3.y]
              BinaryExpression(=) [68-79] [T2.x = T3.y]
                PathExpression [68-72] [T2.x]
                  Identifier(T2) [68-70] [T2]
                  Identifier(x) [71-72] [x]
                PathExpression [75-79] [T3.y]
                  Identifier(T3) [75-77] [T3]
                  Identifier(y) [78-79] [y]
          Location [80-84] [join]
          TablePathExpression [85-97] [Table3 as T3]
            PathExpression [85-91] [Table3]
              Identifier(Table3) [85-91] [Table3]
            Alias [92-97] [as T3]
              Identifier(T3) [95-97] [T3]
          UsingClause [98-106] [using(c)]
            Identifier(c) [104-105] [c]
--
SELECT
  a AS x,
  b AS y
FROM
  Table1 AS T1
  INNER JOIN
  Table2 AS T2
  ON T2.x = T3.y
  JOIN
  Table3 AS T3
  USING(c)
==

select T3.a as x, b as y from Table1 as T1 cross join
    Table2 T2 full outer join Table3 as T3 using(c);
--
QueryStatement [0-105] [select T3....T3 using(c)]
  Query [0-105] [select T3....T3 using(c)]
    Select [0-105] [select T3....T3 using(c)]
      SelectList [7-24] [T3.a as x, b as y]
        SelectColumn [7-16] [T3.a as x]
          PathExpression [7-11] [T3.a]
            Identifier(T3) [7-9] [T3]
            Identifier(a) [10-11] [a]
          Alias [12-16] [as x]
            Identifier(x) [15-16] [x]
        SelectColumn [18-24] [b as y]
          PathExpression [18-19] [b]
            Identifier(b) [18-19] [b]
          Alias [20-24] [as y]
            Identifier(y) [23-24] [y]
      FromClause [25-105] [from Table1...T3 using(c)]
        Join(FULL) [30-105] [Table1 as...T3 using(c)]
          Join(CROSS) [30-67] [Table1 as...Table2 T2]
            TablePathExpression [30-42] [Table1 as T1]
              PathExpression [30-36] [Table1]
                Identifier(Table1) [30-36] [Table1]
              Alias [37-42] [as T1]
                Identifier(T1) [40-42] [T1]
            Location [43-53] [cross join]
            TablePathExpression [58-67] [Table2 T2]
              PathExpression [58-64] [Table2]
                Identifier(Table2) [58-64] [Table2]
              Alias [65-67] [T2]
                Identifier(T2) [65-67] [T2]
          Location [68-83] [full outer join]
          TablePathExpression [84-96] [Table3 as T3]
            PathExpression [84-90] [Table3]
              Identifier(Table3) [84-90] [Table3]
            Alias [91-96] [as T3]
              Identifier(T3) [94-96] [T3]
          UsingClause [97-105] [using(c)]
            Identifier(c) [103-104] [c]
--
SELECT
  T3.a AS x,
  b AS y
FROM
  Table1 AS T1
  CROSS JOIN
  Table2 AS T2
  FULL JOIN
  Table3 AS T3
  USING(c)
==

select a as a, b as b from Table1 as T1 inner join
    (Table2 T2 full join Table3 as T3 on T2.x = T3.y and T2.c = T3.c) using(c);
--
QueryStatement [0-129] [select a as...) using(c)]
  Query [0-129] [select a as...) using(c)]
    Select [0-129] [select a as...) using(c)]
      SelectList [7-21] [a as a, b as b]
        SelectColumn [7-13] [a as a]
          PathExpression [7-8] [a]
            Identifier(a) [7-8] [a]
          Alias [9-13] [as a]
            Identifier(a) [12-13] [a]
        SelectColumn [15-21] [b as b]
          PathExpression [15-16] [b]
            Identifier(b) [15-16] [b]
          Alias [17-21] [as b]
            Identifier(b) [20-21] [b]
      FromClause [22-129] [from Table1...) using(c)]
        Join(INNER) [27-129] [Table1 as...) using(c)]
          TablePathExpression [27-39] [Table1 as T1]
            PathExpression [27-33] [Table1]
              Identifier(Table1) [27-33] [Table1]
            Alias [34-39] [as T1]
              Identifier(T1) [37-39] [T1]
          Location [40-50] [inner join]
          ParenthesizedJoin [55-120] [(Table2 T2....c = T3.c)]
            Join(FULL) [56-119] [Table2 T2...T2.c = T3.c]
              TablePathExpression [56-65] [Table2 T2]
                PathExpression [56-62] [Table2]
                  Identifier(Table2) [56-62] [Table2]
                Alias [63-65] [T2]
                  Identifier(T2) [63-65] [T2]
              Location [66-75] [full join]
              TablePathExpression [76-88] [Table3 as T3]
                PathExpression [76-82] [Table3]
                  Identifier(Table3) [76-82] [Table3]
                Alias [83-88] [as T3]
                  Identifier(T3) [86-88] [T3]
              OnClause [89-119] [on T2.x = T3.y and T2.c = T3.c]
                AndExpr [92-119] [T2.x = T3.y and T2.c = T3.c]
                  BinaryExpression(=) [92-103] [T2.x = T3.y]
                    PathExpression [92-96] [T2.x]
                      Identifier(T2) [92-94] [T2]
                      Identifier(x) [95-96] [x]
                    PathExpression [99-103] [T3.y]
                      Identifier(T3) [99-101] [T3]
                      Identifier(y) [102-103] [y]
                  BinaryExpression(=) [108-119] [T2.c = T3.c]
                    PathExpression [108-112] [T2.c]
                      Identifier(T2) [108-110] [T2]
                      Identifier(c) [111-112] [c]
                    PathExpression [115-119] [T3.c]
                      Identifier(T3) [115-117] [T3]
                      Identifier(c) [118-119] [c]
          UsingClause [121-129] [using(c)]
            Identifier(c) [127-128] [c]
--
SELECT
  a AS a,
  b AS b
FROM
  Table1 AS T1
  INNER JOIN
  (
    Table2 AS T2
    FULL JOIN
    Table3 AS T3
    ON T2.x = T3.y AND T2.c = T3.c
  )
  USING(c)
==

select T1.a as a, T2.b as b from Table1 T1 cross join Table2 as T2;
--
QueryStatement [0-66] [select T1....Table2 as T2]
  Query [0-66] [select T1....Table2 as T2]
    Select [0-66] [select T1....Table2 as T2]
      SelectList [7-27] [T1.a as a, T2.b as b]
        SelectColumn [7-16] [T1.a as a]
          PathExpression [7-11] [T1.a]
            Identifier(T1) [7-9] [T1]
            Identifier(a) [10-11] [a]
          Alias [12-16] [as a]
            Identifier(a) [15-16] [a]
        SelectColumn [18-27] [T2.b as b]
          PathExpression [18-22] [T2.b]
            Identifier(T2) [18-20] [T2]
            Identifier(b) [21-22] [b]
          Alias [23-27] [as b]
            Identifier(b) [26-27] [b]
      FromClause [28-66] [from Table1...Table2 as T2]
        Join(CROSS) [33-66] [Table1 T1...Table2 as T2]
          TablePathExpression [33-42] [Table1 T1]
            PathExpression [33-39] [Table1]
              Identifier(Table1) [33-39] [Table1]
            Alias [40-42] [T1]
              Identifier(T1) [40-42] [T1]
          Location [43-53] [cross join]
          TablePathExpression [54-66] [Table2 as T2]
            PathExpression [54-60] [Table2]
              Identifier(Table2) [54-60] [Table2]
            Alias [61-66] [as T2]
              Identifier(T2) [64-66] [T2]
--
SELECT
  T1.a AS a,
  T2.b AS b
FROM
  Table1 AS T1
  CROSS JOIN
  Table2 AS T2
==

select T1.a as a, T2.b as b from Table1 T1, Table2 as T2, Table3, Table4;
--
QueryStatement [0-72] [select T1....Table3, Table4]
  Query [0-72] [select T1....Table3, Table4]
    Select [0-72] [select T1....Table3, Table4]
      SelectList [7-27] [T1.a as a, T2.b as b]
        SelectColumn [7-16] [T1.a as a]
          PathExpression [7-11] [T1.a]
            Identifier(T1) [7-9] [T1]
            Identifier(a) [10-11] [a]
          Alias [12-16] [as a]
            Identifier(a) [15-16] [a]
        SelectColumn [18-27] [T2.b as b]
          PathExpression [18-22] [T2.b]
            Identifier(T2) [18-20] [T2]
            Identifier(b) [21-22] [b]
          Alias [23-27] [as b]
            Identifier(b) [26-27] [b]
      FromClause [28-72] [from Table1...Table3, Table4]
        Join(COMMA) [33-72] [Table1 T1,...Table3, Table4]
          Join(COMMA) [33-64] [Table1 T1,...T2, Table3]
            Join(COMMA) [33-56] [Table1 T1, Table2 as T2]
              TablePathExpression [33-42] [Table1 T1]
                PathExpression [33-39] [Table1]
                  Identifier(Table1) [33-39] [Table1]
                Alias [40-42] [T1]
                  Identifier(T1) [40-42] [T1]
              Location [42-43] [,]
              TablePathExpression [44-56] [Table2 as T2]
                PathExpression [44-50] [Table2]
                  Identifier(Table2) [44-50] [Table2]
                Alias [51-56] [as T2]
                  Identifier(T2) [54-56] [T2]
            Location [56-57] [,]
            TablePathExpression [58-64] [Table3]
              PathExpression [58-64] [Table3]
                Identifier(Table3) [58-64] [Table3]
          Location [64-65] [,]
          TablePathExpression [66-72] [Table4]
            PathExpression [66-72] [Table4]
              Identifier(Table4) [66-72] [Table4]
--
SELECT
  T1.a AS a,
  T2.b AS b
FROM
  Table1 AS T1,
  Table2 AS T2,
  Table3,
  Table4
==

select T1.a as a, T2.b as b
from Table1 T1,
     (Table2 as T2 full join Table3 T3 on(T1.x = T3.y));
--
QueryStatement [0-99] [select T1....x = T3.y))]
  Query [0-99] [select T1....x = T3.y))]
    Select [0-99] [select T1....x = T3.y))]
      SelectList [7-27] [T1.a as a, T2.b as b]
        SelectColumn [7-16] [T1.a as a]
          PathExpression [7-11] [T1.a]
            Identifier(T1) [7-9] [T1]
            Identifier(a) [10-11] [a]
          Alias [12-16] [as a]
            Identifier(a) [15-16] [a]
        SelectColumn [18-27] [T2.b as b]
          PathExpression [18-22] [T2.b]
            Identifier(T2) [18-20] [T2]
            Identifier(b) [21-22] [b]
          Alias [23-27] [as b]
            Identifier(b) [26-27] [b]
      FromClause [28-99] [from Table1...x = T3.y))]
        Join(COMMA) [33-99] [Table1 T1,...x = T3.y))]
          TablePathExpression [33-42] [Table1 T1]
            PathExpression [33-39] [Table1]
              Identifier(Table1) [33-39] [Table1]
            Alias [40-42] [T1]
              Identifier(T1) [40-42] [T1]
          Location [42-43] [,]
          ParenthesizedJoin [49-99] [(Table2 as...x = T3.y))]
            Join(FULL) [50-98] [Table2 as....x = T3.y)]
              TablePathExpression [50-62] [Table2 as T2]
                PathExpression [50-56] [Table2]
                  Identifier(Table2) [50-56] [Table2]
                Alias [57-62] [as T2]
                  Identifier(T2) [60-62] [T2]
              Location [63-72] [full join]
              TablePathExpression [73-82] [Table3 T3]
                PathExpression [73-79] [Table3]
                  Identifier(Table3) [73-79] [Table3]
                Alias [80-82] [T3]
                  Identifier(T3) [80-82] [T3]
              OnClause [83-98] [on(T1.x = T3.y)]
                BinaryExpression(=) [86-97] [T1.x = T3.y]
                  PathExpression [86-90] [T1.x]
                    Identifier(T1) [86-88] [T1]
                    Identifier(x) [89-90] [x]
                  PathExpression [93-97] [T3.y]
                    Identifier(T3) [93-95] [T3]
                    Identifier(y) [96-97] [y]
--
SELECT
  T1.a AS a,
  T2.b AS b
FROM
  Table1 AS T1,
  (
    Table2 AS T2
    FULL JOIN
    Table3 AS T3
    ON (T1.x = T3.y)
  )
==

select x, y from Table1 T1, Table2 T2 join Table3 T3 using (x);
--
QueryStatement [0-62] [select x,...using (x)]
  Query [0-62] [select x,...using (x)]
    Select [0-62] [select x,...using (x)]
      SelectList [7-11] [x, y]
        SelectColumn [7-8] [x]
          PathExpression [7-8] [x]
            Identifier(x) [7-8] [x]
        SelectColumn [10-11] [y]
          PathExpression [10-11] [y]
            Identifier(y) [10-11] [y]
      FromClause [12-62] [from Table1...using (x)]
        Join [17-62] [Table1 T1,...using (x)]
          Join(COMMA) [17-37] [Table1 T1, Table2 T2]
            TablePathExpression [17-26] [Table1 T1]
              PathExpression [17-23] [Table1]
                Identifier(Table1) [17-23] [Table1]
              Alias [24-26] [T1]
                Identifier(T1) [24-26] [T1]
            Location [26-27] [,]
            TablePathExpression [28-37] [Table2 T2]
              PathExpression [28-34] [Table2]
                Identifier(Table2) [28-34] [Table2]
              Alias [35-37] [T2]
                Identifier(T2) [35-37] [T2]
          Location [38-42] [join]
          TablePathExpression [43-52] [Table3 T3]
            PathExpression [43-49] [Table3]
              Identifier(Table3) [43-49] [Table3]
            Alias [50-52] [T3]
              Identifier(T3) [50-52] [T3]
          UsingClause [53-62] [using (x)]
            Identifier(x) [60-61] [x]
--
SELECT
  x,
  y
FROM
  Table1 AS T1,
  Table2 AS T2
  JOIN
  Table3 AS T3
  USING(x)
==

select x, y from Table1 T1 right join Table2 T2 on(T1.x = T2.y), Table3 T3
--
QueryStatement [0-74] [select x,...Table3 T3]
  Query [0-74] [select x,...Table3 T3]
    Select [0-74] [select x,...Table3 T3]
      SelectList [7-11] [x, y]
        SelectColumn [7-8] [x]
          PathExpression [7-8] [x]
            Identifier(x) [7-8] [x]
        SelectColumn [10-11] [y]
          PathExpression [10-11] [y]
            Identifier(y) [10-11] [y]
      FromClause [12-74] [from Table1...Table3 T3]
        Join(COMMA) [17-74] [Table1 T1...Table3 T3]
          Join(RIGHT) [17-63] [Table1 T1....x = T2.y)]
            TablePathExpression [17-26] [Table1 T1]
              PathExpression [17-23] [Table1]
                Identifier(Table1) [17-23] [Table1]
              Alias [24-26] [T1]
                Identifier(T1) [24-26] [T1]
            Location [27-37] [right join]
            TablePathExpression [38-47] [Table2 T2]
              PathExpression [38-44] [Table2]
                Identifier(Table2) [38-44] [Table2]
              Alias [45-47] [T2]
                Identifier(T2) [45-47] [T2]
            OnClause [48-63] [on(T1.x = T2.y)]
              BinaryExpression(=) [51-62] [T1.x = T2.y]
                PathExpression [51-55] [T1.x]
                  Identifier(T1) [51-53] [T1]
                  Identifier(x) [54-55] [x]
                PathExpression [58-62] [T2.y]
                  Identifier(T2) [58-60] [T2]
                  Identifier(y) [61-62] [y]
          Location [63-64] [,]
          TablePathExpression [65-74] [Table3 T3]
            PathExpression [65-71] [Table3]
              Identifier(Table3) [65-71] [Table3]
            Alias [72-74] [T3]
              Identifier(T3) [72-74] [T3]
--
SELECT
  x,
  y
FROM
  Table1 AS T1
  RIGHT JOIN
  Table2 AS T2
  ON (T1.x = T2.y),
  Table3 AS T3
==

select x, y from Table1 T1 natural left outer join Table2 T2 on T1.x = T2.y;
--
QueryStatement [0-75] [select x,...T1.x = T2.y]
  Query [0-75] [select x,...T1.x = T2.y]
    Select [0-75] [select x,...T1.x = T2.y]
      SelectList [7-11] [x, y]
        SelectColumn [7-8] [x]
          PathExpression [7-8] [x]
            Identifier(x) [7-8] [x]
        SelectColumn [10-11] [y]
          PathExpression [10-11] [y]
            Identifier(y) [10-11] [y]
      FromClause [12-75] [from Table1...T1.x = T2.y]
        Join(NATURAL, LEFT) [17-75] [Table1 T1...T1.x = T2.y]
          TablePathExpression [17-26] [Table1 T1]
            PathExpression [17-23] [Table1]
              Identifier(Table1) [17-23] [Table1]
            Alias [24-26] [T1]
              Identifier(T1) [24-26] [T1]
          Location [27-50] [natural left outer join]
          TablePathExpression [51-60] [Table2 T2]
            PathExpression [51-57] [Table2]
              Identifier(Table2) [51-57] [Table2]
            Alias [58-60] [T2]
              Identifier(T2) [58-60] [T2]
          OnClause [61-75] [on T1.x = T2.y]
            BinaryExpression(=) [64-75] [T1.x = T2.y]
              PathExpression [64-68] [T1.x]
                Identifier(T1) [64-66] [T1]
                Identifier(x) [67-68] [x]
              PathExpression [71-75] [T2.y]
                Identifier(T2) [71-73] [T2]
                Identifier(y) [74-75] [y]
--
SELECT
  x,
  y
FROM
  Table1 AS T1
  NATURAL LEFT JOIN
  Table2 AS T2
  ON T1.x = T2.y
==

select x + y, true FROM b join c, d join e;
--
QueryStatement [0-42] [select x +..., d join e]
  Query [0-42] [select x +..., d join e]
    Select [0-42] [select x +..., d join e]
      SelectList [7-18] [x + y, true]
        SelectColumn [7-12] [x + y]
          BinaryExpression(+) [7-12] [x + y]
            PathExpression [7-8] [x]
              Identifier(x) [7-8] [x]
            PathExpression [11-12] [y]
              Identifier(y) [11-12] [y]
        SelectColumn [14-18] [true]
          BooleanLiteral(true) [14-18] [true]
      FromClause [19-42] [FROM b join c, d join e]
        Join [24-42] [b join c, d join e]
          Join(COMMA) [24-35] [b join c, d]
            Join [24-32] [b join c]
              TablePathExpression [24-25] [b]
                PathExpression [24-25] [b]
                  Identifier(b) [24-25] [b]
              Location [26-30] [join]
              TablePathExpression [31-32] [c]
                PathExpression [31-32] [c]
                  Identifier(c) [31-32] [c]
            Location [32-33] [,]
            TablePathExpression [34-35] [d]
              PathExpression [34-35] [d]
                Identifier(d) [34-35] [d]
          Location [36-40] [join]
          TablePathExpression [41-42] [e]
            PathExpression [41-42] [e]
              Identifier(e) [41-42] [e]
--
SELECT
  x + y,
  true
FROM
  b
  JOIN
  c,
  d
  JOIN
  e
==

select x, y as z from ((a join b) join (c join d) join e);
--
QueryStatement [0-57] [select x,...d) join e)]
  Query [0-57] [select x,...d) join e)]
    Select [0-57] [select x,...d) join e)]
      SelectList [7-16] [x, y as z]
        SelectColumn [7-8] [x]
          PathExpression [7-8] [x]
            Identifier(x) [7-8] [x]
        SelectColumn [10-16] [y as z]
          PathExpression [10-11] [y]
            Identifier(y) [10-11] [y]
          Alias [12-16] [as z]
            Identifier(z) [15-16] [z]
      FromClause [17-57] [from ((a join...d) join e)]
        ParenthesizedJoin [22-57] [((a join b...d) join e)]
          Join [23-56] [(a join b)...d) join e]
            Join [23-49] [(a join b) join (c join d)]
              ParenthesizedJoin [23-33] [(a join b)]
                Join [24-32] [a join b]
                  TablePathExpression [24-25] [a]
                    PathExpression [24-25] [a]
                      Identifier(a) [24-25] [a]
                  Location [26-30] [join]
                  TablePathExpression [31-32] [b]
                    PathExpression [31-32] [b]
                      Identifier(b) [31-32] [b]
              Location [34-38] [join]
              ParenthesizedJoin [39-49] [(c join d)]
                Join [40-48] [c join d]
                  TablePathExpression [40-41] [c]
                    PathExpression [40-41] [c]
                      Identifier(c) [40-41] [c]
                  Location [42-46] [join]
                  TablePathExpression [47-48] [d]
                    PathExpression [47-48] [d]
                      Identifier(d) [47-48] [d]
            Location [50-54] [join]
            TablePathExpression [55-56] [e]
              PathExpression [55-56] [e]
                Identifier(e) [55-56] [e]
--
SELECT
  x,
  y AS z
FROM
  (
    (
      a
      JOIN
      b
    )
    JOIN
    (
      c
      JOIN
      d
    )
    JOIN
    e
  )
==

select * from (((t1)))
--
ERROR: Syntax error: Expected keyword JOIN but got ")" [at 1:20]
select * from (((t1)))
                   ^
==

select * from (((select 1)))
--
QueryStatement [0-28] [select * from (((select 1)))]
  Query [0-28] [select * from (((select 1)))]
    Select [0-28] [select * from (((select 1)))]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-28] [from (((select 1)))]
        TableSubquery [14-28] [(((select 1)))]
          Query [17-25] [select 1]
            Select [17-25] [select 1]
              SelectList [24-25] [1]
                SelectColumn [24-25] [1]
                  IntLiteral(1) [24-25] [1]
--
SELECT
  *
FROM
  (
    SELECT
      1
  )
==

select * from ( (((select 1))) join ( ((select 2)) join ((T)) ) )
--
ERROR: Syntax error: Expected keyword JOIN but got ")" [at 1:60]
select * from ( (((select 1))) join ( ((select 2)) join ((T)) ) )
                                                           ^
==

select 1
from a LEFT OUTER JOIN b,
     (c RIGHT JOIN d),
     (e FULL JOIN f)
--
QueryStatement [0-78] [select 1 from...FULL JOIN f)]
  Query [0-78] [select 1 from...FULL JOIN f)]
    Select [0-78] [select 1 from...FULL JOIN f)]
      SelectList [7-8] [1]
        SelectColumn [7-8] [1]
          IntLiteral(1) [7-8] [1]
      FromClause [9-78] [from a LEFT...FULL JOIN f)]
        Join(COMMA) [14-78] [a LEFT OUTER...FULL JOIN f)]
          Join(COMMA) [14-56] [a LEFT OUTER...RIGHT JOIN d)]
            Join(LEFT) [14-33] [a LEFT OUTER JOIN b]
              TablePathExpression [14-15] [a]
                PathExpression [14-15] [a]
                  Identifier(a) [14-15] [a]
              Location [16-31] [LEFT OUTER JOIN]
              TablePathExpression [32-33] [b]
                PathExpression [32-33] [b]
                  Identifier(b) [32-33] [b]
            Location [33-34] [,]
            ParenthesizedJoin [40-56] [(c RIGHT JOIN d)]
              Join(RIGHT) [41-55] [c RIGHT JOIN d]
                TablePathExpression [41-42] [c]
                  PathExpression [41-42] [c]
                    Identifier(c) [41-42] [c]
                Location [43-53] [RIGHT JOIN]
                TablePathExpression [54-55] [d]
                  PathExpression [54-55] [d]
                    Identifier(d) [54-55] [d]
          Location [56-57] [,]
          ParenthesizedJoin [63-78] [(e FULL JOIN f)]
            Join(FULL) [64-77] [e FULL JOIN f]
              TablePathExpression [64-65] [e]
                PathExpression [64-65] [e]
                  Identifier(e) [64-65] [e]
              Location [66-75] [FULL JOIN]
              TablePathExpression [76-77] [f]
                PathExpression [76-77] [f]
                  Identifier(f) [76-77] [f]
--
SELECT
  1
FROM
  a
  LEFT JOIN
  b,
  (
    c
    RIGHT JOIN
    d
  ),
  (
    e
    FULL JOIN
    f
  )
==

# No comma join inside parentheses.
select * from (A, B)
--
ERROR: Syntax error: Expected keyword JOIN but got "," [at 1:17]
select * from (A, B)
                ^
==

# No comma join inside parentheses.
select * from A, B JOIN (C, D)
--
ERROR: Syntax error: Expected keyword JOIN but got "," [at 1:27]
select * from A, B JOIN (C, D)
                          ^
==

# RIGHT JOIN and FULL JOIN require parentheses when following a comma join.
select * FROM A, B {{INNER|CROSS|LEFT|RIGHT|FULL}} JOIN C
--
ALTERNATION GROUP: INNER
--
QueryStatement [0-31] [select * FROM...INNER JOIN C]
  Query [0-31] [select * FROM...INNER JOIN C]
    Select [0-31] [select * FROM...INNER JOIN C]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-31] [FROM A, B INNER JOIN C]
        Join(INNER) [14-31] [A, B INNER JOIN C]
          Join(COMMA) [14-18] [A, B]
            TablePathExpression [14-15] [A]
              PathExpression [14-15] [A]
                Identifier(A) [14-15] [A]
            Location [15-16] [,]
            TablePathExpression [17-18] [B]
              PathExpression [17-18] [B]
                Identifier(B) [17-18] [B]
          Location [19-29] [INNER JOIN]
          TablePathExpression [30-31] [C]
            PathExpression [30-31] [C]
              Identifier(C) [30-31] [C]
--
SELECT
  *
FROM
  A,
  B
  INNER JOIN
  C
--
ALTERNATION GROUP: CROSS
--
QueryStatement [0-31] [select * FROM...CROSS JOIN C]
  Query [0-31] [select * FROM...CROSS JOIN C]
    Select [0-31] [select * FROM...CROSS JOIN C]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-31] [FROM A, B CROSS JOIN C]
        Join(CROSS) [14-31] [A, B CROSS JOIN C]
          Join(COMMA) [14-18] [A, B]
            TablePathExpression [14-15] [A]
              PathExpression [14-15] [A]
                Identifier(A) [14-15] [A]
            Location [15-16] [,]
            TablePathExpression [17-18] [B]
              PathExpression [17-18] [B]
                Identifier(B) [17-18] [B]
          Location [19-29] [CROSS JOIN]
          TablePathExpression [30-31] [C]
            PathExpression [30-31] [C]
              Identifier(C) [30-31] [C]
--
SELECT
  *
FROM
  A,
  B
  CROSS JOIN
  C
--
ALTERNATION GROUP: LEFT
--
QueryStatement [0-30] [select * FROM A, B LEFT JOIN C]
  Query [0-30] [select * FROM A, B LEFT JOIN C]
    Select [0-30] [select * FROM A, B LEFT JOIN C]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-30] [FROM A, B LEFT JOIN C]
        Join(LEFT) [14-30] [A, B LEFT JOIN C]
          Join(COMMA) [14-18] [A, B]
            TablePathExpression [14-15] [A]
              PathExpression [14-15] [A]
                Identifier(A) [14-15] [A]
            Location [15-16] [,]
            TablePathExpression [17-18] [B]
              PathExpression [17-18] [B]
                Identifier(B) [17-18] [B]
          Location [19-28] [LEFT JOIN]
          TablePathExpression [29-30] [C]
            PathExpression [29-30] [C]
              Identifier(C) [29-30] [C]
--
SELECT
  *
FROM
  A,
  B
  LEFT JOIN
  C
--
ALTERNATION GROUP: RIGHT
--
ERROR: Syntax error: RIGHT JOIN must be parenthesized when following a comma join.  Also, if the preceding comma join is a correlated CROSS JOIN that unnests an array, then CROSS JOIN syntax must be used in place of the comma join [at 1:20]
select * FROM A, B RIGHT JOIN C
                   ^
--
ALTERNATION GROUP: FULL
--
ERROR: Syntax error: FULL JOIN must be parenthesized when following a comma join.  Also, if the preceding comma join is a correlated CROSS JOIN that unnests an array, then CROSS JOIN syntax must be used in place of the comma join [at 1:20]
select * FROM A, B FULL JOIN C
                   ^
==

# Comma join error happens even after chains of other joins.
select * FROM A, B JOIN C FULL JOIN D
--
ERROR: Syntax error: FULL JOIN must be parenthesized when following a comma join.  Also, if the preceding comma join is a correlated CROSS JOIN that unnests an array, then CROSS JOIN syntax must be used in place of the comma join [at 1:27]
select * FROM A, B JOIN C FULL JOIN D
                          ^
==

# No RIGHT JOIN following a comma correlated CROSS JOIN that unnests an array.
select * from A, A.B RIGHT JOIN C USING (key)
--
ERROR: Syntax error: RIGHT JOIN must be parenthesized when following a comma join.  Also, if the preceding comma join is a correlated CROSS JOIN that unnests an array, then CROSS JOIN syntax must be used in place of the comma join [at 1:22]
select * from A, A.B RIGHT JOIN C USING (key)
                     ^
==

# Fix by parenthesizing the FULL JOIN.
select * FROM A, B JOIN (C FULL JOIN D)
--
QueryStatement [0-39] [select * FROM...FULL JOIN D)]
  Query [0-39] [select * FROM...FULL JOIN D)]
    Select [0-39] [select * FROM...FULL JOIN D)]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-39] [FROM A, B JOIN (C FULL JOIN D)]
        Join [14-39] [A, B JOIN (C FULL JOIN D)]
          Join(COMMA) [14-18] [A, B]
            TablePathExpression [14-15] [A]
              PathExpression [14-15] [A]
                Identifier(A) [14-15] [A]
            Location [15-16] [,]
            TablePathExpression [17-18] [B]
              PathExpression [17-18] [B]
                Identifier(B) [17-18] [B]
          Location [19-23] [JOIN]
          ParenthesizedJoin [24-39] [(C FULL JOIN D)]
            Join(FULL) [25-38] [C FULL JOIN D]
              TablePathExpression [25-26] [C]
                PathExpression [25-26] [C]
                  Identifier(C) [25-26] [C]
              Location [27-36] [FULL JOIN]
              TablePathExpression [37-38] [D]
                PathExpression [37-38] [D]
                  Identifier(D) [37-38] [D]
--
SELECT
  *
FROM
  A,
  B
  JOIN
  (
    C
    FULL JOIN
    D
  )
==

# Fix by parenthesizing the COMMA - doesn't work because comma can't be
# used inside parentheses.
select * FROM (A, B JOIN C) FULL JOIN D
--
ERROR: Syntax error: Expected keyword JOIN but got "," [at 1:17]
select * FROM (A, B JOIN C) FULL JOIN D
                ^
==

# Comma join error happens even after chains of other joins.
select * FROM A, B, C, D JOIN E LEFT JOIN F RIGHT JOIN G
--
ERROR: Syntax error: RIGHT JOIN must be parenthesized when following a comma join.  Also, if the preceding comma join is a correlated CROSS JOIN that unnests an array, then CROSS JOIN syntax must be used in place of the comma join [at 1:45]
select * FROM A, B, C, D JOIN E LEFT JOIN F RIGHT JOIN G
                                            ^
==

# Commas to the right of FULL/RIGHT join are okay.
select * FROM A RIGHT JOIN B FULL JOIN C, D LEFT JOIN E
--
QueryStatement [0-55] [select * FROM...LEFT JOIN E]
  Query [0-55] [select * FROM...LEFT JOIN E]
    Select [0-55] [select * FROM...LEFT JOIN E]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-55] [FROM A RIGHT...LEFT JOIN E]
        Join(LEFT) [14-55] [A RIGHT JOIN...LEFT JOIN E]
          Join(COMMA) [14-43] [A RIGHT JOIN B FULL JOIN C, D]
            Join(FULL) [14-40] [A RIGHT JOIN B FULL JOIN C]
              Join(RIGHT) [14-28] [A RIGHT JOIN B]
                TablePathExpression [14-15] [A]
                  PathExpression [14-15] [A]
                    Identifier(A) [14-15] [A]
                Location [16-26] [RIGHT JOIN]
                TablePathExpression [27-28] [B]
                  PathExpression [27-28] [B]
                    Identifier(B) [27-28] [B]
              Location [29-38] [FULL JOIN]
              TablePathExpression [39-40] [C]
                PathExpression [39-40] [C]
                  Identifier(C) [39-40] [C]
            Location [40-41] [,]
            TablePathExpression [42-43] [D]
              PathExpression [42-43] [D]
                Identifier(D) [42-43] [D]
          Location [44-53] [LEFT JOIN]
          TablePathExpression [54-55] [E]
            PathExpression [54-55] [E]
              Identifier(E) [54-55] [E]
--
SELECT
  *
FROM
  A
  RIGHT JOIN
  B
  FULL JOIN
  C,
  D
  LEFT JOIN
  E
==

select * from t1 LOOKUP JOIN t2
--
QueryStatement [0-31] [select * from...LOOKUP JOIN t2]
  Query [0-31] [select * from...LOOKUP JOIN t2]
    Select [0-31] [select * from...LOOKUP JOIN t2]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-31] [from t1 LOOKUP JOIN t2]
        Join(LOOKUP) [14-31] [t1 LOOKUP JOIN t2]
          TablePathExpression [14-16] [t1]
            PathExpression [14-16] [t1]
              Identifier(t1) [14-16] [t1]
          Location [17-28] [LOOKUP JOIN]
          TablePathExpression [29-31] [t2]
            PathExpression [29-31] [t2]
              Identifier(t2) [29-31] [t2]
--
SELECT
  *
FROM
  t1
  LOOKUP JOIN
  t2
==

select * from t1 HASH JOIN t2
--
QueryStatement [0-29] [select * from t1 HASH JOIN t2]
  Query [0-29] [select * from t1 HASH JOIN t2]
    Select [0-29] [select * from t1 HASH JOIN t2]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-29] [from t1 HASH JOIN t2]
        Join(HASH) [14-29] [t1 HASH JOIN t2]
          TablePathExpression [14-16] [t1]
            PathExpression [14-16] [t1]
              Identifier(t1) [14-16] [t1]
          Location [17-26] [HASH JOIN]
          TablePathExpression [27-29] [t2]
            PathExpression [27-29] [t2]
              Identifier(t2) [27-29] [t2]
--
SELECT
  *
FROM
  t1
  HASH JOIN
  t2
==

select * from t1 as a1 HASH JOIN t2
--
QueryStatement [0-35] [select * from...HASH JOIN t2]
  Query [0-35] [select * from...HASH JOIN t2]
    Select [0-35] [select * from...HASH JOIN t2]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-35] [from t1 as a1 HASH JOIN t2]
        Join(HASH) [14-35] [t1 as a1 HASH JOIN t2]
          TablePathExpression [14-22] [t1 as a1]
            PathExpression [14-16] [t1]
              Identifier(t1) [14-16] [t1]
            Alias [17-22] [as a1]
              Identifier(a1) [20-22] [a1]
          Location [23-32] [HASH JOIN]
          TablePathExpression [33-35] [t2]
            PathExpression [33-35] [t2]
              Identifier(t2) [33-35] [t2]
--
SELECT
  *
FROM
  t1 AS a1
  HASH JOIN
  t2
==

select * from t1 as a1 LOOKUP JOIN t2
--
QueryStatement [0-37] [select * from...LOOKUP JOIN t2]
  Query [0-37] [select * from...LOOKUP JOIN t2]
    Select [0-37] [select * from...LOOKUP JOIN t2]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-37] [from t1 as a1 LOOKUP JOIN t2]
        Join(LOOKUP) [14-37] [t1 as a1 LOOKUP JOIN t2]
          TablePathExpression [14-22] [t1 as a1]
            PathExpression [14-16] [t1]
              Identifier(t1) [14-16] [t1]
            Alias [17-22] [as a1]
              Identifier(a1) [20-22] [a1]
          Location [23-34] [LOOKUP JOIN]
          TablePathExpression [35-37] [t2]
            PathExpression [35-37] [t2]
              Identifier(t2) [35-37] [t2]
--
SELECT
  *
FROM
  t1 AS a1
  LOOKUP JOIN
  t2
==


# Table is a non-reserved keyword.
select * from Table
--
QueryStatement [0-19] [select * from Table]
  Query [0-19] [select * from Table]
    Select [0-19] [select * from Table]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-19] [from Table]
        TablePathExpression [14-19] [Table]
          PathExpression [14-19] [Table]
            Identifier(Table) [14-19] [Table]
--
SELECT
  *
FROM
  Table
==

# select is a reserved keyword.
select * from "select"
--
QueryStatement [0-22] [select * from "select"]
  Query [0-22] [select * from "select"]
    Select [0-22] [select * from "select"]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-22] [from "select"]
        TablePathExpression [14-22] ["select"]
          PathExpression [14-22] ["select"]
            Identifier("select") [14-22] ["select"]
--
SELECT
  *
FROM
  "select"
==

select * from select
--
ERROR: Syntax error: Unexpected keyword SELECT [at 1:15]
select * from select
              ^
==

select * from "Table"
--
QueryStatement [0-21] [select * from "Table"]
  Query [0-21] [select * from "Table"]
    Select [0-21] [select * from "Table"]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-21] [from "Table"]
        TablePathExpression [14-21] ["Table"]
          PathExpression [14-21] ["Table"]
            Identifier(Table) [14-21] ["Table"]
--
SELECT
  *
FROM
  Table
==

select * from pRoTo
--
ERROR: Syntax error: Unexpected keyword PROTO [at 1:15]
select * from pRoTo
              ^
==

select * from haSh
--
ERROR: Syntax error: Unexpected keyword HASH [at 1:15]
select * from haSh
              ^
==

select * from "pRoTo"
--
QueryStatement [0-21] [select * from "pRoTo"]
  Query [0-21] [select * from "pRoTo"]
    Select [0-21] [select * from "pRoTo"]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-21] [from "pRoTo"]
        TablePathExpression [14-21] ["pRoTo"]
          PathExpression [14-21] ["pRoTo"]
            Identifier("pRoTo") [14-21] ["pRoTo"]
--
SELECT
  *
FROM
  "pRoTo"
==

select a, from T1
--
QueryStatement [0-17] [select a, from T1]
  Query [0-17] [select a, from T1]
    Select [0-17] [select a, from T1]
      SelectList [7-9] [a,]
        SelectColumn [7-8] [a]
          PathExpression [7-8] [a]
            Identifier(a) [7-8] [a]
      FromClause [10-17] [from T1]
        TablePathExpression [15-17] [T1]
          PathExpression [15-17] [T1]
            Identifier(T1) [15-17] [T1]
--
SELECT
  a
FROM
  T1
==

select a, b, from T1
--
QueryStatement [0-20] [select a, b, from T1]
  Query [0-20] [select a, b, from T1]
    Select [0-20] [select a, b, from T1]
      SelectList [7-12] [a, b,]
        SelectColumn [7-8] [a]
          PathExpression [7-8] [a]
            Identifier(a) [7-8] [a]
        SelectColumn [10-11] [b]
          PathExpression [10-11] [b]
            Identifier(b) [10-11] [b]
      FromClause [13-20] [from T1]
        TablePathExpression [18-20] [T1]
          PathExpression [18-20] [T1]
            Identifier(T1) [18-20] [T1]
--
SELECT
  a,
  b
FROM
  T1
==

select *, from T1
--
QueryStatement [0-17] [select *, from T1]
  Query [0-17] [select *, from T1]
    Select [0-17] [select *, from T1]
      SelectList [7-9] [*,]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [10-17] [from T1]
        TablePathExpression [15-17] [T1]
          PathExpression [15-17] [T1]
            Identifier(T1) [15-17] [T1]
--
SELECT
  *
FROM
  T1
==

select * except(a), from T1
--
QueryStatement [0-27] [select * except(a), from T1]
  Query [0-27] [select * except(a), from T1]
    Select [0-27] [select * except(a), from T1]
      SelectList [7-19] [* except(a),]
        SelectColumn [7-18] [* except(a)]
          StarWithModifiers [7-18] [* except(a)]
            StarModifiers [9-18] [except(a)]
              StarExceptList [9-18] [except(a)]
                Identifier(a) [16-17] [a]
      FromClause [20-27] [from T1]
        TablePathExpression [25-27] [T1]
          PathExpression [25-27] [T1]
            Identifier(T1) [25-27] [T1]
--
SELECT
  * EXCEPT (a)
FROM
  T1
==

select * replace(a+1 as a), from T1
--
QueryStatement [0-35] [select * replace...), from T1]
  Query [0-35] [select * replace...), from T1]
    Select [0-35] [select * replace...), from T1]
      SelectList [7-27] [* replace(a+1 as a),]
        SelectColumn [7-26] [* replace(a+1 as a)]
          StarWithModifiers [7-26] [* replace(a+1 as a)]
            StarModifiers [9-26] [replace(a+1 as a)]
              StarReplaceItem [17-25] [a+1 as a]
                BinaryExpression(+) [17-20] [a+1]
                  PathExpression [17-18] [a]
                    Identifier(a) [17-18] [a]
                  IntLiteral(1) [19-20] [1]
                Identifier(a) [24-25] [a]
      FromClause [28-35] [from T1]
        TablePathExpression [33-35] [T1]
          PathExpression [33-35] [T1]
            Identifier(T1) [33-35] [T1]
--
SELECT
  * REPLACE (a + 1 AS a)
FROM
  T1
==

select a.*, from T1
--
QueryStatement [0-19] [select a.*, from T1]
  Query [0-19] [select a.*, from T1]
    Select [0-19] [select a.*, from T1]
      SelectList [7-11] [a.*,]
        SelectColumn [7-10] [a.*]
          DotStar [7-10] [a.*]
            PathExpression [7-8] [a]
              Identifier(a) [7-8] [a]
      FromClause [12-19] [from T1]
        TablePathExpression [17-19] [T1]
          PathExpression [17-19] [T1]
            Identifier(T1) [17-19] [T1]
--
SELECT
  a.*
FROM
  T1
==

select T1.a, T2.b, from T1 left join T2
--
QueryStatement [0-39] [select T1....left join T2]
  Query [0-39] [select T1....left join T2]
    Select [0-39] [select T1....left join T2]
      SelectList [7-18] [T1.a, T2.b,]
        SelectColumn [7-11] [T1.a]
          PathExpression [7-11] [T1.a]
            Identifier(T1) [7-9] [T1]
            Identifier(a) [10-11] [a]
        SelectColumn [13-17] [T2.b]
          PathExpression [13-17] [T2.b]
            Identifier(T2) [13-15] [T2]
            Identifier(b) [16-17] [b]
      FromClause [19-39] [from T1 left join T2]
        Join(LEFT) [24-39] [T1 left join T2]
          TablePathExpression [24-26] [T1]
            PathExpression [24-26] [T1]
              Identifier(T1) [24-26] [T1]
          Location [27-36] [left join]
          TablePathExpression [37-39] [T2]
            PathExpression [37-39] [T2]
              Identifier(T2) [37-39] [T2]
--
SELECT
  T1.a,
  T2.b
FROM
  T1
  LEFT JOIN
  T2
==

# No FROM clause with or without trailing comma
select 1 a, 'foo' b {{|,}}
--
ALTERNATION GROUP: <empty>
--
QueryStatement [0-19] [select 1 a, 'foo' b]
  Query [0-19] [select 1 a, 'foo' b]
    Select [0-19] [select 1 a, 'foo' b]
      SelectList [7-19] [1 a, 'foo' b]
        SelectColumn [7-10] [1 a]
          IntLiteral(1) [7-8] [1]
          Alias [9-10] [a]
            Identifier(a) [9-10] [a]
        SelectColumn [12-19] ['foo' b]
          StringLiteral('foo') [12-17] ['foo']
          Alias [18-19] [b]
            Identifier(b) [18-19] [b]
--
SELECT
  1 AS a,
  'foo' AS b
--
ALTERNATION GROUP: ,
--
QueryStatement [0-21] [select 1 a, 'foo' b ,]
  Query [0-21] [select 1 a, 'foo' b ,]
    Select [0-21] [select 1 a, 'foo' b ,]
      SelectList [7-21] [1 a, 'foo' b ,]
        SelectColumn [7-10] [1 a]
          IntLiteral(1) [7-8] [1]
          Alias [9-10] [a]
            Identifier(a) [9-10] [a]
        SelectColumn [12-19] ['foo' b]
          StringLiteral('foo') [12-17] ['foo']
          Alias [18-19] [b]
            Identifier(b) [18-19] [b]
--
SELECT
  1 AS a,
  'foo' AS b
==

# Empty SELECT list
select {{|@{a=b}|ALL|DISTINCT|AS foo|@{a=b} DISTINCT AS foo}} from t
--
ALTERNATION GROUP: <empty>
--
ERROR: Syntax error: SELECT list must not be empty [at 1:9]
select  from t
        ^
--
ALTERNATION GROUP: @{a=b}
--
ERROR: Syntax error: SELECT list must not be empty [at 1:15]
select @{a=b} from t
              ^
--
ALTERNATION GROUP: ALL
--
ERROR: Syntax error: SELECT list must not be empty [at 1:12]
select ALL from t
           ^
--
ALTERNATION GROUP: DISTINCT
--
ERROR: Syntax error: SELECT list must not be empty [at 1:17]
select DISTINCT from t
                ^
--
ALTERNATION GROUP: AS foo
--
ERROR: Syntax error: SELECT list must not be empty [at 1:15]
select AS foo from t
              ^
--
ALTERNATION GROUP: @{a=b} DISTINCT AS foo
--
ERROR: Syntax error: SELECT list must not be empty [at 1:31]
select @{a=b} DISTINCT AS foo from t
                              ^
