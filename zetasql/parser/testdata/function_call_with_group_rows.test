# Positive simplest case
[default language_features=V_1_3_WITH_GROUP_ROWS]
SELECT f(x) WITH GROUP_ROWS (SELECT x FROM GROUP_ROWS()) FROM T;
--

QueryStatement [0-63] [SELECT f(x...()) FROM T]
  Query [0-63] [SELECT f(x...()) FROM T]
    Select [0-63] [SELECT f(x...()) FROM T]
      SelectList [7-56] [f(x) WITH...GROUP_ROWS())]
        SelectColumn [7-56] [f(x) WITH...GROUP_ROWS())]
          FunctionCall [7-56] [f(x) WITH...GROUP_ROWS())]
            PathExpression [7-8] [f]
              Identifier(f) [7-8] [f]
            PathExpression [9-10] [x]
              Identifier(x) [9-10] [x]
            WithGroupRows [7-56] [f(x) WITH...GROUP_ROWS())]
              Query [29-55] [SELECT x FROM GROUP_ROWS()]
                Select [29-55] [SELECT x FROM GROUP_ROWS()]
                  SelectList [36-37] [x]
                    SelectColumn [36-37] [x]
                      PathExpression [36-37] [x]
                        Identifier(x) [36-37] [x]
                  FromClause [38-55] [FROM GROUP_ROWS()]
                    TVF [43-55] [GROUP_ROWS()]
                      PathExpression [43-53] [GROUP_ROWS]
                        Identifier(GROUP_ROWS) [43-53] [GROUP_ROWS]
      FromClause [57-63] [FROM T]
        TablePathExpression [62-63] [T]
          PathExpression [62-63] [T]
            Identifier(T) [62-63] [T]
--
SELECT
  f(x) WITH GROUP_ROWS (
    SELECT
      x
    FROM
      GROUP_ROWS()
  )
FROM
  T

==

# Two param function with ORDER BY referring 2 columns in WITH GROUP_ROWS
SELECT f(x ORDER BY y) WITH GROUP_ROWS (SELECT x, y FROM GROUP_ROWS()) FROM T;
--

QueryStatement [0-77] [SELECT f(x...()) FROM T]
  Query [0-77] [SELECT f(x...()) FROM T]
    Select [0-77] [SELECT f(x...()) FROM T]
      SelectList [7-70] [f(x ORDER...GROUP_ROWS())]
        SelectColumn [7-70] [f(x ORDER...GROUP_ROWS())]
          FunctionCall [7-70] [f(x ORDER...GROUP_ROWS())]
            PathExpression [7-8] [f]
              Identifier(f) [7-8] [f]
            PathExpression [9-10] [x]
              Identifier(x) [9-10] [x]
            OrderBy [11-21] [ORDER BY y]
              OrderingExpression(ASC) [20-21] [y]
                PathExpression [20-21] [y]
                  Identifier(y) [20-21] [y]
            WithGroupRows [7-70] [f(x ORDER...GROUP_ROWS())]
              Query [40-69] [SELECT x, y FROM GROUP_ROWS()]
                Select [40-69] [SELECT x, y FROM GROUP_ROWS()]
                  SelectList [47-51] [x, y]
                    SelectColumn [47-48] [x]
                      PathExpression [47-48] [x]
                        Identifier(x) [47-48] [x]
                    SelectColumn [50-51] [y]
                      PathExpression [50-51] [y]
                        Identifier(y) [50-51] [y]
                  FromClause [52-69] [FROM GROUP_ROWS()]
                    TVF [57-69] [GROUP_ROWS()]
                      PathExpression [57-67] [GROUP_ROWS]
                        Identifier(GROUP_ROWS) [57-67] [GROUP_ROWS]
      FromClause [71-77] [FROM T]
        TablePathExpression [76-77] [T]
          PathExpression [76-77] [T]
            Identifier(T) [76-77] [T]
--
SELECT
  f(x
    ORDER BY y) WITH GROUP_ROWS (
    SELECT
      x,
      y
    FROM
      GROUP_ROWS()
  )
FROM
  T

==

# Two param function referring 2 columns in WITH GROUP_ROWS
SELECT f(x, y) WITH GROUP_ROWS (SELECT x, y FROM GROUP_ROWS()) FROM T;
--
QueryStatement [0-69] [SELECT f(x...()) FROM T]
  Query [0-69] [SELECT f(x...()) FROM T]
    Select [0-69] [SELECT f(x...()) FROM T]
      SelectList [7-62] [f(x, y) WITH...GROUP_ROWS())]
        SelectColumn [7-62] [f(x, y) WITH...GROUP_ROWS())]
          FunctionCall [7-62] [f(x, y) WITH...GROUP_ROWS())]
            PathExpression [7-8] [f]
              Identifier(f) [7-8] [f]
            PathExpression [9-10] [x]
              Identifier(x) [9-10] [x]
            PathExpression [12-13] [y]
              Identifier(y) [12-13] [y]
            WithGroupRows [7-62] [f(x, y) WITH...GROUP_ROWS())]
              Query [32-61] [SELECT x, y FROM GROUP_ROWS()]
                Select [32-61] [SELECT x, y FROM GROUP_ROWS()]
                  SelectList [39-43] [x, y]
                    SelectColumn [39-40] [x]
                      PathExpression [39-40] [x]
                        Identifier(x) [39-40] [x]
                    SelectColumn [42-43] [y]
                      PathExpression [42-43] [y]
                        Identifier(y) [42-43] [y]
                  FromClause [44-61] [FROM GROUP_ROWS()]
                    TVF [49-61] [GROUP_ROWS()]
                      PathExpression [49-59] [GROUP_ROWS]
                        Identifier(GROUP_ROWS) [49-59] [GROUP_ROWS]
      FromClause [63-69] [FROM T]
        TablePathExpression [68-69] [T]
          PathExpression [68-69] [T]
            Identifier(T) [68-69] [T]
--
SELECT
  f(x, y) WITH GROUP_ROWS (
    SELECT
      x,
      y
    FROM
      GROUP_ROWS()
  )
FROM
  T

==

# Positive test case for correct syntax. The query in GROUP_ROWS performs
# grouping with additional grouping key coming FROM the input table T.
SELECT
  SUM(f2),
  AVG(x)
    WITH GROUP_ROWS (
      SELECT SUM(f2) AS x
      FROM GROUP_ROWS()
      GROUP BY f3
      HAVING x > 2
      ORDER BY f3
      LIMIT 2
      OFFSET 1)
FROM T GROUP BY f1;
--
QueryStatement [0-202] [SELECT   SUM...GROUP BY f1]
  Query [0-202] [SELECT   SUM...GROUP BY f1]
    Select [0-202] [SELECT   SUM...GROUP BY f1]
      SelectList [9-183] [SUM(f2),...OFFSET 1)]
        SelectColumn [9-16] [SUM(f2)]
          FunctionCall [9-16] [SUM(f2)]
            PathExpression [9-12] [SUM]
              Identifier(SUM) [9-12] [SUM]
            PathExpression [13-15] [f2]
              Identifier(f2) [13-15] [f2]
        SelectColumn [20-183] [AVG(x)...OFFSET 1)]
          FunctionCall [20-183] [AVG(x)...OFFSET 1)]
            PathExpression [20-23] [AVG]
              Identifier(AVG) [20-23] [AVG]
            PathExpression [24-25] [x]
              Identifier(x) [24-25] [x]
            WithGroupRows [20-183] [AVG(x)...OFFSET 1)]
              Query [55-182] [SELECT SUM...OFFSET 1]
                Select [55-135] [SELECT SUM...HAVING x > 2]
                  SelectList [62-74] [SUM(f2) AS x]
                    SelectColumn [62-74] [SUM(f2) AS x]
                      FunctionCall [62-69] [SUM(f2)]
                        PathExpression [62-65] [SUM]
                          Identifier(SUM) [62-65] [SUM]
                        PathExpression [66-68] [f2]
                          Identifier(f2) [66-68] [f2]
                      Alias [70-74] [AS x]
                        Identifier(x) [73-74] [x]
                  FromClause [81-98] [FROM GROUP_ROWS()]
                    TVF [86-98] [GROUP_ROWS()]
                      PathExpression [86-96] [GROUP_ROWS]
                        Identifier(GROUP_ROWS) [86-96] [GROUP_ROWS]
                  GroupBy [105-116] [GROUP BY f3]
                    GroupingItem [114-116] [f3]
                      PathExpression [114-116] [f3]
                        Identifier(f3) [114-116] [f3]
                  Having [123-135] [HAVING x > 2]
                    BinaryExpression(>) [130-135] [x > 2]
                      PathExpression [130-131] [x]
                        Identifier(x) [130-131] [x]
                      IntLiteral(2) [134-135] [2]
                OrderBy [142-153] [ORDER BY f3]
                  OrderingExpression(ASC) [151-153] [f3]
                    PathExpression [151-153] [f3]
                      Identifier(f3) [151-153] [f3]
                LimitOffset [160-182] [LIMIT 2       OFFSET 1]
                  IntLiteral(2) [166-167] [2]
                  IntLiteral(1) [181-182] [1]
      FromClause [184-190] [FROM T]
        TablePathExpression [189-190] [T]
          PathExpression [189-190] [T]
            Identifier(T) [189-190] [T]
      GroupBy [191-202] [GROUP BY f1]
        GroupingItem [200-202] [f1]
          PathExpression [200-202] [f1]
            Identifier(f1) [200-202] [f1]
--
SELECT
  SUM(f2),
  AVG(x) WITH GROUP_ROWS (
    SELECT
      SUM(f2) AS x
    FROM
      GROUP_ROWS()
    GROUP BY f3
    HAVING x > 2
    ORDER BY f3
    LIMIT 2 OFFSET 1)
FROM
  T
GROUP BY f1

==

# group_rows can be used as identifier.
SELECT
  "with" group_rows,
  sum(group_rows) with group_rows(
    SELECT group_rows
    FROM group_rows())
FROM (
  SELECT
    1 "with",
    2 group_rows)
GROUP BY group_rows
--
QueryStatement [0-175] [SELECT   "...group_rows]
  Query [0-175] [SELECT   "...group_rows]
    Select [0-175] [SELECT   "...group_rows]
      SelectList [9-107] ["with" group_rows...up_rows())]
        SelectColumn [9-26] ["with" group_rows]
          PathExpression [9-15] ["with"]
            Identifier("with") [9-15] ["with"]
          Alias [16-26] [group_rows]
            Identifier(group_rows) [16-26] [group_rows]
        SelectColumn [30-107] [sum(group_rows...group_rows())]
          FunctionCall [30-107] [sum(group_rows...group_rows())]
            PathExpression [30-33] [sum]
              Identifier(sum) [30-33] [sum]
            PathExpression [34-44] [group_rows]
              Identifier(group_rows) [34-44] [group_rows]
            WithGroupRows [30-107] [sum(group_rows...group_rows())]
              Query [67-106] [SELECT group_rows...oup_rows()]
                Select [67-106] [SELECT group_rows...oup_rows()]
                  SelectList [74-84] [group_rows]
                    SelectColumn [74-84] [group_rows]
                      PathExpression [74-84] [group_rows]
                        Identifier(group_rows) [74-84] [group_rows]
                  FromClause [89-106] [FROM group_rows()]
                    TVF [94-106] [group_rows()]
                      PathExpression [94-104] [group_rows]
                        Identifier(group_rows) [94-104] [group_rows]
      FromClause [108-155] [FROM (   SELECT...group_rows)]
        TableSubquery [113-155] [(   SELECT...group_rows)]
          Query [117-154] [SELECT...group_rows]
            Select [117-154] [SELECT...group_rows]
              SelectList [128-154] [1 "with",     2 group_rows]
                SelectColumn [128-136] [1 "with"]
                  IntLiteral(1) [128-129] [1]
                  Alias [130-136] ["with"]
                    Identifier("with") [130-136] ["with"]
                SelectColumn [142-154] [2 group_rows]
                  IntLiteral(2) [142-143] [2]
                  Alias [144-154] [group_rows]
                    Identifier(group_rows) [144-154] [group_rows]
      GroupBy [156-175] [GROUP BY group_rows]
        GroupingItem [165-175] [group_rows]
          PathExpression [165-175] [group_rows]
            Identifier(group_rows) [165-175] [group_rows]
--
SELECT
  "with" AS group_rows,
  sum(group_rows) WITH GROUP_ROWS (
    SELECT
      group_rows
    FROM
      group_rows()
  )
FROM
  (
    SELECT
      1 AS "with",
      2 AS group_rows
  )
GROUP BY group_rows
==

# GROUP_ROWS() in a FROM subquery
SELECT
  SUM(f2),
  AVG(x)
    WITH GROUP_ROWS (
      SELECT SUM(f2) AS x
      FROM (SELECT f1, f2, f3 FROM GROUP_ROWS())
      GROUP BY f3)
FROM T GROUP BY f1;
--
QueryStatement [0-161] [SELECT   SUM...GROUP BY f1]
  Query [0-161] [SELECT   SUM...GROUP BY f1]
    Select [0-161] [SELECT   SUM...GROUP BY f1]
      SelectList [9-142] [SUM(f2),...GROUP BY f3)]
        SelectColumn [9-16] [SUM(f2)]
          FunctionCall [9-16] [SUM(f2)]
            PathExpression [9-12] [SUM]
              Identifier(SUM) [9-12] [SUM]
            PathExpression [13-15] [f2]
              Identifier(f2) [13-15] [f2]
        SelectColumn [20-142] [AVG(x)...GROUP BY f3)]
          FunctionCall [20-142] [AVG(x)...GROUP BY f3)]
            PathExpression [20-23] [AVG]
              Identifier(AVG) [20-23] [AVG]
            PathExpression [24-25] [x]
              Identifier(x) [24-25] [x]
            WithGroupRows [20-142] [AVG(x)...GROUP BY f3)]
              Query [55-141] [SELECT SUM...GROUP BY f3]
                Select [55-141] [SELECT SUM...GROUP BY f3]
                  SelectList [62-74] [SUM(f2) AS x]
                    SelectColumn [62-74] [SUM(f2) AS x]
                      FunctionCall [62-69] [SUM(f2)]
                        PathExpression [62-65] [SUM]
                          Identifier(SUM) [62-65] [SUM]
                        PathExpression [66-68] [f2]
                          Identifier(f2) [66-68] [f2]
                      Alias [70-74] [AS x]
                        Identifier(x) [73-74] [x]
                  FromClause [81-123] [FROM (SELECT...GROUP_ROWS())]
                    TableSubquery [86-123] [(SELECT f1...GROUP_ROWS())]
                      Query [87-122] [SELECT f1,...GROUP_ROWS()]
                        Select [87-122] [SELECT f1,...GROUP_ROWS()]
                          SelectList [94-104] [f1, f2, f3]
                            SelectColumn [94-96] [f1]
                              PathExpression [94-96] [f1]
                                Identifier(f1) [94-96] [f1]
                            SelectColumn [98-100] [f2]
                              PathExpression [98-100] [f2]
                                Identifier(f2) [98-100] [f2]
                            SelectColumn [102-104] [f3]
                              PathExpression [102-104] [f3]
                                Identifier(f3) [102-104] [f3]
                          FromClause [105-122] [FROM GROUP_ROWS()]
                            TVF [110-122] [GROUP_ROWS()]
                              PathExpression [110-120] [GROUP_ROWS]
                                Identifier(GROUP_ROWS) [110-120] [GROUP_ROWS]
                  GroupBy [130-141] [GROUP BY f3]
                    GroupingItem [139-141] [f3]
                      PathExpression [139-141] [f3]
                        Identifier(f3) [139-141] [f3]
      FromClause [143-149] [FROM T]
        TablePathExpression [148-149] [T]
          PathExpression [148-149] [T]
            Identifier(T) [148-149] [T]
      GroupBy [150-161] [GROUP BY f1]
        GroupingItem [159-161] [f1]
          PathExpression [159-161] [f1]
            Identifier(f1) [159-161] [f1]
--
SELECT
  SUM(f2),
  AVG(x) WITH GROUP_ROWS (
    SELECT
      SUM(f2) AS x
    FROM
      (
        SELECT
          f1,
          f2,
          f3
        FROM
          GROUP_ROWS()
      )
    GROUP BY f3
  )
FROM
  T
GROUP BY f1

==

# GROUP_ROWS in an expression subquery
SELECT
  SUM(f2),
  AVG(x)
    WITH GROUP_ROWS (
      SELECT (SELECT SUM(f2) FROM GROUP_ROWS()) AS x)
FROM T GROUP BY f1;
--
QueryStatement [0-121] [SELECT   SUM...GROUP BY f1]
  Query [0-121] [SELECT   SUM...GROUP BY f1]
    Select [0-121] [SELECT   SUM...GROUP BY f1]
      SelectList [9-102] [SUM(f2),...GROUP_ROWS()) AS x)]
        SelectColumn [9-16] [SUM(f2)]
          FunctionCall [9-16] [SUM(f2)]
            PathExpression [9-12] [SUM]
              Identifier(SUM) [9-12] [SUM]
            PathExpression [13-15] [f2]
              Identifier(f2) [13-15] [f2]
        SelectColumn [20-102] [AVG(x)...GROUP_ROWS()) AS x)]
          FunctionCall [20-102] [AVG(x)...GROUP_ROWS()) AS x)]
            PathExpression [20-23] [AVG]
              Identifier(AVG) [20-23] [AVG]
            PathExpression [24-25] [x]
              Identifier(x) [24-25] [x]
            WithGroupRows [20-102] [AVG(x)...GROUP_ROWS()) AS x)]
              Query [55-101] [SELECT (SELECT..._ROWS()) AS x]
                Select [55-101] [SELECT (SELECT..._ROWS()) AS x]
                  SelectList [62-101] [(SELECT SUM...OUP_ROWS()) AS x]
                    SelectColumn [62-101] [(SELECT SUM...OUP_ROWS()) AS x]
                      ExpressionSubquery [62-96] [(SELECT SUM...GROUP_ROWS())]
                        Query [63-95] [SELECT SUM...GROUP_ROWS()]
                          Select [63-95] [SELECT SUM...GROUP_ROWS()]
                            SelectList [70-77] [SUM(f2)]
                              SelectColumn [70-77] [SUM(f2)]
                                FunctionCall [70-77] [SUM(f2)]
                                  PathExpression [70-73] [SUM]
                                    Identifier(SUM) [70-73] [SUM]
                                  PathExpression [74-76] [f2]
                                    Identifier(f2) [74-76] [f2]
                            FromClause [78-95] [FROM GROUP_ROWS()]
                              TVF [83-95] [GROUP_ROWS()]
                                PathExpression [83-93] [GROUP_ROWS]
                                  Identifier(GROUP_ROWS) [83-93] [GROUP_ROWS]
                      Alias [97-101] [AS x]
                        Identifier(x) [100-101] [x]
      FromClause [103-109] [FROM T]
        TablePathExpression [108-109] [T]
          PathExpression [108-109] [T]
            Identifier(T) [108-109] [T]
      GroupBy [110-121] [GROUP BY f1]
        GroupingItem [119-121] [f1]
          PathExpression [119-121] [f1]
            Identifier(f1) [119-121] [f1]
--
SELECT
  SUM(f2),
  AVG(x) WITH GROUP_ROWS (
    SELECT
      (
        SELECT
          SUM(f2)
        FROM
          GROUP_ROWS()
      ) AS x
  )
FROM
  T
GROUP BY f1

==

# Nested WITH GROUP_ROWS
SELECT
  AVG(x)
    WITH GROUP_ROWS (
      SELECT
        MAX(y)
          WITH GROUP_ROWS (
            SELECT MIN(f4) AS y
            FROM GROUP_ROWS()
            GROUP BY f3
          )
        AS x
      FROM GROUP_ROWS()
      GROUP BY f2
    )
FROM T GROUP BY f1;
--
QueryStatement [0-271] [SELECT   AVG...GROUP BY f1]
  Query [0-271] [SELECT   AVG...GROUP BY f1]
    Select [0-271] [SELECT   AVG...GROUP BY f1]
      SelectList [9-252] [AVG(x)...BY f2     )]
        SelectColumn [9-252] [AVG(x)...BY f2     )]
          FunctionCall [9-252] [AVG(x)...BY f2     )]
            PathExpression [9-12] [AVG]
              Identifier(AVG) [9-12] [AVG]
            PathExpression [13-14] [x]
              Identifier(x) [13-14] [x]
            WithGroupRows [9-252] [AVG(x)...BY f2     )]
              Query [44-246] [SELECT...GROUP BY f2]
                Select [44-246] [SELECT...GROUP BY f2]
                  SelectList [59-204] [MAX(y)...AS x]
                    SelectColumn [59-204] [MAX(y)...AS x]
                      FunctionCall [59-191] [MAX(y)...)]
                        PathExpression [59-62] [MAX]
                          Identifier(MAX) [59-62] [MAX]
                        PathExpression [63-64] [y]
                          Identifier(y) [63-64] [y]
                        WithGroupRows [59-191] [MAX(y)...)]
                          Query [106-179] [SELECT MIN...GROUP BY f3]
                            Select [106-179] [SELECT MIN...GROUP BY f3]
                              SelectList [113-125] [MIN(f4) AS y]
                                SelectColumn [113-125] [MIN(f4) AS y]
                                  FunctionCall [113-120] [MIN(f4)]
                                    PathExpression [113-116] [MIN]
                                      Identifier(MIN) [113-116] [MIN]
                                    PathExpression [117-119] [f4]
                                      Identifier(f4) [117-119] [f4]
                                  Alias [121-125] [AS y]
                                    Identifier(y) [124-125] [y]
                              FromClause [138-155] [FROM GROUP_ROWS()]
                                TVF [143-155] [GROUP_ROWS()]
                                  PathExpression [143-153] [GROUP_ROWS]
                                    Identifier(GROUP_ROWS) [143-153] [GROUP_ROWS]
                              GroupBy [168-179] [GROUP BY f3]
                                GroupingItem [177-179] [f3]
                                  PathExpression [177-179] [f3]
                                    Identifier(f3) [177-179] [f3]
                      Alias [200-204] [AS x]
                        Identifier(x) [203-204] [x]
                  FromClause [211-228] [FROM GROUP_ROWS()]
                    TVF [216-228] [GROUP_ROWS()]
                      PathExpression [216-226] [GROUP_ROWS]
                        Identifier(GROUP_ROWS) [216-226] [GROUP_ROWS]
                  GroupBy [235-246] [GROUP BY f2]
                    GroupingItem [244-246] [f2]
                      PathExpression [244-246] [f2]
                        Identifier(f2) [244-246] [f2]
      FromClause [253-259] [FROM T]
        TablePathExpression [258-259] [T]
          PathExpression [258-259] [T]
            Identifier(T) [258-259] [T]
      GroupBy [260-271] [GROUP BY f1]
        GroupingItem [269-271] [f1]
          PathExpression [269-271] [f1]
            Identifier(f1) [269-271] [f1]
--
SELECT
  AVG(x) WITH GROUP_ROWS (
    SELECT
      MAX(y) WITH GROUP_ROWS (
        SELECT
          MIN(f4) AS y
        FROM
          GROUP_ROWS()
        GROUP BY f3
      ) AS x
    FROM
      GROUP_ROWS()
    GROUP BY f2
  )
FROM
  T
GROUP BY f1

==

# WITH GROUP_ROWS without GROUP_ROWS()
SELECT
  AVG(x)
    WITH GROUP_ROWS (
      SELECT SUM(f2) AS x FROM P)
FROM T
GROUP BY f1;
--
QueryStatement [0-90] [SELECT   AVG...GROUP BY f1]
  Query [0-90] [SELECT   AVG...GROUP BY f1]
    Select [0-90] [SELECT   AVG...GROUP BY f1]
      SelectList [9-71] [AVG(x)...x FROM P)]
        SelectColumn [9-71] [AVG(x)...x FROM P)]
          FunctionCall [9-71] [AVG(x)...x FROM P)]
            PathExpression [9-12] [AVG]
              Identifier(AVG) [9-12] [AVG]
            PathExpression [13-14] [x]
              Identifier(x) [13-14] [x]
            WithGroupRows [9-71] [AVG(x)...x FROM P)]
              Query [44-70] [SELECT SUM(f2) AS x FROM P]
                Select [44-70] [SELECT SUM(f2) AS x FROM P]
                  SelectList [51-63] [SUM(f2) AS x]
                    SelectColumn [51-63] [SUM(f2) AS x]
                      FunctionCall [51-58] [SUM(f2)]
                        PathExpression [51-54] [SUM]
                          Identifier(SUM) [51-54] [SUM]
                        PathExpression [55-57] [f2]
                          Identifier(f2) [55-57] [f2]
                      Alias [59-63] [AS x]
                        Identifier(x) [62-63] [x]
                  FromClause [64-70] [FROM P]
                    TablePathExpression [69-70] [P]
                      PathExpression [69-70] [P]
                        Identifier(P) [69-70] [P]
      FromClause [72-78] [FROM T]
        TablePathExpression [77-78] [T]
          PathExpression [77-78] [T]
            Identifier(T) [77-78] [T]
      GroupBy [79-90] [GROUP BY f1]
        GroupingItem [88-90] [f1]
          PathExpression [88-90] [f1]
            Identifier(f1) [88-90] [f1]
--
SELECT
  AVG(x) WITH GROUP_ROWS (
    SELECT
      SUM(f2) AS x
    FROM
      P
  )
FROM
  T
GROUP BY f1

==

# GROUP_ROWS() without WITH GROUP_ROWS
SELECT
  AVG(x)
     (
      SELECT SUM(f2) AS x
      FROM GROUP_ROWS()
      GROUP BY f3)
FROM T GROUP BY f1;
--
ERROR: Syntax error: Double function call parentheses [at 3:6]
     (
     ^
==

# GROUP_ROWS(): missing WITH
SELECT
  AVG(x) GROUP_ROWS
     (
      SELECT SUM(f2) AS x
      FROM GROUP_ROWS()
      GROUP BY f3)
FROM T GROUP BY f1;
--

ERROR: Syntax error: Expected end of input but got "(" [at 3:6]
     (
     ^

==

# GROUP_ROWS(): missing GROUP_ROWS keyword
SELECT
  AVG(x) WITH
     (
      SELECT SUM(f2) AS x
      FROM GROUP_ROWS()
      GROUP BY f3)
FROM T GROUP BY f1;
--
ERROR: Saw WITH directly after a function call, which is not allowed. Did you forget to put a comma before the WITH, or did you mean "WITH GROUP_ROWS"? [at 2:10]
  AVG(x) WITH
         ^
==

# GROUP_ROWS(): missing () next to FROM GROUP_ROWS
SELECT
  AVG(x) WITH GROUP_ROWS
     (
      SELECT SUM(f2) AS x
      FROM GROUP_ROWS
      GROUP BY f3)
FROM T GROUP BY f1;
--
QueryStatement [0-124] [SELECT   AVG...GROUP BY f1]
  Query [0-124] [SELECT   AVG...GROUP BY f1]
    Select [0-124] [SELECT   AVG...GROUP BY f1]
      SelectList [9-105] [AVG(x) WITH...GROUP BY f3)]
        SelectColumn [9-105] [AVG(x) WITH...GROUP BY f3)]
          FunctionCall [9-105] [AVG(x) WITH...GROUP BY f3)]
            PathExpression [9-12] [AVG]
              Identifier(AVG) [9-12] [AVG]
            PathExpression [13-14] [x]
              Identifier(x) [13-14] [x]
            WithGroupRows [9-105] [AVG(x) WITH...GROUP BY f3)]
              Query [45-104] [SELECT SUM...GROUP BY f3]
                Select [45-104] [SELECT SUM...GROUP BY f3]
                  SelectList [52-64] [SUM(f2) AS x]
                    SelectColumn [52-64] [SUM(f2) AS x]
                      FunctionCall [52-59] [SUM(f2)]
                        PathExpression [52-55] [SUM]
                          Identifier(SUM) [52-55] [SUM]
                        PathExpression [56-58] [f2]
                          Identifier(f2) [56-58] [f2]
                      Alias [60-64] [AS x]
                        Identifier(x) [63-64] [x]
                  FromClause [71-86] [FROM GROUP_ROWS]
                    TablePathExpression [76-86] [GROUP_ROWS]
                      PathExpression [76-86] [GROUP_ROWS]
                        Identifier(GROUP_ROWS) [76-86] [GROUP_ROWS]
                  GroupBy [93-104] [GROUP BY f3]
                    GroupingItem [102-104] [f3]
                      PathExpression [102-104] [f3]
                        Identifier(f3) [102-104] [f3]
      FromClause [106-112] [FROM T]
        TablePathExpression [111-112] [T]
          PathExpression [111-112] [T]
            Identifier(T) [111-112] [T]
      GroupBy [113-124] [GROUP BY f1]
        GroupingItem [122-124] [f1]
          PathExpression [122-124] [f1]
            Identifier(f1) [122-124] [f1]
--
SELECT
  AVG(x) WITH GROUP_ROWS (
    SELECT
      SUM(f2) AS x
    FROM
      GROUP_ROWS
    GROUP BY f3
  )
FROM
  T
GROUP BY f1

==

# GROUP_ROWS(): added () next to WITH GROUP_ROWS
SELECT
  AVG(x) WITH GROUP_ROWS()
     (
      SELECT SUM(f2) AS x
      FROM GROUP_ROWS()
      GROUP BY f3)
FROM T GROUP BY f1;
--
ERROR: Syntax error: Expected "(" or keyword SELECT or keyword WITH but got ")" [at 2:26]
  AVG(x) WITH GROUP_ROWS()
                         ^

==

# WITH GROUP_ROWS and analytic function first
SELECT f() OVER (PARTITION BY a ORDER BY a) WITH GROUP_ROWS(SELECT SUM(f2) AS x
      FROM GROUP_ROWS()
      GROUP BY f3)
FROM T
--
ERROR: Syntax error: Expected end of input but got keyword WITH [at 1:45]
SELECT f() OVER (PARTITION BY a ORDER BY a) WITH GROUP_ROWS(SELECT SUM(f2) AS x
                                            ^

==

# WITH GROUP_ROWS followed by analytic function window
SELECT
  f()
    WITH GROUP_ROWS(SELECT SUM(f2) AS x FROM GROUP_ROWS() GROUP BY f3)
    OVER (PARTITION BY a ORDER BY a)
FROM T
--
QueryStatement [0-127] [SELECT   f...a) FROM T]
  Query [0-127] [SELECT   f...a) FROM T]
    Select [0-127] [SELECT   f...a) FROM T]
      SelectList [9-120] [f()     WITH...ORDER BY a)]
        SelectColumn [9-120] [f()     WITH...ORDER BY a)]
          AnalyticFunctionCall [9-120] [f()     WITH...ORDER BY a)]
            FunctionCall [9-120] [f()     WITH...ORDER BY a)]
              PathExpression [9-10] [f]
                Identifier(f) [9-10] [f]
              WithGroupRows [9-120] [f()     WITH...ORDER BY a)]
                Query [33-82] [SELECT SUM...GROUP BY f3]
                  Select [33-82] [SELECT SUM...GROUP BY f3]
                    SelectList [40-52] [SUM(f2) AS x]
                      SelectColumn [40-52] [SUM(f2) AS x]
                        FunctionCall [40-47] [SUM(f2)]
                          PathExpression [40-43] [SUM]
                            Identifier(SUM) [40-43] [SUM]
                          PathExpression [44-46] [f2]
                            Identifier(f2) [44-46] [f2]
                        Alias [48-52] [AS x]
                          Identifier(x) [51-52] [x]
                    FromClause [53-70] [FROM GROUP_ROWS()]
                      TVF [58-70] [GROUP_ROWS()]
                        PathExpression [58-68] [GROUP_ROWS]
                          Identifier(GROUP_ROWS) [58-68] [GROUP_ROWS]
                    GroupBy [71-82] [GROUP BY f3]
                      GroupingItem [80-82] [f3]
                        PathExpression [80-82] [f3]
                          Identifier(f3) [80-82] [f3]
            WindowSpecification [93-120] [(PARTITION BY a ORDER BY a)]
              PartitionBy [94-108] [PARTITION BY a]
                PathExpression [107-108] [a]
                  Identifier(a) [107-108] [a]
              OrderBy [109-119] [ORDER BY a]
                OrderingExpression(ASC) [118-119] [a]
                  PathExpression [118-119] [a]
                    Identifier(a) [118-119] [a]
      FromClause [121-127] [FROM T]
        TablePathExpression [126-127] [T]
          PathExpression [126-127] [T]
            Identifier(T) [126-127] [T]
--
SELECT
  f() WITH GROUP_ROWS (
    SELECT
      SUM(f2) AS x
    FROM
      GROUP_ROWS()
    GROUP BY f3
  ) OVER (PARTITION BY a
    ORDER BY a)
FROM
  T

==

# Analytic function inside WITH GROUP_ROWS
SELECT f() WITH GROUP_ROWS(SELECT g(f2) OVER (PARTITION BY a ORDER BY a) AS x
      FROM GROUP_ROWS())
FROM T
--
QueryStatement [0-109] [SELECT f()...()) FROM T]
  Query [0-109] [SELECT f()...()) FROM T]
    Select [0-109] [SELECT f()...()) FROM T]
      SelectList [7-102] [f() WITH GROUP_RO...UP_ROWS())]
        SelectColumn [7-102] [f() WITH GROUP_RO...UP_ROWS())]
          FunctionCall [7-102] [f() WITH GROUP_RO...UP_ROWS())]
            PathExpression [7-8] [f]
              Identifier(f) [7-8] [f]
            WithGroupRows [7-102] [f() WITH GROUP_RO...UP_ROWS())]
              Query [27-101] [SELECT g(f2...GROUP_ROWS()]
                Select [27-101] [SELECT g(f2...GROUP_ROWS()]
                  SelectList [34-77] [g(f2) OVER...BY a) AS x]
                    SelectColumn [34-77] [g(f2) OVER...BY a) AS x]
                      AnalyticFunctionCall [34-72] [g(f2) OVER...ORDER BY a)]
                        FunctionCall [34-39] [g(f2)]
                          PathExpression [34-35] [g]
                            Identifier(g) [34-35] [g]
                          PathExpression [36-38] [f2]
                            Identifier(f2) [36-38] [f2]
                        WindowSpecification [45-72] [(PARTITION BY a ORDER BY a)]
                          PartitionBy [46-60] [PARTITION BY a]
                            PathExpression [59-60] [a]
                              Identifier(a) [59-60] [a]
                          OrderBy [61-71] [ORDER BY a]
                            OrderingExpression(ASC) [70-71] [a]
                              PathExpression [70-71] [a]
                                Identifier(a) [70-71] [a]
                      Alias [73-77] [AS x]
                        Identifier(x) [76-77] [x]
                  FromClause [84-101] [FROM GROUP_ROWS()]
                    TVF [89-101] [GROUP_ROWS()]
                      PathExpression [89-99] [GROUP_ROWS]
                        Identifier(GROUP_ROWS) [89-99] [GROUP_ROWS]
      FromClause [103-109] [FROM T]
        TablePathExpression [108-109] [T]
          PathExpression [108-109] [T]
            Identifier(T) [108-109] [T]
--
SELECT
  f() WITH GROUP_ROWS (
    SELECT
      g(f2) OVER (PARTITION BY a
        ORDER BY a) AS x
    FROM
      GROUP_ROWS()
  )
FROM
  T

==

# GROUP_ROWS() function in an expression subquery
SELECT (SELECT AVG(x) FROM(SELECT MAX(f2)  x
      FROM GROUP_ROWS())) AS y
FROM T
--

QueryStatement [0-82] [SELECT (SELECT...AS y FROM T]
  Query [0-82] [SELECT (SELECT...AS y FROM T]
    Select [0-82] [SELECT (SELECT...AS y FROM T]
      SelectList [7-75] [(SELECT AVG...UP_ROWS())) AS y]
        SelectColumn [7-75] [(SELECT AVG...UP_ROWS())) AS y]
          ExpressionSubquery [7-70] [(SELECT AVG...GROUP_ROWS()))]
            Query [8-69] [SELECT AVG...GROUP_ROWS())]
              Select [8-69] [SELECT AVG...GROUP_ROWS())]
                SelectList [15-21] [AVG(x)]
                  SelectColumn [15-21] [AVG(x)]
                    FunctionCall [15-21] [AVG(x)]
                      PathExpression [15-18] [AVG]
                        Identifier(AVG) [15-18] [AVG]
                      PathExpression [19-20] [x]
                        Identifier(x) [19-20] [x]
                FromClause [22-69] [FROM(SELECT...GROUP_ROWS())]
                  TableSubquery [26-69] [(SELECT MAX...GROUP_ROWS())]
                    Query [27-68] [SELECT MAX...GROUP_ROWS()]
                      Select [27-68] [SELECT MAX...GROUP_ROWS()]
                        SelectList [34-44] [MAX(f2)  x]
                          SelectColumn [34-44] [MAX(f2)  x]
                            FunctionCall [34-41] [MAX(f2)]
                              PathExpression [34-37] [MAX]
                                Identifier(MAX) [34-37] [MAX]
                              PathExpression [38-40] [f2]
                                Identifier(f2) [38-40] [f2]
                            Alias [43-44] [x]
                              Identifier(x) [43-44] [x]
                        FromClause [51-68] [FROM GROUP_ROWS()]
                          TVF [56-68] [GROUP_ROWS()]
                            PathExpression [56-66] [GROUP_ROWS]
                              Identifier(GROUP_ROWS) [56-66] [GROUP_ROWS]
          Alias [71-75] [AS y]
            Identifier(y) [74-75] [y]
      FromClause [76-82] [FROM T]
        TablePathExpression [81-82] [T]
          PathExpression [81-82] [T]
            Identifier(T) [81-82] [T]
--
SELECT
  (
    SELECT
      AVG(x)
    FROM
      (
        SELECT
          MAX(f2) AS x
        FROM
          GROUP_ROWS()
      )
  ) AS y
FROM
  T

==

# GROUP_ROWS() joined with the original table
SELECT
  AVG(x)
    WITH GROUP_ROWS (
      SELECT f2 AS x
      FROM GROUP_ROWS() g, t1
      WHERE t1.f4 = g.f4
      GROUP BY f3)
FROM T t1 GROUP BY f1;
--
QueryStatement [0-154] [SELECT   AVG...GROUP BY f1]
  Query [0-154] [SELECT   AVG...GROUP BY f1]
    Select [0-154] [SELECT   AVG...GROUP BY f1]
      SelectList [9-132] [AVG(x)...GROUP BY f3)]
        SelectColumn [9-132] [AVG(x)...GROUP BY f3)]
          FunctionCall [9-132] [AVG(x)...GROUP BY f3)]
            PathExpression [9-12] [AVG]
              Identifier(AVG) [9-12] [AVG]
            PathExpression [13-14] [x]
              Identifier(x) [13-14] [x]
            WithGroupRows [9-132] [AVG(x)...GROUP BY f3)]
              Query [44-131] [SELECT f2...GROUP BY f3]
                Select [44-131] [SELECT f2...GROUP BY f3]
                  SelectList [51-58] [f2 AS x]
                    SelectColumn [51-58] [f2 AS x]
                      PathExpression [51-53] [f2]
                        Identifier(f2) [51-53] [f2]
                      Alias [54-58] [AS x]
                        Identifier(x) [57-58] [x]
                  FromClause [65-88] [FROM GROUP_ROWS() g, t1]
                    Join(COMMA) [70-88] [GROUP_ROWS() g, t1]
                      TVF [70-84] [GROUP_ROWS() g]
                        PathExpression [70-80] [GROUP_ROWS]
                          Identifier(GROUP_ROWS) [70-80] [GROUP_ROWS]
                        Alias [83-84] [g]
                          Identifier(g) [83-84] [g]
                      Location [84-85] [,]
                      TablePathExpression [86-88] [t1]
                        PathExpression [86-88] [t1]
                          Identifier(t1) [86-88] [t1]
                  WhereClause [95-113] [WHERE t1.f4 = g.f4]
                    BinaryExpression(=) [101-113] [t1.f4 = g.f4]
                      PathExpression [101-106] [t1.f4]
                        Identifier(t1) [101-103] [t1]
                        Identifier(f4) [104-106] [f4]
                      PathExpression [109-113] [g.f4]
                        Identifier(g) [109-110] [g]
                        Identifier(f4) [111-113] [f4]
                  GroupBy [120-131] [GROUP BY f3]
                    GroupingItem [129-131] [f3]
                      PathExpression [129-131] [f3]
                        Identifier(f3) [129-131] [f3]
      FromClause [133-142] [FROM T t1]
        TablePathExpression [138-142] [T t1]
          PathExpression [138-139] [T]
            Identifier(T) [138-139] [T]
          Alias [140-142] [t1]
            Identifier(t1) [140-142] [t1]
      GroupBy [143-154] [GROUP BY f1]
        GroupingItem [152-154] [f1]
          PathExpression [152-154] [f1]
            Identifier(f1) [152-154] [f1]
--
SELECT
  AVG(x) WITH GROUP_ROWS (
    SELECT
      f2 AS x
    FROM
      GROUP_ROWS() AS g,
      t1
    WHERE
      t1.f4 = g.f4
    GROUP BY f3
  )
FROM
  T AS t1
GROUP BY f1

==

# WITH GROUP_ROWS and subquery joining with outer table, no GROUP_ROWS()
SELECT
  AVG(x)
    WITH GROUP_ROWS (
      SELECT f2 AS x
      FROM T t2, t1
      WHERE t2.f4 = t1.f4
      GROUP BY f3)
FROM T t1 GROUP BY f1;
--
QueryStatement [0-145] [SELECT   AVG...GROUP BY f1]
  Query [0-145] [SELECT   AVG...GROUP BY f1]
    Select [0-145] [SELECT   AVG...GROUP BY f1]
      SelectList [9-123] [AVG(x)...GROUP BY f3)]
        SelectColumn [9-123] [AVG(x)...GROUP BY f3)]
          FunctionCall [9-123] [AVG(x)...GROUP BY f3)]
            PathExpression [9-12] [AVG]
              Identifier(AVG) [9-12] [AVG]
            PathExpression [13-14] [x]
              Identifier(x) [13-14] [x]
            WithGroupRows [9-123] [AVG(x)...GROUP BY f3)]
              Query [44-122] [SELECT f2...GROUP BY f3]
                Select [44-122] [SELECT f2...GROUP BY f3]
                  SelectList [51-58] [f2 AS x]
                    SelectColumn [51-58] [f2 AS x]
                      PathExpression [51-53] [f2]
                        Identifier(f2) [51-53] [f2]
                      Alias [54-58] [AS x]
                        Identifier(x) [57-58] [x]
                  FromClause [65-78] [FROM T t2, t1]
                    Join(COMMA) [70-78] [T t2, t1]
                      TablePathExpression [70-74] [T t2]
                        PathExpression [70-71] [T]
                          Identifier(T) [70-71] [T]
                        Alias [72-74] [t2]
                          Identifier(t2) [72-74] [t2]
                      Location [74-75] [,]
                      TablePathExpression [76-78] [t1]
                        PathExpression [76-78] [t1]
                          Identifier(t1) [76-78] [t1]
                  WhereClause [85-104] [WHERE t2.f4 = t1.f4]
                    BinaryExpression(=) [91-104] [t2.f4 = t1.f4]
                      PathExpression [91-96] [t2.f4]
                        Identifier(t2) [91-93] [t2]
                        Identifier(f4) [94-96] [f4]
                      PathExpression [99-104] [t1.f4]
                        Identifier(t1) [99-101] [t1]
                        Identifier(f4) [102-104] [f4]
                  GroupBy [111-122] [GROUP BY f3]
                    GroupingItem [120-122] [f3]
                      PathExpression [120-122] [f3]
                        Identifier(f3) [120-122] [f3]
      FromClause [124-133] [FROM T t1]
        TablePathExpression [129-133] [T t1]
          PathExpression [129-130] [T]
            Identifier(T) [129-130] [T]
          Alias [131-133] [t1]
            Identifier(t1) [131-133] [t1]
      GroupBy [134-145] [GROUP BY f1]
        GroupingItem [143-145] [f1]
          PathExpression [143-145] [f1]
            Identifier(f1) [143-145] [f1]
--
SELECT
  AVG(x) WITH GROUP_ROWS (
    SELECT
      f2 AS x
    FROM
      T AS t2,
      t1
    WHERE
      t2.f4 = t1.f4
    GROUP BY f3
  )
FROM
  T AS t1
GROUP BY f1

==

# GROUP_ROWS() as TVF with params
SELECT COUNT(f1)
FROM GROUP_ROWS(1, "a");
--
QueryStatement [0-40] [SELECT COUNT...UP_ROWS(1, "a")]
  Query [0-40] [SELECT COUNT...UP_ROWS(1, "a")]
    Select [0-40] [SELECT COUNT...UP_ROWS(1, "a")]
      SelectList [7-16] [COUNT(f1)]
        SelectColumn [7-16] [COUNT(f1)]
          FunctionCall [7-16] [COUNT(f1)]
            PathExpression [7-12] [COUNT]
              Identifier(COUNT) [7-12] [COUNT]
            PathExpression [13-15] [f1]
              Identifier(f1) [13-15] [f1]
      FromClause [17-40] [FROM GROUP_ROWS(1, "a")]
        TVF [22-40] [GROUP_ROWS(1, "a")]
          PathExpression [22-32] [GROUP_ROWS]
            Identifier(GROUP_ROWS) [22-32] [GROUP_ROWS]
          TVFArgument [33-34] [1]
            IntLiteral(1) [33-34] [1]
          TVFArgument [36-39] ["a"]
            StringLiteral("a") [36-39] ["a"]
--
SELECT
  COUNT(f1)
FROM
  GROUP_ROWS(1, "a")

==

# WITH OFFSET after FROM works
SELECT GROUP_ROWS FROM T WITH OFFSET
--
QueryStatement [0-36] [SELECT GROUP_ROWS...ITH OFFSET]
  Query [0-36] [SELECT GROUP_ROWS...ITH OFFSET]
    Select [0-36] [SELECT GROUP_ROWS...ITH OFFSET]
      SelectList [7-17] [GROUP_ROWS]
        SelectColumn [7-17] [GROUP_ROWS]
          PathExpression [7-17] [GROUP_ROWS]
            Identifier(GROUP_ROWS) [7-17] [GROUP_ROWS]
      FromClause [18-36] [FROM T WITH OFFSET]
        TablePathExpression [23-36] [T WITH OFFSET]
          PathExpression [23-24] [T]
            Identifier(T) [23-24] [T]
          WithOffset [25-36] [WITH OFFSET]
--
SELECT
  GROUP_ROWS
FROM
  T WITH OFFSET

==

# WITH OFFSET after CURRENT_TIMESTAMP()
SELECT * FROM GROUP_ROWS FOR SYSTEM_TIME AS OF CURRENT_TIMESTAMP() WITH OFFSET;
--
ERROR: Syntax error: Expected GROUP_ROWS but got keyword OFFSET [at 1:73]
SELECT * FROM GROUP_ROWS FOR SYSTEM_TIME AS OF CURRENT_TIMESTAMP() WITH OFFSET;
                                                                        ^
==

# WITH OFFSET after UNNEST() works
SELECT *
FROM GROUP_ROWS(), UNNEST(KitchenSink.nested_repeated_value) WITH OFFSET;
--
QueryStatement [0-81] [SELECT * FROM...WITH OFFSET]
  Query [0-81] [SELECT * FROM...WITH OFFSET]
    Select [0-81] [SELECT * FROM...WITH OFFSET]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-81] [FROM GROUP_ROWS...WITH OFFSET]
        Join(COMMA) [14-81] [GROUP_ROWS...WITH OFFSET]
          TVF [14-26] [GROUP_ROWS()]
            PathExpression [14-24] [GROUP_ROWS]
              Identifier(GROUP_ROWS) [14-24] [GROUP_ROWS]
          Location [26-27] [,]
          TablePathExpression [28-81] [UNNEST(KitchenSin...ITH OFFSET]
            UnnestExpression [28-69] [UNNEST(KitchenSin...ted_value)]
              ExpressionWithOptAlias [35-68] [KitchenSink...d_repeated_value]
                PathExpression [35-68] [KitchenSink...d_repeated_value]
                  Identifier(KitchenSink) [35-46] [KitchenSink]
                  Identifier(nested_repeated_value) [47-68] [nested_repeated_value]
            WithOffset [70-81] [WITH OFFSET]
--
SELECT
  *
FROM
  GROUP_ROWS(),
  UNNEST(KitchenSink.nested_repeated_value) WITH OFFSET

==

# WITH WEIGHT after RESERVOIR() works
SELECT
  f(x) WITH GROUP_ROWS (SELECT 1 as x FROM GROUP_ROWS()s)
FROM
  T1 TABLESAMPLE RESERVOIR(1 ROWS) WITH WEIGHT
--
QueryStatement [0-116] [SELECT   f...WITH WEIGHT]
  Query [0-116] [SELECT   f...WITH WEIGHT]
    Select [0-116] [SELECT   f...WITH WEIGHT]
      SelectList [9-64] [f(x) WITH...GROUP_ROWS()s)]
        SelectColumn [9-64] [f(x) WITH...GROUP_ROWS()s)]
          FunctionCall [9-64] [f(x) WITH...GROUP_ROWS()s)]
            PathExpression [9-10] [f]
              Identifier(f) [9-10] [f]
            PathExpression [11-12] [x]
              Identifier(x) [11-12] [x]
            WithGroupRows [9-64] [f(x) WITH...GROUP_ROWS()s)]
              Query [31-63] [SELECT 1 as...GROUP_ROWS()s]
                Select [31-63] [SELECT 1 as...GROUP_ROWS()s]
                  SelectList [38-44] [1 as x]
                    SelectColumn [38-44] [1 as x]
                      IntLiteral(1) [38-39] [1]
                      Alias [40-44] [as x]
                        Identifier(x) [43-44] [x]
                  FromClause [45-63] [FROM GROUP_ROWS()s]
                    TVF [50-63] [GROUP_ROWS()s]
                      PathExpression [50-60] [GROUP_ROWS]
                        Identifier(GROUP_ROWS) [50-60] [GROUP_ROWS]
                      Alias [62-63] [s]
                        Identifier(s) [62-63] [s]
      FromClause [65-116] [FROM   T1...WITH WEIGHT]
        TablePathExpression [72-116] [T1 TABLESAMPLE...WITH WEIGHT]
          PathExpression [72-74] [T1]
            Identifier(T1) [72-74] [T1]
          SampleClause [75-116] [TABLESAMPLE...WITH WEIGHT]
            Identifier(RESERVOIR) [87-96] [RESERVOIR]
            SampleSize [97-103] [1 ROWS]
              IntLiteral(1) [97-98] [1]
            SampleSuffix [105-116] [WITH WEIGHT]
              WithWeight [105-116] [WITH WEIGHT]
--
SELECT
  f(x) WITH GROUP_ROWS (
    SELECT
      1 AS x
    FROM
      GROUP_ROWS() AS s
  )
FROM
  T1 TABLESAMPLE RESERVOIR(1 ROWS) WITH WEIGHT

==

# WITH used for temporary table definition works
WITH nums AS
  (SELECT f(x) WITH GROUP_ROWS (SELECT x FROM GROUP_ROWS()) x FROM T)
SELECT some_numbers
FROM nums;
--
QueryStatement [0-112] [WITH nums...FROM nums]
  Query [0-112] [WITH nums...FROM nums]
    WithClause [0-82] [WITH nums...x FROM T)]
      AliasedQuery [5-82] [nums AS...x FROM T)]
        Identifier(nums) [5-9] [nums]
        Query [16-81] [SELECT f(x...) x FROM T]
          Select [16-81] [SELECT f(x...) x FROM T]
            SelectList [23-74] [f(x) WITH...GROUP_ROWS()) x]
              SelectColumn [23-74] [f(x) WITH...GROUP_ROWS()) x]
                FunctionCall [23-72] [f(x) WITH...GROUP_ROWS())]
                  PathExpression [23-24] [f]
                    Identifier(f) [23-24] [f]
                  PathExpression [25-26] [x]
                    Identifier(x) [25-26] [x]
                  WithGroupRows [23-72] [f(x) WITH...GROUP_ROWS())]
                    Query [45-71] [SELECT x FROM GROUP_ROWS()]
                      Select [45-71] [SELECT x FROM GROUP_ROWS()]
                        SelectList [52-53] [x]
                          SelectColumn [52-53] [x]
                            PathExpression [52-53] [x]
                              Identifier(x) [52-53] [x]
                        FromClause [54-71] [FROM GROUP_ROWS()]
                          TVF [59-71] [GROUP_ROWS()]
                            PathExpression [59-69] [GROUP_ROWS]
                              Identifier(GROUP_ROWS) [59-69] [GROUP_ROWS]
                Alias [73-74] [x]
                  Identifier(x) [73-74] [x]
            FromClause [75-81] [FROM T]
              TablePathExpression [80-81] [T]
                PathExpression [80-81] [T]
                  Identifier(T) [80-81] [T]
    Select [83-112] [SELECT some_numbers FROM nums]
      SelectList [90-102] [some_numbers]
        SelectColumn [90-102] [some_numbers]
          PathExpression [90-102] [some_numbers]
            Identifier(some_numbers) [90-102] [some_numbers]
      FromClause [103-112] [FROM nums]
        TablePathExpression [108-112] [nums]
          PathExpression [108-112] [nums]
            Identifier(nums) [108-112] [nums]
--
WITH
  nums AS (
    SELECT
      f(x) WITH GROUP_ROWS (
        SELECT
          x
        FROM
          GROUP_ROWS()
      ) AS x
    FROM
      T
  )
SELECT
  some_numbers
FROM
  nums

==

# WITH used to define query referring GROUP_ROWS()
WITH t1 AS (SELECT MAX(x) x FROM GROUP_ROWS())
SELECT AVG(x) WITH GROUP_ROWS (SELECT * FROM t1)
FROM T;
--
QueryStatement [0-102] [WITH t1 AS...t1) FROM T]
  Query [0-102] [WITH t1 AS...t1) FROM T]
    WithClause [0-46] [WITH t1 AS...GROUP_ROWS())]
      AliasedQuery [5-46] [t1 AS (SELECT...GROUP_ROWS())]
        Identifier(t1) [5-7] [t1]
        Query [12-45] [SELECT MAX...GROUP_ROWS()]
          Select [12-45] [SELECT MAX...GROUP_ROWS()]
            SelectList [19-27] [MAX(x) x]
              SelectColumn [19-27] [MAX(x) x]
                FunctionCall [19-25] [MAX(x)]
                  PathExpression [19-22] [MAX]
                    Identifier(MAX) [19-22] [MAX]
                  PathExpression [23-24] [x]
                    Identifier(x) [23-24] [x]
                Alias [26-27] [x]
                  Identifier(x) [26-27] [x]
            FromClause [28-45] [FROM GROUP_ROWS()]
              TVF [33-45] [GROUP_ROWS()]
                PathExpression [33-43] [GROUP_ROWS]
                  Identifier(GROUP_ROWS) [33-43] [GROUP_ROWS]
    Select [47-102] [SELECT AVG...t1) FROM T]
      SelectList [54-95] [AVG(x) WITH...* FROM t1)]
        SelectColumn [54-95] [AVG(x) WITH...* FROM t1)]
          FunctionCall [54-95] [AVG(x) WITH...* FROM t1)]
            PathExpression [54-57] [AVG]
              Identifier(AVG) [54-57] [AVG]
            PathExpression [58-59] [x]
              Identifier(x) [58-59] [x]
            WithGroupRows [54-95] [AVG(x) WITH...* FROM t1)]
              Query [78-94] [SELECT * FROM t1]
                Select [78-94] [SELECT * FROM t1]
                  SelectList [85-86] [*]
                    SelectColumn [85-86] [*]
                      Star(*) [85-86] [*]
                  FromClause [87-94] [FROM t1]
                    TablePathExpression [92-94] [t1]
                      PathExpression [92-94] [t1]
                        Identifier(t1) [92-94] [t1]
      FromClause [96-102] [FROM T]
        TablePathExpression [101-102] [T]
          PathExpression [101-102] [T]
            Identifier(T) [101-102] [T]
--
WITH
  t1 AS (
    SELECT
      MAX(x) AS x
    FROM
      GROUP_ROWS()
  )
SELECT
  AVG(x) WITH GROUP_ROWS (
    SELECT
      *
    FROM
      t1
  )
FROM
  T
==

# WITH GROUP_ROWS feature disabled
[language_features=]
SELECT f(x) WITH GROUP_ROWS (SELECT x FROM GROUP_ROWS()) FROM T;
--
ERROR: WITH GROUP_ROWS is not supported [at 1:13]
SELECT f(x) WITH GROUP_ROWS (SELECT x FROM GROUP_ROWS()) FROM T;
            ^
==

# Function call hints.
@{hint_statement_int=123} SELECT f(x) @{hint_call_int=789, hint_call_string="a b c"} FROM T;
--
HintedStatement [0-91] [@{hint_statement_...c"} FROM T]
  Hint [0-25] [@{hint_statement_int=123}]
    HintEntry [2-24] [hint_statement_int=123]
      Identifier(hint_statement_int) [2-20] [hint_statement_int]
      IntLiteral(123) [21-24] [123]
  QueryStatement [26-91] [SELECT f(x...c"} FROM T]
    Query [26-91] [SELECT f(x...c"} FROM T]
      Select [26-91] [SELECT f(x...c"} FROM T]
        SelectList [33-84] [f(x) @{hint_call_...g="a b c"}]
          SelectColumn [33-84] [f(x) @{hint_call_...g="a b c"}]
            FunctionCall [33-84] [f(x) @{hint_call_...g="a b c"}]
              PathExpression [33-34] [f]
                Identifier(f) [33-34] [f]
              PathExpression [35-36] [x]
                Identifier(x) [35-36] [x]
              Hint [38-84] [@{hint_call_int...ing="a b c"}]
                HintEntry [40-57] [hint_call_int=789]
                  Identifier(hint_call_int) [40-53] [hint_call_int]
                  IntLiteral(789) [54-57] [789]
                HintEntry [59-83] [hint_call_string="a b c"]
                  Identifier(hint_call_string) [59-75] [hint_call_string]
                  StringLiteral("a b c") [76-83] ["a b c"]
        FromClause [85-91] [FROM T]
          TablePathExpression [90-91] [T]
            PathExpression [90-91] [T]
              Identifier(T) [90-91] [T]
--
@{ hint_statement_int = 123 }
SELECT
  f(x) @{ hint_call_int = 789, hint_call_string = "a b c" }
FROM
  T
