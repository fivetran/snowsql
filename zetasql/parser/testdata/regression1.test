# Ensure this doesn't crash.
select col1,(exists @{a = b} (select col2 from T2)
from T1
where exists @{a=1} (select col from T3)
--
ERROR: Syntax error: Unexpected keyword FROM [at 2:1]
from T1
^
==

SELECT 
TRY_CAST(COALESCE(ARRAY<gtype>[CAST('TESTENUM1' AS gtype)]) 
AS ARRAY<gtype>) AS a_1, 
TRY_CAST(COALESCE(ARRAY<gtype>[CAST('' AS gtype)]) AS ARRAY<gtype>) AS a_2, 
TRY_CAST(COALESCE(STRUCT<BOOL, ARRAY<gtype>, gtype>(false, 
ARRAY<gtype>[CAST('' AS gtype)], CAST('TESTENUM1' AS gtype))) AS STRUCT<BOOL, ARRAY<gtype>, gtype>) 
--
QueryStatement [0-331] [SELECT  TRY_CAST...>, gtype>)]
  Query [0-331] [SELECT  TRY_CAST...>, gtype>)]
    Select [0-331] [SELECT  TRY_CAST...>, gtype>)]
      SelectList [8-331] [TRY_CAST(COALESCE...>, gtype>)]
        SelectColumn [8-92] [TRY_CAST(COALESCE...e>) AS a_1]
          CastExpression(return_null_on_error=true) [8-85] [TRY_CAST(COALESCE...AY<gtype>)]
            FunctionCall [17-67] [COALESCE(ARRAY...AS gtype)])]
              PathExpression [17-25] [COALESCE]
                Identifier(COALESCE) [17-25] [COALESCE]
              ArrayConstructor [26-66] [ARRAY<gtype...AS gtype)]]
                ArrayType [26-38] [ARRAY<gtype>]
                  SimpleType [32-37] [gtype]
                    PathExpression [32-37] [gtype]
                      Identifier(gtype) [32-37] [gtype]
                CastExpression [39-65] [CAST('TESTENUM1' AS gtype)]
                  StringLiteral('TESTENUM1') [44-55] ['TESTENUM1']
                  SimpleType [59-64] [gtype]
                    PathExpression [59-64] [gtype]
                      Identifier(gtype) [59-64] [gtype]
            ArrayType [72-84] [ARRAY<gtype>]
              SimpleType [78-83] [gtype]
                PathExpression [78-83] [gtype]
                  Identifier(gtype) [78-83] [gtype]
          Alias [86-92] [AS a_1]
            Identifier(a_1) [89-92] [a_1]
        SelectColumn [95-169] [TRY_CAST(COALESCE...e>) AS a_2]
          CastExpression(return_null_on_error=true) [95-162] [TRY_CAST(COALESCE...AY<gtype>)]
            FunctionCall [104-145] [COALESCE(ARRAY...AS gtype)])]
              PathExpression [104-112] [COALESCE]
                Identifier(COALESCE) [104-112] [COALESCE]
              ArrayConstructor [113-144] [ARRAY<gtype...AS gtype)]]
                ArrayType [113-125] [ARRAY<gtype>]
                  SimpleType [119-124] [gtype]
                    PathExpression [119-124] [gtype]
                      Identifier(gtype) [119-124] [gtype]
                CastExpression [126-143] [CAST('' AS gtype)]
                  StringLiteral('') [131-133] ['']
                  SimpleType [137-142] [gtype]
                    PathExpression [137-142] [gtype]
                      Identifier(gtype) [137-142] [gtype]
            ArrayType [149-161] [ARRAY<gtype>]
              SimpleType [155-160] [gtype]
                PathExpression [155-160] [gtype]
                  Identifier(gtype) [155-160] [gtype]
          Alias [163-169] [AS a_2]
            Identifier(a_2) [166-169] [a_2]
        SelectColumn [172-331] [TRY_CAST(COALESCE...>, gtype>)]
          CastExpression(return_null_on_error=true) [172-331] [TRY_CAST(COALESCE...>, gtype>)]
            FunctionCall [181-293] [COALESCE(STRUCT...AS gtype)))]
              PathExpression [181-189] [COALESCE]
                Identifier(COALESCE) [181-189] [COALESCE]
              StructConstructorWithKeyword [190-292] [STRUCT<BOOL...AS gtype))]
                StructType [190-223] [STRUCT<BOOL...gtype>, gtype>]
                  StructField [197-201] [BOOL]
                    SimpleType [197-201] [BOOL]
                      PathExpression [197-201] [BOOL]
                        Identifier(BOOL) [197-201] [BOOL]
                  StructField [203-215] [ARRAY<gtype>]
                    ArrayType [203-215] [ARRAY<gtype>]
                      SimpleType [209-214] [gtype]
                        PathExpression [209-214] [gtype]
                          Identifier(gtype) [209-214] [gtype]
                  StructField [217-222] [gtype]
                    SimpleType [217-222] [gtype]
                      PathExpression [217-222] [gtype]
                        Identifier(gtype) [217-222] [gtype]
                StructConstructorArg [224-229] [false]
                  BooleanLiteral(false) [224-229] [false]
                StructConstructorArg [232-263] [ARRAY<gtype...AS gtype)]]
                  ArrayConstructor [232-263] [ARRAY<gtype...AS gtype)]]
                    ArrayType [232-244] [ARRAY<gtype>]
                      SimpleType [238-243] [gtype]
                        PathExpression [238-243] [gtype]
                          Identifier(gtype) [238-243] [gtype]
                    CastExpression [245-262] [CAST('' AS gtype)]
                      StringLiteral('') [250-252] ['']
                      SimpleType [256-261] [gtype]
                        PathExpression [256-261] [gtype]
                          Identifier(gtype) [256-261] [gtype]
                StructConstructorArg [265-291] [CAST('TESTENUM1' AS gtype)]
                  CastExpression [265-291] [CAST('TESTENUM1' AS gtype)]
                    StringLiteral('TESTENUM1') [270-281] ['TESTENUM1']
                    SimpleType [285-290] [gtype]
                      PathExpression [285-290] [gtype]
                        Identifier(gtype) [285-290] [gtype]
            StructType [297-330] [STRUCT<BOOL...gtype>, gtype>]
              StructField [304-308] [BOOL]
                SimpleType [304-308] [BOOL]
                  PathExpression [304-308] [BOOL]
                    Identifier(BOOL) [304-308] [BOOL]
              StructField [310-322] [ARRAY<gtype>]
                ArrayType [310-322] [ARRAY<gtype>]
                  SimpleType [316-321] [gtype]
                    PathExpression [316-321] [gtype]
                      Identifier(gtype) [316-321] [gtype]
              StructField [324-329] [gtype]
                SimpleType [324-329] [gtype]
                  PathExpression [324-329] [gtype]
                    Identifier(gtype) [324-329] [gtype]
--
SELECT
  TRY_CAST(COALESCE(ARRAY< gtype >[CAST('TESTENUM1' AS gtype)]) AS ARRAY< gtype >) AS a_1,
  TRY_CAST(COALESCE(ARRAY< gtype >[CAST('' AS gtype)]) AS ARRAY< gtype >) AS a_2,
  TRY_CAST(COALESCE(STRUCT< BOOL, ARRAY< gtype >, gtype > (false, ARRAY< gtype >[CAST('' AS gtype)], CAST('TESTENUM1' AS gtype))) AS STRUCT<
  BOOL, ARRAY< gtype >, gtype >)
==

==
