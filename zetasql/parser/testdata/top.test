# TODO: Remove no_show_parse_location_text after parse locations
# have been manually verified as correct.
[default no_show_parse_location_text]
select TOP 1 1;
--
QueryStatement [0-14]
  Query [0-14]
    Select [0-14]
      Top [7-12]
        IntLiteral(1) [11-12]
      SelectList [13-14]
        SelectColumn [13-14]
          IntLiteral(1) [13-14]
--
SELECT
TOP 1
  1
==

SELECT TOP 0 1;
--
QueryStatement [0-14]
  Query [0-14]
    Select [0-14]
      Top [7-12]
        IntLiteral(0) [11-12]
      SelectList [13-14]
        SelectColumn [13-14]
          IntLiteral(1) [13-14]
--
SELECT
TOP 0
  1
==

SELECT TOP cast(1 as int32) 1;
--
QueryStatement [0-29]
  Query [0-29]
    Select [0-29]
      Top [7-27]
        CastExpression [11-27]
          IntLiteral(1) [16-17]
          SimpleType [21-26]
            PathExpression [21-26]
              Identifier(int32) [21-26]
      SelectList [28-29]
        SelectColumn [28-29]
          IntLiteral(1) [28-29]
--
SELECT
TOP CAST(1 AS int32)
  1
==

SELECT TOP cast(@param1 as int32) 1;
--
QueryStatement [0-35]
  Query [0-35]
    Select [0-35]
      Top [7-33]
        CastExpression [11-33]
          ParameterExpr [16-23]
            Identifier(param1) [17-23]
          SimpleType [27-32]
            PathExpression [27-32]
              Identifier(int32) [27-32]
      SelectList [34-35]
        SelectColumn [34-35]
          IntLiteral(1) [34-35]
--
SELECT
TOP CAST(@param1 AS int32)
  1
==

SELECT TOP cast(@@sysvar1 as int32) 1;
--
QueryStatement [0-37]
  Query [0-37]
    Select [0-37]
      Top [7-35]
        CastExpression [11-35]
          SystemVariableExpr [16-25]
            PathExpression [18-25]
              Identifier(sysvar1) [18-25]
          SimpleType [29-34]
            PathExpression [29-34]
              Identifier(int32) [29-34]
      SelectList [36-37]
        SelectColumn [36-37]
          IntLiteral(1) [36-37]
--
SELECT
TOP CAST(@@sysvar1 AS int32)
  1
==

SELECT TOP cast(cast(1 as int32) as int32) 1;
--
ERROR: Syntax error: Expected "@" or "@@" or integer literal but got keyword CAST [at 1:17]
SELECT TOP cast(cast(1 as int32) as int32) 1;
                ^
==

SELECT TOP 1 1
UNION ALL
SELECT TOP 1 1
--
QueryStatement [0-39]
  Query [0-39]
    SetOperation(UNION ALL) [0-39]
      Select [0-14]
        Top [7-12]
          IntLiteral(1) [11-12]
        SelectList [13-14]
          SelectColumn [13-14]
            IntLiteral(1) [13-14]
      Select [25-39]
        Top [32-37]
          IntLiteral(1) [36-37]
        SelectList [38-39]
          SelectColumn [38-39]
            IntLiteral(1) [38-39]
--
SELECT
TOP 1
  1
UNION ALL
SELECT
TOP 1
  1
==

select (select TOP 1 1), EXISTS(select TOP 0 2),
    ARRAY(select TOP 1 3)
from T;
--
QueryStatement [0-81]
  Query [0-81]
    Select [0-81]
      SelectList [7-74]
        SelectColumn [7-23]
          ExpressionSubquery [7-23]
            Query [8-22]
              Select [8-22]
                Top [15-20]
                  IntLiteral(1) [19-20]
                SelectList [21-22]
                  SelectColumn [21-22]
                    IntLiteral(1) [21-22]
        SelectColumn [25-47]
          ExpressionSubquery(modifier=EXISTS) [25-47]
            Query [32-46]
              Select [32-46]
                Top [39-44]
                  IntLiteral(0) [43-44]
                SelectList [45-46]
                  SelectColumn [45-46]
                    IntLiteral(2) [45-46]
        SelectColumn [53-74]
          ExpressionSubquery(modifier=ARRAY) [53-74]
            Query [59-73]
              Select [59-73]
                Top [66-71]
                  IntLiteral(1) [70-71]
                SelectList [72-73]
                  SelectColumn [72-73]
                    IntLiteral(3) [72-73]
      FromClause [75-81]
        TablePathExpression [80-81]
          PathExpression [80-81]
            Identifier(T) [80-81]
--
SELECT
  (
    SELECT
    TOP 1
      1
  ),
  EXISTS(
    SELECT
    TOP 0
      2
  ),
  ARRAY(
    SELECT
    TOP 1
      3
  )
FROM
  T
==

SELECT *
FROM (SELECT TOP 10 * FROM T) sub_foo;
--
QueryStatement [0-46]
  Query [0-46]
    Select [0-46]
      SelectList [7-8]
        SelectColumn [7-8]
          Star(*) [7-8]
      FromClause [9-46]
        TableSubquery [14-46]
          Query [15-37]
            Select [15-37]
              Top [22-28]
                IntLiteral(10) [26-28]
              SelectList [29-30]
                SelectColumn [29-30]
                  Star(*) [29-30]
              FromClause [31-37]
                TablePathExpression [36-37]
                  PathExpression [36-37]
                    Identifier(T) [36-37]
          Alias [39-46]
            Identifier(sub_foo) [39-46]
--
SELECT
  *
FROM
  (
    SELECT
    TOP 10
      *
    FROM
      T
  ) AS sub_foo
==

select TOP 3 a from t order by a, b;
--
QueryStatement [0-35]
  Query [0-35]
    Select [0-21]
      Top [7-12]
        IntLiteral(3) [11-12]
      SelectList [13-14]
        SelectColumn [13-14]
          PathExpression [13-14]
            Identifier(a) [13-14]
      FromClause [15-21]
        TablePathExpression [20-21]
          PathExpression [20-21]
            Identifier(t) [20-21]
    OrderBy [22-35]
      OrderingExpression(ASC) [31-32]
        PathExpression [31-32]
          Identifier(a) [31-32]
      OrderingExpression(ASC) [34-35]
        PathExpression [34-35]
          Identifier(b) [34-35]
--
SELECT
TOP 3
  a
FROM
  t
ORDER BY a, b
==

# ORDER BY and TOP
select TOP 2 *
from (
select a from t
union all
select b from t
) as tmp
order by 1
--
QueryStatement [0-83]
  Query [0-83]
    Select [0-72]
      Top [7-12]
        IntLiteral(2) [11-12]
      SelectList [13-14]
        SelectColumn [13-14]
          Star(*) [13-14]
      FromClause [15-72]
        TableSubquery [20-72]
          Query [22-63]
            SetOperation(UNION ALL) [22-63]
              Select [22-37]
                SelectList [29-30]
                  SelectColumn [29-30]
                    PathExpression [29-30]
                      Identifier(a) [29-30]
                FromClause [31-37]
                  TablePathExpression [36-37]
                    PathExpression [36-37]
                      Identifier(t) [36-37]
              Select [48-63]
                SelectList [55-56]
                  SelectColumn [55-56]
                    PathExpression [55-56]
                      Identifier(b) [55-56]
                FromClause [57-63]
                  TablePathExpression [62-63]
                    PathExpression [62-63]
                      Identifier(t) [62-63]
          Alias [66-72]
            Identifier(tmp) [69-72]
    OrderBy [73-83]
      OrderingExpression(ASC) [82-83]
        IntLiteral(1) [82-83]
--
SELECT
TOP 2
  *
FROM
  (
    SELECT
      a
    FROM
      t
    UNION ALL
    SELECT
      b
    FROM
      t
  ) AS tmp
ORDER BY 1
==

# Expected Errors Below
select 1 top 1;
--
ERROR: Syntax error: Expected end of input but got keyword TOP [at 1:10]
select 1 top 1;
         ^
==

# Should generate valid parse tree. Error should be handled by analyzer.
select top 1 1 limit 1;
--
QueryStatement [0-22]
  Query [0-22]
    Select [0-14]
      Top [7-12]
        IntLiteral(1) [11-12]
      SelectList [13-14]
        SelectColumn [13-14]
          IntLiteral(1) [13-14]
    LimitOffset [15-22]
      IntLiteral(1) [21-22]
--
SELECT
TOP 1
  1
LIMIT 1
==

select 1 top;
--
ERROR: Syntax error: Expected end of input but got keyword TOP [at 1:10]
select 1 top;
         ^
==

select TOP a a from t order by a, b;
--
ERROR: Syntax error: Unexpected identifier "a" [at 1:12]
select TOP a a from t order by a, b;
           ^
==

SELECT TOP 1 TOP 1 1;
--
ERROR: Syntax error: Unexpected keyword TOP [at 1:14]
SELECT TOP 1 TOP 1 1;
             ^
==

SELECT TOP -1 1;
--
ERROR: Syntax error: Unexpected "-" [at 1:12]
SELECT TOP -1 1;
           ^
==

SELECT TOP 1.5 1;
--
ERROR: Syntax error: Unexpected floating point literal "1.5" [at 1:12]
SELECT TOP 1.5 1;
           ^
==

SELECT TOP 'abc' 1;
--
ERROR: Syntax error: Unexpected string literal 'abc' [at 1:12]
SELECT TOP 'abc' 1;
           ^
==

SELECT TOP @param 1;
--
QueryStatement [0-19]
  Query [0-19]
    Select [0-19]
      Top [7-17]
        ParameterExpr [11-17]
          Identifier(param) [12-17]
      SelectList [18-19]
        SelectColumn [18-19]
          IntLiteral(1) [18-19]
--
SELECT
TOP @param
  1
