# This file contains test cases to test joins with consecutive ON/USING clauses
# Simple test case
[default language_features=V_1_3_ALLOW_CONSECUTIVE_ON]
select * from a join b join c join d on cond1 on cond2 on cond3;
--
QueryStatement [0-63] [select * from...cond2 on cond3]
  Query [0-63] [select * from...cond2 on cond3]
    Select [0-63] [select * from...cond2 on cond3]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-63] [from a join...cond2 on cond3]
        Join [14-63] [a join b join...cond2 on cond3]
          TablePathExpression [14-15] [a]
            PathExpression [14-15] [a]
              Identifier(a) [14-15] [a]
          Location [16-20] [join]
          Join [14-54] [a join b join...cond1 on cond2]
            TablePathExpression [21-22] [b]
              PathExpression [21-22] [b]
                Identifier(b) [21-22] [b]
            Location [23-27] [join]
            Join [14-45] [a join b join...d on cond1]
              TablePathExpression [28-29] [c]
                PathExpression [28-29] [c]
                  Identifier(c) [28-29] [c]
              Location [30-34] [join]
              TablePathExpression [35-36] [d]
                PathExpression [35-36] [d]
                  Identifier(d) [35-36] [d]
              OnClause [37-45] [on cond1]
                PathExpression [40-45] [cond1]
                  Identifier(cond1) [40-45] [cond1]
            OnClause [46-54] [on cond2]
              PathExpression [49-54] [cond2]
                Identifier(cond2) [49-54] [cond2]
          OnClause [55-63] [on cond3]
            PathExpression [58-63] [cond3]
              Identifier(cond3) [58-63] [cond3]
--
SELECT
  *
FROM
  a
  JOIN
  b
  JOIN
  c
  JOIN
  d
  ON cond1
  ON cond2
  ON cond3
==

# Test that hints are preserved during transformation
select * from a HASH join @{h1=v1} b join c on cond1 on cond2;
--
QueryStatement [0-61] [select * from...cond1 on cond2]
  Query [0-61] [select * from...cond1 on cond2]
    Select [0-61] [select * from...cond1 on cond2]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-61] [from a HASH...cond1 on cond2]
        Join(HASH) [14-61] [a HASH join...cond1 on cond2]
          TablePathExpression [14-15] [a]
            PathExpression [14-15] [a]
              Identifier(a) [14-15] [a]
          Hint [26-34] [@{h1=v1}]
            HintEntry [28-33] [h1=v1]
              Identifier(h1) [28-30] [h1]
              PathExpression [31-33] [v1]
                Identifier(v1) [31-33] [v1]
          Location [16-25] [HASH join]
          Join [14-52] [a HASH join...c on cond1]
            TablePathExpression [35-36] [b]
              PathExpression [35-36] [b]
                Identifier(b) [35-36] [b]
            Location [37-41] [join]
            TablePathExpression [42-43] [c]
              PathExpression [42-43] [c]
                Identifier(c) [42-43] [c]
            OnClause [44-52] [on cond1]
              PathExpression [47-52] [cond1]
                Identifier(cond1) [47-52] [cond1]
          OnClause [53-61] [on cond2]
            PathExpression [56-61] [cond2]
              Identifier(cond2) [56-61] [cond2]
--
SELECT
  *
FROM
  a
  HASH JOIN
  @{ h1 = v1 } b
  JOIN
  c
  ON cond1
  ON cond2
==

# Test that join types are preserved during transformation
select * from a left join b full outer join c on cond1 on cond2;
--
QueryStatement [0-63] [select * from...cond1 on cond2]
  Query [0-63] [select * from...cond1 on cond2]
    Select [0-63] [select * from...cond1 on cond2]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-63] [from a left...cond1 on cond2]
        Join(LEFT) [14-63] [a left join...cond1 on cond2]
          TablePathExpression [14-15] [a]
            PathExpression [14-15] [a]
              Identifier(a) [14-15] [a]
          Location [16-25] [left join]
          Join(FULL) [14-54] [a left join...c on cond1]
            TablePathExpression [26-27] [b]
              PathExpression [26-27] [b]
                Identifier(b) [26-27] [b]
            Location [28-43] [full outer join]
            TablePathExpression [44-45] [c]
              PathExpression [44-45] [c]
                Identifier(c) [44-45] [c]
            OnClause [46-54] [on cond1]
              PathExpression [49-54] [cond1]
                Identifier(cond1) [49-54] [cond1]
          OnClause [55-63] [on cond2]
            PathExpression [58-63] [cond2]
              Identifier(cond2) [58-63] [cond2]
--
SELECT
  *
FROM
  a
  LEFT JOIN
  b
  FULL JOIN
  c
  ON cond1
  ON cond2
==

# Test transformation of expressions containing CROSS JOIN
select * from a join b cross join c join d on cond1 on cond2
--
QueryStatement [0-60] [select * from...cond1 on cond2]
  Query [0-60] [select * from...cond1 on cond2]
    Select [0-60] [select * from...cond1 on cond2]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-60] [from a join...cond1 on cond2]
        Join [14-60] [a join b cross...ond1 on cond2]
          TablePathExpression [14-15] [a]
            PathExpression [14-15] [a]
              Identifier(a) [14-15] [a]
          Location [16-20] [join]
          Join [14-51] [a join b cross...d on cond1]
            Join(CROSS) [14-35] [a join b cross join c]
              TablePathExpression [21-22] [b]
                PathExpression [21-22] [b]
                  Identifier(b) [21-22] [b]
              Location [23-33] [cross join]
              TablePathExpression [34-35] [c]
                PathExpression [34-35] [c]
                  Identifier(c) [34-35] [c]
            Location [36-40] [join]
            TablePathExpression [41-42] [d]
              PathExpression [41-42] [d]
                Identifier(d) [41-42] [d]
            OnClause [43-51] [on cond1]
              PathExpression [46-51] [cond1]
                Identifier(cond1) [46-51] [cond1]
          OnClause [52-60] [on cond2]
            PathExpression [55-60] [cond2]
              Identifier(cond2) [55-60] [cond2]
--
SELECT
  *
FROM
  a
  JOIN
  b
  CROSS JOIN
  c
  JOIN
  d
  ON cond1
  ON cond2
==

# Expressions containing multiple CROSS JOINs
select * from a join b cross join c cross join d join e on cond1 on cond2
--
QueryStatement [0-73] [select * from...cond1 on cond2]
  Query [0-73] [select * from...cond1 on cond2]
    Select [0-73] [select * from...cond1 on cond2]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-73] [from a join...cond1 on cond2]
        Join [14-73] [a join b cross...ond1 on cond2]
          TablePathExpression [14-15] [a]
            PathExpression [14-15] [a]
              Identifier(a) [14-15] [a]
          Location [16-20] [join]
          Join [14-64] [a join b cross...e on cond1]
            Join(CROSS) [14-48] [a join b cross...cross join d]
              Join(CROSS) [14-35] [a join b cross join c]
                TablePathExpression [21-22] [b]
                  PathExpression [21-22] [b]
                    Identifier(b) [21-22] [b]
                Location [23-33] [cross join]
                TablePathExpression [34-35] [c]
                  PathExpression [34-35] [c]
                    Identifier(c) [34-35] [c]
              Location [36-46] [cross join]
              TablePathExpression [47-48] [d]
                PathExpression [47-48] [d]
                  Identifier(d) [47-48] [d]
            Location [49-53] [join]
            TablePathExpression [54-55] [e]
              PathExpression [54-55] [e]
                Identifier(e) [54-55] [e]
            OnClause [56-64] [on cond1]
              PathExpression [59-64] [cond1]
                Identifier(cond1) [59-64] [cond1]
          OnClause [65-73] [on cond2]
            PathExpression [68-73] [cond2]
              Identifier(cond2) [68-73] [cond2]
--
SELECT
  *
FROM
  a
  JOIN
  b
  CROSS JOIN
  c
  CROSS JOIN
  d
  JOIN
  e
  ON cond1
  ON cond2
==

# Test expression with NATURAL JOIN
select * from a join b natural join c join d on cond1 on cond2
--
QueryStatement [0-62] [select * from...cond1 on cond2]
  Query [0-62] [select * from...cond1 on cond2]
    Select [0-62] [select * from...cond1 on cond2]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-62] [from a join...cond1 on cond2]
        Join [14-62] [a join b natural...d1 on cond2]
          TablePathExpression [14-15] [a]
            PathExpression [14-15] [a]
              Identifier(a) [14-15] [a]
          Location [16-20] [join]
          Join [14-53] [a join b natural...d on cond1]
            Join(NATURAL) [14-37] [a join b natural join c]
              TablePathExpression [21-22] [b]
                PathExpression [21-22] [b]
                  Identifier(b) [21-22] [b]
              Location [23-35] [natural join]
              TablePathExpression [36-37] [c]
                PathExpression [36-37] [c]
                  Identifier(c) [36-37] [c]
            Location [38-42] [join]
            TablePathExpression [43-44] [d]
              PathExpression [43-44] [d]
                Identifier(d) [43-44] [d]
            OnClause [45-53] [on cond1]
              PathExpression [48-53] [cond1]
                Identifier(cond1) [48-53] [cond1]
          OnClause [54-62] [on cond2]
            PathExpression [57-62] [cond2]
              Identifier(cond2) [57-62] [cond2]
--
SELECT
  *
FROM
  a
  JOIN
  b
  NATURAL JOIN
  c
  JOIN
  d
  ON cond1
  ON cond2
==

# Test CROSS JOIN with hints
select * from a join b cross hash join @{h1=v1} c join d on cond1 on cond2
--
QueryStatement [0-74] [select * from...cond1 on cond2]
  Query [0-74] [select * from...cond1 on cond2]
    Select [0-74] [select * from...cond1 on cond2]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-74] [from a join...cond1 on cond2]
        Join [14-74] [a join b cross...ond1 on cond2]
          TablePathExpression [14-15] [a]
            PathExpression [14-15] [a]
              Identifier(a) [14-15] [a]
          Location [16-20] [join]
          Join [14-65] [a join b cross...d on cond1]
            Join(CROSS, HASH) [14-49] [a join b cross...@{h1=v1} c]
              TablePathExpression [21-22] [b]
                PathExpression [21-22] [b]
                  Identifier(b) [21-22] [b]
              Hint [39-47] [@{h1=v1}]
                HintEntry [41-46] [h1=v1]
                  Identifier(h1) [41-43] [h1]
                  PathExpression [44-46] [v1]
                    Identifier(v1) [44-46] [v1]
              Location [23-38] [cross hash join]
              TablePathExpression [48-49] [c]
                PathExpression [48-49] [c]
                  Identifier(c) [48-49] [c]
            Location [50-54] [join]
            TablePathExpression [55-56] [d]
              PathExpression [55-56] [d]
                Identifier(d) [55-56] [d]
            OnClause [57-65] [on cond1]
              PathExpression [60-65] [cond1]
                Identifier(cond1) [60-65] [cond1]
          OnClause [66-74] [on cond2]
            PathExpression [69-74] [cond2]
              Identifier(cond2) [69-74] [cond2]
--
SELECT
  *
FROM
  a
  JOIN
  b
  CROSS HASH JOIN
  @{ h1 = v1 } c
  JOIN
  d
  ON cond1
  ON cond2
==

# Test expression containing parenthesized join
select * from (a JOIN b) JOIN c JOIN d ON cond1 ON cond2;
--
QueryStatement [0-56] [select * from...cond1 ON cond2]
  Query [0-56] [select * from...cond1 ON cond2]
    Select [0-56] [select * from...cond1 ON cond2]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-56] [from (a JOIN...cond1 ON cond2]
        Join [14-56] [(a JOIN b)...cond1 ON cond2]
          ParenthesizedJoin [14-24] [(a JOIN b)]
            Join [15-23] [a JOIN b]
              TablePathExpression [15-16] [a]
                PathExpression [15-16] [a]
                  Identifier(a) [15-16] [a]
              Location [17-21] [JOIN]
              TablePathExpression [22-23] [b]
                PathExpression [22-23] [b]
                  Identifier(b) [22-23] [b]
          Location [25-29] [JOIN]
          Join [14-47] [(a JOIN b)...d ON cond1]
            TablePathExpression [30-31] [c]
              PathExpression [30-31] [c]
                Identifier(c) [30-31] [c]
            Location [32-36] [JOIN]
            TablePathExpression [37-38] [d]
              PathExpression [37-38] [d]
                Identifier(d) [37-38] [d]
            OnClause [39-47] [ON cond1]
              PathExpression [42-47] [cond1]
                Identifier(cond1) [42-47] [cond1]
          OnClause [48-56] [ON cond2]
            PathExpression [51-56] [cond2]
              Identifier(cond2) [51-56] [cond2]
--
SELECT
  *
FROM
  (
    a
    JOIN
    b
  )
  JOIN
  c
  JOIN
  d
  ON cond1
  ON cond2
==

# Test expression containing parenthesized join in the middle
select * from t1 JOIN (t2 JOIN t3 JOIN t4 ON cond1 ON cond2) JOIN t5 ON cond3 ON cond4;
--
QueryStatement [0-86] [select * from...cond3 ON cond4]
  Query [0-86] [select * from...cond3 ON cond4]
    Select [0-86] [select * from...cond3 ON cond4]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-86] [from t1 JOIN...cond3 ON cond4]
        Join [14-86] [t1 JOIN (t2...cond3 ON cond4]
          TablePathExpression [14-16] [t1]
            PathExpression [14-16] [t1]
              Identifier(t1) [14-16] [t1]
          Location [17-21] [JOIN]
          Join [14-77] [t1 JOIN (t2...t5 ON cond3]
            ParenthesizedJoin [22-60] [(t2 JOIN t3...ON cond2)]
              Join [23-59] [t2 JOIN t3...cond1 ON cond2]
                TablePathExpression [23-25] [t2]
                  PathExpression [23-25] [t2]
                    Identifier(t2) [23-25] [t2]
                Location [26-30] [JOIN]
                Join [23-50] [t2 JOIN t3 JOIN t4 ON cond1]
                  TablePathExpression [31-33] [t3]
                    PathExpression [31-33] [t3]
                      Identifier(t3) [31-33] [t3]
                  Location [34-38] [JOIN]
                  TablePathExpression [39-41] [t4]
                    PathExpression [39-41] [t4]
                      Identifier(t4) [39-41] [t4]
                  OnClause [42-50] [ON cond1]
                    PathExpression [45-50] [cond1]
                      Identifier(cond1) [45-50] [cond1]
                OnClause [51-59] [ON cond2]
                  PathExpression [54-59] [cond2]
                    Identifier(cond2) [54-59] [cond2]
            Location [61-65] [JOIN]
            TablePathExpression [66-68] [t5]
              PathExpression [66-68] [t5]
                Identifier(t5) [66-68] [t5]
            OnClause [69-77] [ON cond3]
              PathExpression [72-77] [cond3]
                Identifier(cond3) [72-77] [cond3]
          OnClause [78-86] [ON cond4]
            PathExpression [81-86] [cond4]
              Identifier(cond4) [81-86] [cond4]
--
SELECT
  *
FROM
  t1
  JOIN
  (
    t2
    JOIN
    t3
    JOIN
    t4
    ON cond1
    ON cond2
  )
  JOIN
  t5
  ON cond3
  ON cond4
==

# Test case where the intermediate Join node is invalid, but the whole
# expression is valid
select * from a JOIN b JOIN c JOIN d ON cond1 ON cond2 JOIN e on cond3 ON cond4;
--
QueryStatement [0-79] [select * from...cond3 ON cond4]
  Query [0-79] [select * from...cond3 ON cond4]
    Select [0-79] [select * from...cond3 ON cond4]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-79] [from a JOIN...cond3 ON cond4]
        Join [14-79] [a JOIN b JOIN...cond3 ON cond4]
          TablePathExpression [14-15] [a]
            PathExpression [14-15] [a]
              Identifier(a) [14-15] [a]
          Location [16-20] [JOIN]
          Join [14-70] [a JOIN b JOIN...e on cond3]
            Join [14-54] [a JOIN b JOIN...cond1 ON cond2]
              TablePathExpression [21-22] [b]
                PathExpression [21-22] [b]
                  Identifier(b) [21-22] [b]
              Location [23-27] [JOIN]
              Join [14-45] [a JOIN b JOIN...d ON cond1]
                TablePathExpression [28-29] [c]
                  PathExpression [28-29] [c]
                    Identifier(c) [28-29] [c]
                Location [30-34] [JOIN]
                TablePathExpression [35-36] [d]
                  PathExpression [35-36] [d]
                    Identifier(d) [35-36] [d]
                OnClause [37-45] [ON cond1]
                  PathExpression [40-45] [cond1]
                    Identifier(cond1) [40-45] [cond1]
              OnClause [46-54] [ON cond2]
                PathExpression [49-54] [cond2]
                  Identifier(cond2) [49-54] [cond2]
            Location [55-59] [JOIN]
            TablePathExpression [60-61] [e]
              PathExpression [60-61] [e]
                Identifier(e) [60-61] [e]
            OnClause [62-70] [on cond3]
              PathExpression [65-70] [cond3]
                Identifier(cond3) [65-70] [cond3]
          OnClause [71-79] [ON cond4]
            PathExpression [74-79] [cond4]
              Identifier(cond4) [74-79] [cond4]
--
SELECT
  *
FROM
  a
  JOIN
  b
  JOIN
  c
  JOIN
  d
  ON cond1
  ON cond2
  JOIN
  e
  ON cond3
  ON cond4
==

# Similarly to the previous test case, but in parentheses:
# Test case where the intermediate Join node is invalid, but the whole
# expression is valid
select * from (t1 join t2 join t3 join t4 on c1 on c2 join t5 on c3 on c4)
--
QueryStatement [0-74] [select * from...c3 on c4)]
  Query [0-74] [select * from...c3 on c4)]
    Select [0-74] [select * from...c3 on c4)]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-74] [from (t1 join...c3 on c4)]
        ParenthesizedJoin [14-74] [(t1 join t2...c3 on c4)]
          Join [15-73] [t1 join t2...on c3 on c4]
            TablePathExpression [15-17] [t1]
              PathExpression [15-17] [t1]
                Identifier(t1) [15-17] [t1]
            Location [18-22] [join]
            Join [15-67] [t1 join t2...join t5 on c3]
              Join [15-53] [t1 join t2...on c1 on c2]
                TablePathExpression [23-25] [t2]
                  PathExpression [23-25] [t2]
                    Identifier(t2) [23-25] [t2]
                Location [26-30] [join]
                Join [15-47] [t1 join t2...join t4 on c1]
                  TablePathExpression [31-33] [t3]
                    PathExpression [31-33] [t3]
                      Identifier(t3) [31-33] [t3]
                  Location [34-38] [join]
                  TablePathExpression [39-41] [t4]
                    PathExpression [39-41] [t4]
                      Identifier(t4) [39-41] [t4]
                  OnClause [42-47] [on c1]
                    PathExpression [45-47] [c1]
                      Identifier(c1) [45-47] [c1]
                OnClause [48-53] [on c2]
                  PathExpression [51-53] [c2]
                    Identifier(c2) [51-53] [c2]
              Location [54-58] [join]
              TablePathExpression [59-61] [t5]
                PathExpression [59-61] [t5]
                  Identifier(t5) [59-61] [t5]
              OnClause [62-67] [on c3]
                PathExpression [65-67] [c3]
                  Identifier(c3) [65-67] [c3]
            OnClause [68-73] [on c4]
              PathExpression [71-73] [c4]
                Identifier(c4) [71-73] [c4]
--
SELECT
  *
FROM
  (
    t1
    JOIN
    t2
    JOIN
    t3
    JOIN
    t4
    ON c1
    ON c2
    JOIN
    t5
    ON c3
    ON c4
  )
==


# Test USING clause
select * from a join b join c join d using (cond1) on cond2 using (cond3);
--
QueryStatement [0-73] [select * from...using (cond3)]
  Query [0-73] [select * from...using (cond3)]
    Select [0-73] [select * from...using (cond3)]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-73] [from a join...using (cond3)]
        Join [14-73] [a join b join...using (cond3)]
          TablePathExpression [14-15] [a]
            PathExpression [14-15] [a]
              Identifier(a) [14-15] [a]
          Location [16-20] [join]
          Join [14-59] [a join b join...) on cond2]
            TablePathExpression [21-22] [b]
              PathExpression [21-22] [b]
                Identifier(b) [21-22] [b]
            Location [23-27] [join]
            Join [14-50] [a join b join...using (cond1)]
              TablePathExpression [28-29] [c]
                PathExpression [28-29] [c]
                  Identifier(c) [28-29] [c]
              Location [30-34] [join]
              TablePathExpression [35-36] [d]
                PathExpression [35-36] [d]
                  Identifier(d) [35-36] [d]
              UsingClause [37-50] [using (cond1)]
                Identifier(cond1) [44-49] [cond1]
            OnClause [51-59] [on cond2]
              PathExpression [54-59] [cond2]
                Identifier(cond2) [54-59] [cond2]
          UsingClause [60-73] [using (cond3)]
            Identifier(cond3) [67-72] [cond3]
--
SELECT
  *
FROM
  a
  JOIN
  b
  JOIN
  c
  JOIN
  d
  USING(cond1)
  ON cond2
  USING(cond3)
==

select * from a join b using (cond1) join c join d on cond1 on cond2;
--
QueryStatement [0-68] [select * from...cond1 on cond2]
  Query [0-68] [select * from...cond1 on cond2]
    Select [0-68] [select * from...cond1 on cond2]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-68] [from a join...cond1 on cond2]
        Join [14-68] [a join b using...ond1 on cond2]
          Join [14-36] [a join b using (cond1)]
            TablePathExpression [14-15] [a]
              PathExpression [14-15] [a]
                Identifier(a) [14-15] [a]
            Location [16-20] [join]
            TablePathExpression [21-22] [b]
              PathExpression [21-22] [b]
                Identifier(b) [21-22] [b]
            UsingClause [23-36] [using (cond1)]
              Identifier(cond1) [30-35] [cond1]
          Location [37-41] [join]
          Join [14-59] [a join b using...d on cond1]
            TablePathExpression [42-43] [c]
              PathExpression [42-43] [c]
                Identifier(c) [42-43] [c]
            Location [44-48] [join]
            TablePathExpression [49-50] [d]
              PathExpression [49-50] [d]
                Identifier(d) [49-50] [d]
            OnClause [51-59] [on cond1]
              PathExpression [54-59] [cond1]
                Identifier(cond1) [54-59] [cond1]
          OnClause [60-68] [on cond2]
            PathExpression [63-68] [cond2]
              Identifier(cond2) [63-68] [cond2]
--
SELECT
  *
FROM
  a
  JOIN
  b
  USING(cond1)
  JOIN
  c
  JOIN
  d
  ON cond1
  ON cond2
==

# Test JOINs inside parentheses
select * from (a join b join c on cond1 on cond2)
--
QueryStatement [0-49] [select * from...on cond2)]
  Query [0-49] [select * from...on cond2)]
    Select [0-49] [select * from...on cond2)]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-49] [from (a join...on cond2)]
        ParenthesizedJoin [14-49] [(a join b...on cond2)]
          Join [15-48] [a join b join...cond1 on cond2]
            TablePathExpression [15-16] [a]
              PathExpression [15-16] [a]
                Identifier(a) [15-16] [a]
            Location [17-21] [join]
            Join [15-39] [a join b join c on cond1]
              TablePathExpression [22-23] [b]
                PathExpression [22-23] [b]
                  Identifier(b) [22-23] [b]
              Location [24-28] [join]
              TablePathExpression [29-30] [c]
                PathExpression [29-30] [c]
                  Identifier(c) [29-30] [c]
              OnClause [31-39] [on cond1]
                PathExpression [34-39] [cond1]
                  Identifier(cond1) [34-39] [cond1]
            OnClause [40-48] [on cond2]
              PathExpression [43-48] [cond2]
                Identifier(cond2) [43-48] [cond2]
--
SELECT
  *
FROM
  (
    a
    JOIN
    b
    JOIN
    c
    ON cond1
    ON cond2
  )
==

# Test consecutive ON/CLAUSES in a query as an argument to a TVF
call tvf((SELECT * FROM a join b join c on cond1 on cond2));
--
CallStatement [0-59] [call tvf((...on cond2))]
  PathExpression [5-8] [tvf]
    Identifier(tvf) [5-8] [tvf]
  TVFArgument [9-58] [(SELECT *...on cond2)]
    ExpressionSubquery [9-58] [(SELECT *...on cond2)]
      Query [10-57] [SELECT * FROM...cond1 on cond2]
        Select [10-57] [SELECT * FROM...cond1 on cond2]
          SelectList [17-18] [*]
            SelectColumn [17-18] [*]
              Star(*) [17-18] [*]
          FromClause [19-57] [FROM a join...cond1 on cond2]
            Join [24-57] [a join b join...cond1 on cond2]
              TablePathExpression [24-25] [a]
                PathExpression [24-25] [a]
                  Identifier(a) [24-25] [a]
              Location [26-30] [join]
              Join [24-48] [a join b join c on cond1]
                TablePathExpression [31-32] [b]
                  PathExpression [31-32] [b]
                    Identifier(b) [31-32] [b]
                Location [33-37] [join]
                TablePathExpression [38-39] [c]
                  PathExpression [38-39] [c]
                    Identifier(c) [38-39] [c]
                OnClause [40-48] [on cond1]
                  PathExpression [43-48] [cond1]
                    Identifier(cond1) [43-48] [cond1]
              OnClause [49-57] [on cond2]
                PathExpression [52-57] [cond2]
                  Identifier(cond2) [52-57] [cond2]
--
CALL tvf((
  SELECT
    *
  FROM
    a
    JOIN
    b
    JOIN
    c
    ON cond1
    ON cond2
))
==

select * from a join b on cond1 cross join c join d join e on cond2 on cond3
--
QueryStatement [0-76] [select * from...cond2 on cond3]
  Query [0-76] [select * from...cond2 on cond3]
    Select [0-76] [select * from...cond2 on cond3]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-76] [from a join...cond2 on cond3]
        Join [14-76] [a join b on...cond2 on cond3]
          Join(CROSS) [14-44] [a join b on cond1 cross join c]
            Join [14-31] [a join b on cond1]
              TablePathExpression [14-15] [a]
                PathExpression [14-15] [a]
                  Identifier(a) [14-15] [a]
              Location [16-20] [join]
              TablePathExpression [21-22] [b]
                PathExpression [21-22] [b]
                  Identifier(b) [21-22] [b]
              OnClause [23-31] [on cond1]
                PathExpression [26-31] [cond1]
                  Identifier(cond1) [26-31] [cond1]
            Location [32-42] [cross join]
            TablePathExpression [43-44] [c]
              PathExpression [43-44] [c]
                Identifier(c) [43-44] [c]
          Location [45-49] [join]
          Join [14-67] [a join b on...e on cond2]
            TablePathExpression [50-51] [d]
              PathExpression [50-51] [d]
                Identifier(d) [50-51] [d]
            Location [52-56] [join]
            TablePathExpression [57-58] [e]
              PathExpression [57-58] [e]
                Identifier(e) [57-58] [e]
            OnClause [59-67] [on cond2]
              PathExpression [62-67] [cond2]
                Identifier(cond2) [62-67] [cond2]
          OnClause [68-76] [on cond3]
            PathExpression [71-76] [cond3]
              Identifier(cond3) [71-76] [cond3]
--
SELECT
  *
FROM
  a
  JOIN
  b
  ON cond1
  CROSS JOIN
  c
  JOIN
  d
  JOIN
  e
  ON cond2
  ON cond3
==

# Test that consecutive ON/USING clauses cannot be mixed with COMMA JOINs
select * from a join b, c join d on cond1 on cond2
--
ERROR: Syntax error: The number of join conditions is 2 but the number of joins that require a join condition is only 1. Unexpected keyword ON [at 1:43]
select * from a join b, c join d on cond1 on cond2
                                          ^
==

select * from a join b join c on cond1 on cond2, d
--
ERROR: Syntax error: Comma join is not allowed after consecutive ON/USING clauses [at 1:15]
select * from a join b join c on cond1 on cond2, d
              ^
==

# Test that single ON/USING clause is allowed to work with COMMA JOINs
# by the parser.
# Note that such queries could be rejected by the analyzer.
# This is allowed if 'a join b' is an array join.
select * from a join b, c join d on cond1
--
QueryStatement [0-41] [select * from...d on cond1]
  Query [0-41] [select * from...d on cond1]
    Select [0-41] [select * from...d on cond1]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-41] [from a join...d on cond1]
        Join [14-41] [a join b, c join d on cond1]
          Join(COMMA) [14-25] [a join b, c]
            Join [14-22] [a join b]
              TablePathExpression [14-15] [a]
                PathExpression [14-15] [a]
                  Identifier(a) [14-15] [a]
              Location [16-20] [join]
              TablePathExpression [21-22] [b]
                PathExpression [21-22] [b]
                  Identifier(b) [21-22] [b]
            Location [22-23] [,]
            TablePathExpression [24-25] [c]
              PathExpression [24-25] [c]
                Identifier(c) [24-25] [c]
          Location [26-30] [join]
          TablePathExpression [31-32] [d]
            PathExpression [31-32] [d]
              Identifier(d) [31-32] [d]
          OnClause [33-41] [on cond1]
            PathExpression [36-41] [cond1]
              Identifier(cond1) [36-41] [cond1]
--
SELECT
  *
FROM
  a
  JOIN
  b,
  c
  JOIN
  d
  ON cond1
==


# Error checking: invalid JOIN (not enough ON clause) is detected
select * from a join b join c join d on cond1 on cond2
--
ERROR: Syntax error: The number of join conditions is 2 but the number of joins that require a join condition is 3. INNER JOIN must have an ON or USING clause [at 1:17]
select * from a join b join c join d on cond1 on cond2
                ^
==

# Error checking: invalid JOIN (not enough ON clause) is detected
select * from a left join b join c join d on cond1 on cond2
--
ERROR: Syntax error: The number of join conditions is 2 but the number of joins that require a join condition is 3. LEFT JOIN must have an ON or USING clause [at 1:17]
select * from a left join b join c join d on cond1 on cond2
                ^
==

# Error checking: too many ON clauses
select * from a join b on cond1 on cond2
--
ERROR: Syntax error: The number of join conditions is 2 but the number of joins that require a join condition is only 1. Unexpected keyword ON [at 1:33]
select * from a join b on cond1 on cond2
                                ^
==

# When reporting error when there are too many ON clauses, the count of joins
# and join conditions is calcuated based on join blocks, not the whole
# expression. Thus, the join and join condition in "a join b" are not counted
# when generating the error message.

select * from a join b on cond1 join c on cond2 on cond3
--
ERROR: Syntax error: The number of join conditions is 2 but the number of joins that require a join condition is only 1. Unexpected keyword ON [at 1:49]
select * from a join b on cond1 join c on cond2 on cond3
                                                ^
==

# Test the case when there are multiple places with extra ON clauses. The error
# location should be the first extra ON clause.

select * from t1 join t2 on cond1 join t3 on cond2 on cond3 on cond 4 join t4 on cond5 on cond6
--
ERROR: Syntax error: The number of join conditions is 3 but the number of joins that require a join condition is only 1. Unexpected keyword ON [at 1:52]
select * from t1 join t2 on cond1 join t3 on cond2 on cond3 on cond 4 join t4...
                                                   ^
==

# When reporting error when there are too many ON clauses, the count of joins
# does not include cross joins or natural joins.
select * from a join b cross join c natural join d join e on cond1 on cond2 on cond3 on cond4
--
ERROR: Syntax error: The number of join conditions is 4 but the number of joins that require a join condition is only 2. Unexpected keyword ON [at 1:77]
...join c natural join d join e on cond1 on cond2 on cond3 on cond4
                                                  ^
==

# Test the case when there are more joins after the place where we have an
# excess join condition.
select * from t1 join t2 join c on cond1 on cond2 on cond3 on cond4 join t3 join t4
--
ERROR: Syntax error: The number of join conditions is 4 but the number of joins that require a join condition is only 2. Unexpected keyword ON [at 1:51]
select * from t1 join t2 join c on cond1 on cond2 on cond3 on cond4 join t3 j...
                                                  ^
==

# Error checking inside parenthesized join
select * from (a join b join c join d on cond1 on cond2)
--
ERROR: Syntax error: The number of join conditions is 2 but the number of joins that require a join condition is 3. INNER JOIN must have an ON or USING clause [at 1:18]
select * from (a join b join c join d on cond1 on cond2)
                 ^
==

# Error checking: too many ON clauses
select * from (a join b on cond1 on cond2)
--
ERROR: Syntax error: The number of join conditions is 2 but the number of joins that require a join condition is only 1. Unexpected keyword ON [at 1:34]
select * from (a join b on cond1 on cond2)
                                 ^
==

select * from t1 join t2 join t3 join t4 on c1 on c2 join t5
--
ERROR: Syntax error: The number of join conditions is 2 but the number of joins that require a join condition is 4. INNER JOIN must have an ON or USING clause [at 1:18]
select * from t1 join t2 join t3 join t4 on c1 on c2 join t5
                 ^
==

select * from t1 join t2 join t3 join t4 on cond1 join t5 on cond2 on cond3;
--
ERROR: Syntax error: The number of join conditions is 3 but the number of joins that require a join condition is 4. INNER JOIN must have an ON or USING clause [at 1:18]
select * from t1 join t2 join t3 join t4 on cond1 join t5 on cond2 on cond3;
                 ^
==

# Test the case that include cross joins and natural joins. This query would be
# the same as the query in the previous test case if all cross and natural joins
# are removed. Since cross and natural joins do not affect the error, so
# - the join count and join condition count must be the same as in the previous
#   test.
# - the error location is the same as in the previous test, i.e. the join right
#   before t2.
select * from a cross join t1 cross join b join t2 natural join b join t3 join t4 on cond1 join t5 on cond2 on cond3;
--
ERROR: Syntax error: The number of join conditions is 3 but the number of joins that require a join condition is 4. INNER JOIN must have an ON or USING clause [at 1:44]
select * from a cross join t1 cross join b join t2 natural join b join t3 joi...
                                           ^
==

# When reporting error when there are missing ON clauses, the count of joins
# and join conditions is calcuated based on join blocks, not the whole
# expression. Thus, the joins and join conditions in
# "t1 join t2 join t3 on cond1 on cond2" are not counted when generating the
# error message.
select * from t1 join t2 join t3 on cond1 on cond2 join t4;
--
ERROR: Syntax error: The number of join conditions is 0 but the number of joins that require a join condition is 1. INNER JOIN must have an ON or USING clause [at 1:52]
select * from t1 join t2 join t3 on cond1 on cond2 join t4;
                                                   ^
==

# Test that the error location is the first qualified join of the join block.
# Thus, the error location is at "join t3", not at "cross join a"
select * from  t1 join t2 on c1 cross join a join t3 join t4 join t5 on c2 on c3
--
ERROR: Syntax error: The number of join conditions is 2 but the number of joins that require a join condition is 3. INNER JOIN must have an ON or USING clause [at 1:46]
select * from  t1 join t2 on c1 cross join a join t3 join t4 join t5 on c2 on c3
                                             ^
==

select * from  t1 join t2 join t3 on c1 on c2 join t4 cross join a cross join b
--
ERROR: Syntax error: The number of join conditions is 0 but the number of joins that require a join condition is 1. INNER JOIN must have an ON or USING clause [at 1:47]
select * from  t1 join t2 join t3 on c1 on c2 join t4 cross join a cross join b
                                              ^
==

# Test error reporting when there are more join conditions than joins
select * from a cross join b on cond1 cross join c on cond2 cross join d on cond3 on cond4
--
ERROR: Syntax error: The number of join conditions is 1 but the number of joins that require a join condition is only 0. Unexpected keyword ON [at 1:30]
select * from a cross join b on cond1 cross join c on cond2 cross join d on c...
                             ^
==

select * from a cross join b on cond1 join c join d join e on cond2 on cond3
--
ERROR: Syntax error: The number of join conditions is 1 but the number of joins that require a join condition is only 0. Unexpected keyword ON [at 1:30]
select * from a cross join b on cond1 join c join d join e on cond2 on cond3
                             ^
==

# Test the case when allow_consecutive_on is turned off
[language_features=]
select * from t1 join t2 join t3 on c1 on c2
--
ERROR: Syntax error: Expected end of input but got keyword ON [at 1:40]
select * from t1 join t2 join t3 on c1 on c2
                                       ^
