select 1 LIMIT 1;
--
QueryStatement [0-16] [select 1 LIMIT 1]
  Query [0-16] [select 1 LIMIT 1]
    Select [0-8] [select 1]
      SelectList [7-8] [1]
        SelectColumn [7-8] [1]
          IntLiteral(1) [7-8] [1]
    LimitOffset [9-16] [LIMIT 1]
      IntLiteral(1) [15-16] [1]
--
SELECT
  1
LIMIT 1
==

SELECT 1 LIMIT 0;
--
QueryStatement [0-16] [SELECT 1 LIMIT 0]
  Query [0-16] [SELECT 1 LIMIT 0]
    Select [0-8] [SELECT 1]
      SelectList [7-8] [1]
        SelectColumn [7-8] [1]
          IntLiteral(1) [7-8] [1]
    LimitOffset [9-16] [LIMIT 0]
      IntLiteral(0) [15-16] [0]
--
SELECT
  1
LIMIT 0
==

SELECT 1 LIMIT 1 OFFSET 0;
--
QueryStatement [0-25] [SELECT 1 LIMIT 1 OFFSET 0]
  Query [0-25] [SELECT 1 LIMIT 1 OFFSET 0]
    Select [0-8] [SELECT 1]
      SelectList [7-8] [1]
        SelectColumn [7-8] [1]
          IntLiteral(1) [7-8] [1]
    LimitOffset [9-25] [LIMIT 1 OFFSET 0]
      IntLiteral(1) [15-16] [1]
      IntLiteral(0) [24-25] [0]
--
SELECT
  1
LIMIT 1 OFFSET 0
==

SELECT 1 LIMIT cast(1 as int32) OFFSET cast(1 as int32);
--
QueryStatement [0-55] [SELECT 1 LIMIT...as int32)]
  Query [0-55] [SELECT 1 LIMIT...as int32)]
    Select [0-8] [SELECT 1]
      SelectList [7-8] [1]
        SelectColumn [7-8] [1]
          IntLiteral(1) [7-8] [1]
    LimitOffset [9-55] [LIMIT cast...as int32)]
      CastExpression [15-31] [cast(1 as int32)]
        IntLiteral(1) [20-21] [1]
        SimpleType [25-30] [int32]
          PathExpression [25-30] [int32]
            Identifier(int32) [25-30] [int32]
      CastExpression [39-55] [cast(1 as int32)]
        IntLiteral(1) [44-45] [1]
        SimpleType [49-54] [int32]
          PathExpression [49-54] [int32]
            Identifier(int32) [49-54] [int32]
--
SELECT
  1
LIMIT CAST(1 AS int32) OFFSET CAST(1 AS int32)
==

SELECT 1 LIMIT cast(@param1 as int32) OFFSET cast(@param1 as string);
--
QueryStatement [0-68] [SELECT 1 LIMIT...as string)]
  Query [0-68] [SELECT 1 LIMIT...as string)]
    Select [0-8] [SELECT 1]
      SelectList [7-8] [1]
        SelectColumn [7-8] [1]
          IntLiteral(1) [7-8] [1]
    LimitOffset [9-68] [LIMIT cast...as string)]
      CastExpression [15-37] [cast(@param1 as int32)]
        ParameterExpr [20-27] [@param1]
          Identifier(param1) [21-27] [param1]
        SimpleType [31-36] [int32]
          PathExpression [31-36] [int32]
            Identifier(int32) [31-36] [int32]
      CastExpression [45-68] [cast(@param1 as string)]
        ParameterExpr [50-57] [@param1]
          Identifier(param1) [51-57] [param1]
        SimpleType [61-67] [string]
          PathExpression [61-67] [string]
            Identifier(string) [61-67] [string]
--
SELECT
  1
LIMIT CAST(@param1 AS int32) OFFSET CAST(@param1 AS string)
==

SELECT 1 LIMIT cast(@@sysvar1 as int32) OFFSET cast(@@sysvar2 as string);
--
QueryStatement [0-72] [SELECT 1 LIMIT...as string)]
  Query [0-72] [SELECT 1 LIMIT...as string)]
    Select [0-8] [SELECT 1]
      SelectList [7-8] [1]
        SelectColumn [7-8] [1]
          IntLiteral(1) [7-8] [1]
    LimitOffset [9-72] [LIMIT cast...as string)]
      CastExpression [15-39] [cast(@@sysvar1 as int32)]
        SystemVariableExpr [20-29] [@@sysvar1]
          PathExpression [22-29] [sysvar1]
            Identifier(sysvar1) [22-29] [sysvar1]
        SimpleType [33-38] [int32]
          PathExpression [33-38] [int32]
            Identifier(int32) [33-38] [int32]
      CastExpression [47-72] [cast(@@sysvar2 as string)]
        SystemVariableExpr [52-61] [@@sysvar2]
          PathExpression [54-61] [sysvar2]
            Identifier(sysvar2) [54-61] [sysvar2]
        SimpleType [65-71] [string]
          PathExpression [65-71] [string]
            Identifier(string) [65-71] [string]
--
SELECT
  1
LIMIT CAST(@@sysvar1 AS int32) OFFSET CAST(@@sysvar2 AS string)
==

SELECT 1 LIMIT cast(cast(1 as int32) as int32);
--
ERROR: Syntax error: Expected "@" or "@@" or integer literal but got keyword CAST [at 1:21]
SELECT 1 LIMIT cast(cast(1 as int32) as int32);
                    ^
==

SELECT 1 LIMIT 1 OFFSET 1
UNION ALL
SELECT 1 LIMIT 1 OFFSET 2
--
ERROR: Syntax error: Expected end of input but got keyword UNION [at 2:1]
UNION ALL
^
==

(SELECT 1 LIMIT 1 OFFSET 1)
UNION ALL
(SELECT 1 LIMIT 1 OFFSET 2)
LIMIT 10 OFFSET 2
--
QueryStatement [0-83] [(SELECT 1...10 OFFSET 2]
  Query [0-83] [(SELECT 1...10 OFFSET 2]
    SetOperation(UNION ALL) [0-65] [(SELECT 1...OFFSET 2)]
      SetOperationMetadataList [27-37] [UNION ALL]
        SetOperationMetadata [27-37] [UNION ALL]
          SetOperationType [28-33] [UNION]
          ASTSetOperationAllOrDistinct [34-37] [ALL]
      Query [1-26] [SELECT 1 LIMIT 1 OFFSET 1]
        Select [1-9] [SELECT 1]
          SelectList [8-9] [1]
            SelectColumn [8-9] [1]
              IntLiteral(1) [8-9] [1]
        LimitOffset [10-26] [LIMIT 1 OFFSET 1]
          IntLiteral(1) [16-17] [1]
          IntLiteral(1) [25-26] [1]
      Query [39-64] [SELECT 1 LIMIT 1 OFFSET 2]
        Select [39-47] [SELECT 1]
          SelectList [46-47] [1]
            SelectColumn [46-47] [1]
              IntLiteral(1) [46-47] [1]
        LimitOffset [48-64] [LIMIT 1 OFFSET 2]
          IntLiteral(1) [54-55] [1]
          IntLiteral(2) [63-64] [2]
    LimitOffset [66-83] [LIMIT 10 OFFSET 2]
      IntLiteral(10) [72-74] [10]
      IntLiteral(2) [82-83] [2]
--
(
SELECT
  1
LIMIT 1 OFFSET 1) UNION ALL(
SELECT
  1
LIMIT 1 OFFSET 2)
LIMIT 10 OFFSET 2
==

select (select 1 LIMIT 1), EXISTS(select 2 LIMIT 0),
    ARRAY(select 3 LIMIT 1 OFFSET 0)
from T;
--
QueryStatement [0-96] [select (select...0) from T]
  Query [0-96] [select (select...0) from T]
    Select [0-96] [select (select...0) from T]
      SelectList [7-89] [(select 1...OFFSET 0)]
        SelectColumn [7-25] [(select 1 LIMIT 1)]
          ExpressionSubquery [7-25] [(select 1 LIMIT 1)]
            Query [8-24] [select 1 LIMIT 1]
              Select [8-16] [select 1]
                SelectList [15-16] [1]
                  SelectColumn [15-16] [1]
                    IntLiteral(1) [15-16] [1]
              LimitOffset [17-24] [LIMIT 1]
                IntLiteral(1) [23-24] [1]
        SelectColumn [27-51] [EXISTS(select 2 LIMIT 0)]
          ExpressionSubquery(modifier=EXISTS) [27-51] [EXISTS(select 2 LIMIT 0)]
            Query [34-50] [select 2 LIMIT 0]
              Select [34-42] [select 2]
                SelectList [41-42] [2]
                  SelectColumn [41-42] [2]
                    IntLiteral(2) [41-42] [2]
              LimitOffset [43-50] [LIMIT 0]
                IntLiteral(0) [49-50] [0]
        SelectColumn [57-89] [ARRAY(select...OFFSET 0)]
          ExpressionSubquery(modifier=ARRAY) [57-89] [ARRAY(select...OFFSET 0)]
            Query [63-88] [select 3 LIMIT 1 OFFSET 0]
              Select [63-71] [select 3]
                SelectList [70-71] [3]
                  SelectColumn [70-71] [3]
                    IntLiteral(3) [70-71] [3]
              LimitOffset [72-88] [LIMIT 1 OFFSET 0]
                IntLiteral(1) [78-79] [1]
                IntLiteral(0) [87-88] [0]
      FromClause [90-96] [from T]
        TablePathExpression [95-96] [T]
          PathExpression [95-96] [T]
            Identifier(T) [95-96] [T]
--
SELECT
  (
    SELECT
      1
    LIMIT 1),
  EXISTS(
    SELECT
      2
    LIMIT 0),
  ARRAY(
    SELECT
      3
    LIMIT 1 OFFSET 0)
FROM
  T
==

SELECT *
FROM (SELECT * FROM T LIMIT 10 OFFSET 2) sub_foo;
--
QueryStatement [0-57] [SELECT * FROM...2) sub_foo]
  Query [0-57] [SELECT * FROM...2) sub_foo]
    Select [0-57] [SELECT * FROM...2) sub_foo]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-57] [FROM (SELECT...2) sub_foo]
        TableSubquery [14-57] [(SELECT *...2) sub_foo]
          Query [15-48] [SELECT * FROM...10 OFFSET 2]
            Select [15-30] [SELECT * FROM T]
              SelectList [22-23] [*]
                SelectColumn [22-23] [*]
                  Star(*) [22-23] [*]
              FromClause [24-30] [FROM T]
                TablePathExpression [29-30] [T]
                  PathExpression [29-30] [T]
                    Identifier(T) [29-30] [T]
            LimitOffset [31-48] [LIMIT 10 OFFSET 2]
              IntLiteral(10) [37-39] [10]
              IntLiteral(2) [47-48] [2]
          Alias [50-57] [sub_foo]
            Identifier(sub_foo) [50-57] [sub_foo]
--
SELECT
  *
FROM
  (
    SELECT
      *
    FROM
      T
    LIMIT 10 OFFSET 2
  ) AS sub_foo
==

select a from t order by a, b LIMIT 3;
--
QueryStatement [0-37] [select a from...b LIMIT 3]
  Query [0-37] [select a from...b LIMIT 3]
    Select [0-15] [select a from t]
      SelectList [7-8] [a]
        SelectColumn [7-8] [a]
          PathExpression [7-8] [a]
            Identifier(a) [7-8] [a]
      FromClause [9-15] [from t]
        TablePathExpression [14-15] [t]
          PathExpression [14-15] [t]
            Identifier(t) [14-15] [t]
    OrderBy [16-29] [order by a, b]
      OrderingExpression(ASC) [25-26] [a]
        PathExpression [25-26] [a]
          Identifier(a) [25-26] [a]
      OrderingExpression(ASC) [28-29] [b]
        PathExpression [28-29] [b]
          Identifier(b) [28-29] [b]
    LimitOffset [30-37] [LIMIT 3]
      IntLiteral(3) [36-37] [3]
--
SELECT
  a
FROM
  t
ORDER BY a, b
LIMIT 3
==

# ORDER BY and LIMIT attach outside of the UNION ALL
select a from t
union all
select b from t
order by 1
LIMIT 2 OFFSET 1
--
QueryStatement [0-69] [select a from...2 OFFSET 1]
  Query [0-69] [select a from...2 OFFSET 1]
    SetOperation(UNION ALL) [0-41] [select a from...elect b from t]
      SetOperationMetadataList [15-25] [union all]
        SetOperationMetadata [15-25] [union all]
          SetOperationType [16-21] [union]
          ASTSetOperationAllOrDistinct [22-25] [all]
      Select [0-15] [select a from t]
        SelectList [7-8] [a]
          SelectColumn [7-8] [a]
            PathExpression [7-8] [a]
              Identifier(a) [7-8] [a]
        FromClause [9-15] [from t]
          TablePathExpression [14-15] [t]
            PathExpression [14-15] [t]
              Identifier(t) [14-15] [t]
      Select [26-41] [select b from t]
        SelectList [33-34] [b]
          SelectColumn [33-34] [b]
            PathExpression [33-34] [b]
              Identifier(b) [33-34] [b]
        FromClause [35-41] [from t]
          TablePathExpression [40-41] [t]
            PathExpression [40-41] [t]
              Identifier(t) [40-41] [t]
    OrderBy [42-52] [order by 1]
      OrderingExpression(ASC) [51-52] [1]
        IntLiteral(1) [51-52] [1]
    LimitOffset [53-69] [LIMIT 2 OFFSET 1]
      IntLiteral(2) [59-60] [2]
      IntLiteral(1) [68-69] [1]
--
SELECT
  a
FROM
  t
UNION ALL
SELECT
  b
FROM
  t
ORDER BY 1
LIMIT 2 OFFSET 1
==

# OFFSET is not a reserved keyword, but is rejected here because we don't
# expect an identifier here.
select 1 limit offset;
--
ERROR: Syntax error: Unexpected keyword OFFSET [at 1:16]
select 1 limit offset;
               ^
==

select 1 from t limit 5 offset offset;
--
ERROR: Syntax error: Unexpected keyword OFFSET [at 1:32]
select 1 from t limit 5 offset offset;
                               ^
==

# Expected Errors Below
select 1 offset 10;
--
ERROR: Syntax error: Expected keyword FETCH but got ";" [at 1:19]
select 1 offset 10;
                  ^
==

select 1 limit 5 offset;
--
ERROR: Syntax error: Unexpected ";" [at 1:24]
select 1 limit 5 offset;
                       ^
==

select a from t order by a, b LIMIT a OFFSET 10;
--
ERROR: Syntax error: Unexpected identifier "a" [at 1:37]
select a from t order by a, b LIMIT a OFFSET 10;
                                    ^
==

select 1 limit 1 order by 1;
--
ERROR: Syntax error: Expected end of input but got keyword ORDER [at 1:18]
select 1 limit 1 order by 1;
                 ^
==

select 1 limit 1 offset 2 order by 1;
--
ERROR: Syntax error: Expected end of input but got keyword ORDER [at 1:27]
select 1 limit 1 offset 2 order by 1;
                          ^
==

select 1 order by 1 offset 5
--
ERROR: Syntax error: Expected keyword FETCH but got end of statement [at 1:29]
select 1 order by 1 offset 5
                            ^
==

SELECT 1 LIMIT 1 LIMIT 1;
--
ERROR: Syntax error: Expected end of input but got keyword LIMIT [at 1:18]
SELECT 1 LIMIT 1 LIMIT 1;
                 ^
==

SELECT 1 LIMIT 10 OFFSET 1 LIMIT 1;
--
ERROR: Syntax error: Expected end of input but got keyword LIMIT [at 1:28]
SELECT 1 LIMIT 10 OFFSET 1 LIMIT 1;
                           ^
==

SELECT 1 LIMIT -1;
--
ERROR: Syntax error: Unexpected "-" [at 1:16]
SELECT 1 LIMIT -1;
               ^
==

SELECT 1 LIMIT 10 OFFSET -1;
--
ERROR: Syntax error: Unexpected "-" [at 1:26]
SELECT 1 LIMIT 10 OFFSET -1;
                         ^
==

SELECT 1 LIMIT -10 OFFSET -22;
--
ERROR: Syntax error: Unexpected "-" [at 1:16]
SELECT 1 LIMIT -10 OFFSET -22;
               ^
==

SELECT 1 LIMIT 1.5;
--
ERROR: Syntax error: Unexpected floating point literal "1.5" [at 1:16]
SELECT 1 LIMIT 1.5;
               ^
==

SELECT 1 LIMIT 'abc';
--
ERROR: Syntax error: Unexpected string literal 'abc' [at 1:16]
SELECT 1 LIMIT 'abc';
               ^
==

SELECT 1 LIMIT @param;
--
QueryStatement [0-21] [SELECT 1 LIMIT @param]
  Query [0-21] [SELECT 1 LIMIT @param]
    Select [0-8] [SELECT 1]
      SelectList [7-8] [1]
        SelectColumn [7-8] [1]
          IntLiteral(1) [7-8] [1]
    LimitOffset [9-21] [LIMIT @param]
      ParameterExpr [15-21] [@param]
        Identifier(param) [16-21] [param]
--
SELECT
  1
LIMIT @param
==
