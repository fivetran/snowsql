# Four types of expression subqueries.
select (select 1), EXISTS(select 2), ARRAY(select 3)
from T
--
QueryStatement [0-59] [select (select...3) from T]
  Query [0-59] [select (select...3) from T]
    Select [0-59] [select (select...3) from T]
      SelectList [7-52] [(select 1)...(select 3)]
        SelectColumn [7-17] [(select 1)]
          ExpressionSubquery [7-17] [(select 1)]
            Query [8-16] [select 1]
              Select [8-16] [select 1]
                SelectList [15-16] [1]
                  SelectColumn [15-16] [1]
                    IntLiteral(1) [15-16] [1]
        SelectColumn [19-35] [EXISTS(select 2)]
          ExpressionSubquery(modifier=EXISTS) [19-35] [EXISTS(select 2)]
            Query [26-34] [select 2]
              Select [26-34] [select 2]
                SelectList [33-34] [2]
                  SelectColumn [33-34] [2]
                    IntLiteral(2) [33-34] [2]
        SelectColumn [37-52] [ARRAY(select 3)]
          ExpressionSubquery(modifier=ARRAY) [37-52] [ARRAY(select 3)]
            Query [43-51] [select 3]
              Select [43-51] [select 3]
                SelectList [50-51] [3]
                  SelectColumn [50-51] [3]
                    IntLiteral(3) [50-51] [3]
      FromClause [53-59] [from T]
        TablePathExpression [58-59] [T]
          PathExpression [58-59] [T]
            Identifier(T) [58-59] [T]
--
SELECT
  (
    SELECT
      1
  ),
  EXISTS(
    SELECT
      2
  ),
  ARRAY(
    SELECT
      3
  )
FROM
  T
==

# These don't parse as functions.
select EXISTS(1)
--
ERROR: Syntax error: Expected "(" or keyword SELECT or keyword WITH but got integer literal "1" [at 1:15]
select EXISTS(1)
              ^
==

select ARRAY(1+2)
--

ERROR: Syntax error: Expected "(" or keyword SELECT or keyword WITH but got integer literal "1" [at 1:14]
select ARRAY(1+2)
             ^
==

select (((select 3) + (select x.y from z) + (select (1+2) from z)))
--
QueryStatement [0-67] [select (((...from z)))]
  Query [0-67] [select (((...from z)))]
    Select [0-67] [select (((...from z)))]
      SelectList [7-67] [(((select...from z)))]
        SelectColumn [7-67] [(((select...from z)))]
          BinaryExpression(+) [9-65] [(select 3)...2) from z)]
            BinaryExpression(+) [9-41] [(select 3)....y from z)]
              ExpressionSubquery [9-19] [(select 3)]
                Query [10-18] [select 3]
                  Select [10-18] [select 3]
                    SelectList [17-18] [3]
                      SelectColumn [17-18] [3]
                        IntLiteral(3) [17-18] [3]
              ExpressionSubquery [22-41] [(select x.y from z)]
                Query [23-40] [select x.y from z]
                  Select [23-40] [select x.y from z]
                    SelectList [30-33] [x.y]
                      SelectColumn [30-33] [x.y]
                        PathExpression [30-33] [x.y]
                          Identifier(x) [30-31] [x]
                          Identifier(y) [32-33] [y]
                    FromClause [34-40] [from z]
                      TablePathExpression [39-40] [z]
                        PathExpression [39-40] [z]
                          Identifier(z) [39-40] [z]
            ExpressionSubquery [44-65] [(select (1+2) from z)]
              Query [45-64] [select (1+2) from z]
                Select [45-64] [select (1+2) from z]
                  SelectList [52-57] [(1+2)]
                    SelectColumn [52-57] [(1+2)]
                      BinaryExpression(+) [53-56] [1+2]
                        IntLiteral(1) [53-54] [1]
                        IntLiteral(2) [55-56] [2]
                  FromClause [58-64] [from z]
                    TablePathExpression [63-64] [z]
                      PathExpression [63-64] [z]
                        Identifier(z) [63-64] [z]
--
SELECT
  ((
    SELECT
      3
  ) + (
    SELECT
      x.y
    FROM
      z
  ) + (
    SELECT
      (1 + 2)
    FROM
      z
  ))
==

select (select (select 1))
--
QueryStatement [0-26] [select (select (select 1))]
  Query [0-26] [select (select (select 1))]
    Select [0-26] [select (select (select 1))]
      SelectList [7-26] [(select (select 1))]
        SelectColumn [7-26] [(select (select 1))]
          ExpressionSubquery [7-26] [(select (select 1))]
            Query [8-25] [select (select 1)]
              Select [8-25] [select (select 1)]
                SelectList [15-25] [(select 1)]
                  SelectColumn [15-25] [(select 1)]
                    ExpressionSubquery [15-25] [(select 1)]
                      Query [16-24] [select 1]
                        Select [16-24] [select 1]
                          SelectList [23-24] [1]
                            SelectColumn [23-24] [1]
                              IntLiteral(1) [23-24] [1]
--
SELECT
  (
    SELECT
      (
        SELECT
          1
      )
  )
==

# Expression subquery modifiers not allowed in FROM clause.
select x from ARRAY(select 1)
--
ERROR: Syntax error: Unexpected keyword ARRAY [at 1:15]
select x from ARRAY(select 1)
              ^
==

select (select 1), ARRAY(select 2)
from T
where (select 3) = (select 4)
group by (select 5), EXISTS(select 6)
--
QueryStatement [0-109] [select (select...(select 6)]
  Query [0-109] [select (select...(select 6)]
    Select [0-109] [select (select...(select 6)]
      SelectList [7-34] [(select 1), ARRAY(select 2)]
        SelectColumn [7-17] [(select 1)]
          ExpressionSubquery [7-17] [(select 1)]
            Query [8-16] [select 1]
              Select [8-16] [select 1]
                SelectList [15-16] [1]
                  SelectColumn [15-16] [1]
                    IntLiteral(1) [15-16] [1]
        SelectColumn [19-34] [ARRAY(select 2)]
          ExpressionSubquery(modifier=ARRAY) [19-34] [ARRAY(select 2)]
            Query [25-33] [select 2]
              Select [25-33] [select 2]
                SelectList [32-33] [2]
                  SelectColumn [32-33] [2]
                    IntLiteral(2) [32-33] [2]
      FromClause [35-41] [from T]
        TablePathExpression [40-41] [T]
          PathExpression [40-41] [T]
            Identifier(T) [40-41] [T]
      WhereClause [42-71] [where (select 3) = (select 4)]
        BinaryExpression(=) [48-71] [(select 3) = (select 4)]
          ExpressionSubquery [48-58] [(select 3)]
            Query [49-57] [select 3]
              Select [49-57] [select 3]
                SelectList [56-57] [3]
                  SelectColumn [56-57] [3]
                    IntLiteral(3) [56-57] [3]
          ExpressionSubquery [61-71] [(select 4)]
            Query [62-70] [select 4]
              Select [62-70] [select 4]
                SelectList [69-70] [4]
                  SelectColumn [69-70] [4]
                    IntLiteral(4) [69-70] [4]
      GroupBy [72-109] [group by (...(select 6)]
        GroupingItem [81-91] [(select 5)]
          ExpressionSubquery [81-91] [(select 5)]
            Query [82-90] [select 5]
              Select [82-90] [select 5]
                SelectList [89-90] [5]
                  SelectColumn [89-90] [5]
                    IntLiteral(5) [89-90] [5]
        GroupingItem [93-109] [EXISTS(select 6)]
          ExpressionSubquery(modifier=EXISTS) [93-109] [EXISTS(select 6)]
            Query [100-108] [select 6]
              Select [100-108] [select 6]
                SelectList [107-108] [6]
                  SelectColumn [107-108] [6]
                    IntLiteral(6) [107-108] [6]
--
SELECT
  (
    SELECT
      1
  ),
  ARRAY(
    SELECT
      2
  )
FROM
  T
WHERE
  (
    SELECT
      3
  ) = (
    SELECT
      4
  )
GROUP BY(
    SELECT
      5
  ), EXISTS(
    SELECT
      6
  )
==

select EXISTS(select 1 union all select 2)
--
QueryStatement [0-42] [select EXISTS...select 2)]
  Query [0-42] [select EXISTS...select 2)]
    Select [0-42] [select EXISTS...select 2)]
      SelectList [7-42] [EXISTS(select...select 2)]
        SelectColumn [7-42] [EXISTS(select...select 2)]
          ExpressionSubquery(modifier=EXISTS) [7-42] [EXISTS(select...select 2)]
            Query [14-41] [select 1 union all select 2]
              SetOperation(UNION ALL) [14-41] [select 1 union all select 2]
                SetOperationMetadataList [22-32] [union all]
                  SetOperationMetadata [22-32] [union all]
                    SetOperationType [23-28] [union]
                    ASTSetOperationAllOrDistinct [29-32] [all]
                Select [14-22] [select 1]
                  SelectList [21-22] [1]
                    SelectColumn [21-22] [1]
                      IntLiteral(1) [21-22] [1]
                Select [33-41] [select 2]
                  SelectList [40-41] [2]
                    SelectColumn [40-41] [2]
                      IntLiteral(2) [40-41] [2]
--
SELECT
  EXISTS(
    SELECT
      1
    UNION ALL
    SELECT
      2
  )
==

# Original test case for b/32403185.
select *
from (SELECT 1) AS singlerowscan_1
WHERE
  EXISTS(
    SELECT
      CAST(- 90.21638073702843 AS FLOAT64) AS a_3
    FROM (SELECT 1) AS singlerowscan_2
    WHERE false
  ) IN ({{exists|array|}}(SELECT 1));
--
ALTERNATION GROUP: exists
--
QueryStatement [0-201] [select * from...SELECT 1))]
  Query [0-201] [select * from...SELECT 1))]
    Select [0-201] [select * from...SELECT 1))]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-43] [from (SELECT...singlerowscan_1]
        TableSubquery [14-43] [(SELECT 1) AS singlerowscan_1]
          Query [15-23] [SELECT 1]
            Select [15-23] [SELECT 1]
              SelectList [22-23] [1]
                SelectColumn [22-23] [1]
                  IntLiteral(1) [22-23] [1]
          Alias [25-43] [AS singlerowscan_1]
            Identifier(singlerowscan_1) [28-43] [singlerowscan_1]
      WhereClause [44-201] [WHERE   EXISTS...SELECT 1))]
        InExpression(IN) [52-201] [EXISTS(...SELECT 1))]
          ExpressionSubquery(modifier=EXISTS) [52-179] [EXISTS(...false   )]
            Query [64-175] [SELECT...WHERE false]
              Select [64-175] [SELECT...WHERE false]
                SelectList [77-120] [CAST(- 90....FLOAT64) AS a_3]
                  SelectColumn [77-120] [CAST(- 90....FLOAT64) AS a_3]
                    CastExpression [77-113] [CAST(- 90....AS FLOAT64)]
                      UnaryExpression(-) [82-101] [- 90.21638073702843]
                        FloatLiteral(90.21638073702843) [84-101] [90.21638073702843]
                      SimpleType [105-112] [FLOAT64]
                        PathExpression [105-112] [FLOAT64]
                          Identifier(FLOAT64) [105-112] [FLOAT64]
                    Alias [114-120] [AS a_3]
                      Identifier(a_3) [117-120] [a_3]
                FromClause [125-159] [FROM (SELECT...singlerowscan_2]
                  TableSubquery [130-159] [(SELECT 1) AS singlerowscan_2]
                    Query [131-139] [SELECT 1]
                      Select [131-139] [SELECT 1]
                        SelectList [138-139] [1]
                          SelectColumn [138-139] [1]
                            IntLiteral(1) [138-139] [1]
                    Alias [141-159] [AS singlerowscan_2]
                      Identifier(singlerowscan_2) [144-159] [singlerowscan_2]
                WhereClause [164-175] [WHERE false]
                  BooleanLiteral(false) [170-175] [false]
          Location [180-182] [IN]
          InList [184-200] [exists(SELECT 1)]
            ExpressionSubquery(modifier=EXISTS) [184-200] [exists(SELECT 1)]
              Query [191-199] [SELECT 1]
                Select [191-199] [SELECT 1]
                  SelectList [198-199] [1]
                    SelectColumn [198-199] [1]
                      IntLiteral(1) [198-199] [1]
--
SELECT
  *
FROM
  (
    SELECT
      1
  ) AS singlerowscan_1
WHERE
  EXISTS(
    SELECT
      CAST(-90.21638073702843 AS FLOAT64) AS a_3
    FROM
      (
        SELECT
          1
      ) AS singlerowscan_2
    WHERE
      false
  ) IN (EXISTS(
      SELECT
        1
    ))
--
ALTERNATION GROUP: array
--
QueryStatement [0-200] [select * from...SELECT 1))]
  Query [0-200] [select * from...SELECT 1))]
    Select [0-200] [select * from...SELECT 1))]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-43] [from (SELECT...singlerowscan_1]
        TableSubquery [14-43] [(SELECT 1) AS singlerowscan_1]
          Query [15-23] [SELECT 1]
            Select [15-23] [SELECT 1]
              SelectList [22-23] [1]
                SelectColumn [22-23] [1]
                  IntLiteral(1) [22-23] [1]
          Alias [25-43] [AS singlerowscan_1]
            Identifier(singlerowscan_1) [28-43] [singlerowscan_1]
      WhereClause [44-200] [WHERE   EXISTS...SELECT 1))]
        InExpression(IN) [52-200] [EXISTS(...SELECT 1))]
          ExpressionSubquery(modifier=EXISTS) [52-179] [EXISTS(...false   )]
            Query [64-175] [SELECT...WHERE false]
              Select [64-175] [SELECT...WHERE false]
                SelectList [77-120] [CAST(- 90....FLOAT64) AS a_3]
                  SelectColumn [77-120] [CAST(- 90....FLOAT64) AS a_3]
                    CastExpression [77-113] [CAST(- 90....AS FLOAT64)]
                      UnaryExpression(-) [82-101] [- 90.21638073702843]
                        FloatLiteral(90.21638073702843) [84-101] [90.21638073702843]
                      SimpleType [105-112] [FLOAT64]
                        PathExpression [105-112] [FLOAT64]
                          Identifier(FLOAT64) [105-112] [FLOAT64]
                    Alias [114-120] [AS a_3]
                      Identifier(a_3) [117-120] [a_3]
                FromClause [125-159] [FROM (SELECT...singlerowscan_2]
                  TableSubquery [130-159] [(SELECT 1) AS singlerowscan_2]
                    Query [131-139] [SELECT 1]
                      Select [131-139] [SELECT 1]
                        SelectList [138-139] [1]
                          SelectColumn [138-139] [1]
                            IntLiteral(1) [138-139] [1]
                    Alias [141-159] [AS singlerowscan_2]
                      Identifier(singlerowscan_2) [144-159] [singlerowscan_2]
                WhereClause [164-175] [WHERE false]
                  BooleanLiteral(false) [170-175] [false]
          Location [180-182] [IN]
          InList [184-199] [array(SELECT 1)]
            ExpressionSubquery(modifier=ARRAY) [184-199] [array(SELECT 1)]
              Query [190-198] [SELECT 1]
                Select [190-198] [SELECT 1]
                  SelectList [197-198] [1]
                    SelectColumn [197-198] [1]
                      IntLiteral(1) [197-198] [1]
--
SELECT
  *
FROM
  (
    SELECT
      1
  ) AS singlerowscan_1
WHERE
  EXISTS(
    SELECT
      CAST(-90.21638073702843 AS FLOAT64) AS a_3
    FROM
      (
        SELECT
          1
      ) AS singlerowscan_2
    WHERE
      false
  ) IN (ARRAY(
      SELECT
        1
    ))
--
ALTERNATION GROUP: <empty>
--
QueryStatement [0-195] [select * from...SELECT 1))]
  Query [0-195] [select * from...SELECT 1))]
    Select [0-195] [select * from...SELECT 1))]
      SelectList [7-8] [*]
        SelectColumn [7-8] [*]
          Star(*) [7-8] [*]
      FromClause [9-43] [from (SELECT...singlerowscan_1]
        TableSubquery [14-43] [(SELECT 1) AS singlerowscan_1]
          Query [15-23] [SELECT 1]
            Select [15-23] [SELECT 1]
              SelectList [22-23] [1]
                SelectColumn [22-23] [1]
                  IntLiteral(1) [22-23] [1]
          Alias [25-43] [AS singlerowscan_1]
            Identifier(singlerowscan_1) [28-43] [singlerowscan_1]
      WhereClause [44-195] [WHERE   EXISTS...SELECT 1))]
        InExpression(IN) [52-195] [EXISTS(...SELECT 1))]
          ExpressionSubquery(modifier=EXISTS) [52-179] [EXISTS(...false   )]
            Query [64-175] [SELECT...WHERE false]
              Select [64-175] [SELECT...WHERE false]
                SelectList [77-120] [CAST(- 90....FLOAT64) AS a_3]
                  SelectColumn [77-120] [CAST(- 90....FLOAT64) AS a_3]
                    CastExpression [77-113] [CAST(- 90....AS FLOAT64)]
                      UnaryExpression(-) [82-101] [- 90.21638073702843]
                        FloatLiteral(90.21638073702843) [84-101] [90.21638073702843]
                      SimpleType [105-112] [FLOAT64]
                        PathExpression [105-112] [FLOAT64]
                          Identifier(FLOAT64) [105-112] [FLOAT64]
                    Alias [114-120] [AS a_3]
                      Identifier(a_3) [117-120] [a_3]
                FromClause [125-159] [FROM (SELECT...singlerowscan_2]
                  TableSubquery [130-159] [(SELECT 1) AS singlerowscan_2]
                    Query [131-139] [SELECT 1]
                      Select [131-139] [SELECT 1]
                        SelectList [138-139] [1]
                          SelectColumn [138-139] [1]
                            IntLiteral(1) [138-139] [1]
                    Alias [141-159] [AS singlerowscan_2]
                      Identifier(singlerowscan_2) [144-159] [singlerowscan_2]
                WhereClause [164-175] [WHERE false]
                  BooleanLiteral(false) [170-175] [false]
          Location [180-182] [IN]
          Query [185-193] [SELECT 1]
            Select [185-193] [SELECT 1]
              SelectList [192-193] [1]
                SelectColumn [192-193] [1]
                  IntLiteral(1) [192-193] [1]
--
SELECT
  *
FROM
  (
    SELECT
      1
  ) AS singlerowscan_1
WHERE
  EXISTS(
    SELECT
      CAST(-90.21638073702843 AS FLOAT64) AS a_3
    FROM
      (
        SELECT
          1
      ) AS singlerowscan_2
    WHERE
      false
  ) IN ((
    SELECT
      1
    ))
==

# A query mistakenly attempts to use a table subquery as an argument to the CAST
# function. The parser helps detect this case and return a reasonable error.
select cast(select key from keyvalue)
--
ERROR: The argument to CAST is an expression, not a query; to use a query as an expression, the query must be wrapped with additional parentheses to make it a scalar subquery expression [at 1:13]
select cast(select key from keyvalue)
            ^
==

# A query mistakenly attempts to use a table subquery as an argument to the
# TRY_CAST function. The parser helps detect this case and return a reasonable
# error.
select  try_cast(select key from keyvalue)
--
ERROR: The argument to TRY_CAST is an expression, not a query; to use a query as an expression, the query must be wrapped with additional parentheses to make it a scalar subquery expression [at 1:18]
select  try_cast(select key from keyvalue)
                 ^
==
