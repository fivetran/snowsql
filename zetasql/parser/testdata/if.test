# if with single statement
[default mode=script]
if x > y then
  select 1;
end if;
--
Script [0-34] [if x > y then...1; end if;]
  StatementList [0-34] [if x > y then...1; end if;]
    IfStatement [0-32] [if x > y then...1; end if]
      BinaryExpression(>) [3-8] [x > y]
        PathExpression [3-4] [x]
          Identifier(x) [3-4] [x]
        PathExpression [7-8] [y]
          Identifier(y) [7-8] [y]
      StatementList [16-26] [select 1;]
        QueryStatement [16-24] [select 1]
          Query [16-24] [select 1]
            Select [16-24] [select 1]
              SelectList [23-24] [1]
                SelectColumn [23-24] [1]
                  IntLiteral(1) [23-24] [1]
--
IF x > y THEN
  SELECT
    1
  ;
END IF ;
==

# if with different case and formatting
If
x > y   THEN select

1; EnD

iF
--
Script [0-34] [If x > y...1; EnD  iF]
  StatementList [0-34] [If x > y...1; EnD  iF]
    IfStatement [0-34] [If x > y...1; EnD  iF]
      BinaryExpression(>) [3-8] [x > y]
        PathExpression [3-4] [x]
          Identifier(x) [3-4] [x]
        PathExpression [7-8] [y]
          Identifier(y) [7-8] [y]
      StatementList [16-27] [select  1;]
        QueryStatement [16-25] [select  1]
          Query [16-25] [select  1]
            Select [16-25] [select  1]
              SelectList [24-25] [1]
                SelectColumn [24-25] [1]
                  IntLiteral(1) [24-25] [1]
--
IF x > y THEN
  SELECT
    1
  ;
END IF ;
==

# if with multiple statements
if x > y then
  select 1;
  create table t as select a, b from t2;
  drop table t;
end if;
--
Script [0-91] [if x > y then...t; end if;]
  StatementList [0-91] [if x > y then...t; end if;]
    IfStatement [0-89] [if x > y then...t; end if]
      BinaryExpression(>) [3-8] [x > y]
        PathExpression [3-4] [x]
          Identifier(x) [3-4] [x]
        PathExpression [7-8] [y]
          Identifier(y) [7-8] [y]
      StatementList [16-83] [select 1;...drop table t;]
        QueryStatement [16-24] [select 1]
          Query [16-24] [select 1]
            Select [16-24] [select 1]
              SelectList [23-24] [1]
                SelectColumn [23-24] [1]
                  IntLiteral(1) [23-24] [1]
        CreateTableStatement [28-65] [create table...b from t2]
          PathExpression [41-42] [t]
            Identifier(t) [41-42] [t]
          Query [46-65] [select a, b from t2]
            Select [46-65] [select a, b from t2]
              SelectList [53-57] [a, b]
                SelectColumn [53-54] [a]
                  PathExpression [53-54] [a]
                    Identifier(a) [53-54] [a]
                SelectColumn [56-57] [b]
                  PathExpression [56-57] [b]
                    Identifier(b) [56-57] [b]
              FromClause [58-65] [from t2]
                TablePathExpression [63-65] [t2]
                  PathExpression [63-65] [t2]
                    Identifier(t2) [63-65] [t2]
        DropStatement TABLE [69-81] [drop table t]
          PathExpression [80-81] [t]
            Identifier(t) [80-81] [t]
--
IF x > y THEN
  SELECT
    1
  ;
  CREATE TABLE t AS
  SELECT
    a,
    b
  FROM
    t2
  ;
  DROP TABLE t ;
END IF ;
==

# if with nested if
if x > y then
  select 1;
  create table t as select a, b from t2;
  if (select count(*) from t) = 0 then
    drop table t;
  end if;
end if;
--
Script [0-142] [if x > y then...if; end if;]
  StatementList [0-142] [if x > y then...if; end if;]
    IfStatement [0-140] [if x > y then...if; end if]
      BinaryExpression(>) [3-8] [x > y]
        PathExpression [3-4] [x]
          Identifier(x) [3-4] [x]
        PathExpression [7-8] [y]
          Identifier(y) [7-8] [y]
      StatementList [16-134] [select 1;...end if;]
        QueryStatement [16-24] [select 1]
          Query [16-24] [select 1]
            Select [16-24] [select 1]
              SelectList [23-24] [1]
                SelectColumn [23-24] [1]
                  IntLiteral(1) [23-24] [1]
        CreateTableStatement [28-65] [create table...b from t2]
          PathExpression [41-42] [t]
            Identifier(t) [41-42] [t]
          Query [46-65] [select a, b from t2]
            Select [46-65] [select a, b from t2]
              SelectList [53-57] [a, b]
                SelectColumn [53-54] [a]
                  PathExpression [53-54] [a]
                    Identifier(a) [53-54] [a]
                SelectColumn [56-57] [b]
                  PathExpression [56-57] [b]
                    Identifier(b) [56-57] [b]
              FromClause [58-65] [from t2]
                TablePathExpression [63-65] [t2]
                  PathExpression [63-65] [t2]
                    Identifier(t2) [63-65] [t2]
        IfStatement [69-132] [if (select...;   end if]
          BinaryExpression(=) [72-100] [(select count(*) from t) = 0]
            ExpressionSubquery [72-96] [(select count(*) from t)]
              Query [73-95] [select count(*) from t]
                Select [73-95] [select count(*) from t]
                  SelectList [80-88] [count(*)]
                    SelectColumn [80-88] [count(*)]
                      FunctionCall [80-88] [count(*)]
                        PathExpression [80-85] [count]
                          Identifier(count) [80-85] [count]
                        Star(*) [86-87] [*]
                  FromClause [89-95] [from t]
                    TablePathExpression [94-95] [t]
                      PathExpression [94-95] [t]
                        Identifier(t) [94-95] [t]
            IntLiteral(0) [99-100] [0]
          StatementList [110-126] [drop table t;]
            DropStatement TABLE [110-122] [drop table t]
              PathExpression [121-122] [t]
                Identifier(t) [121-122] [t]
--
IF x > y THEN
  SELECT
    1
  ;
  CREATE TABLE t AS
  SELECT
    a,
    b
  FROM
    t2
  ;
  IF(
    SELECT
      count(*)
    FROM
      t
  ) = 0 THEN
    DROP TABLE t ;
  END IF ;
END IF ;
==

# if with else
if x > y then
  select 1;
else
  select 2;
end if;
--
Script [0-51] [if x > y then...2; end if;]
  StatementList [0-51] [if x > y then...2; end if;]
    IfStatement [0-49] [if x > y then...2; end if]
      BinaryExpression(>) [3-8] [x > y]
        PathExpression [3-4] [x]
          Identifier(x) [3-4] [x]
        PathExpression [7-8] [y]
          Identifier(y) [7-8] [y]
      StatementList [16-26] [select 1;]
        QueryStatement [16-24] [select 1]
          Query [16-24] [select 1]
            Select [16-24] [select 1]
              SelectList [23-24] [1]
                SelectColumn [23-24] [1]
                  IntLiteral(1) [23-24] [1]
      StatementList [33-43] [select 2;]
        QueryStatement [33-41] [select 2]
          Query [33-41] [select 2]
            Select [33-41] [select 2]
              SelectList [40-41] [2]
                SelectColumn [40-41] [2]
                  IntLiteral(2) [40-41] [2]
--
IF x > y THEN
  SELECT
    1
  ;
ELSE
  SELECT
    2
  ;
END IF ;
==

# multiple levels of if/else
if x > y then
  select 1;
  if true then
    create table t (x int64, y string);
    if false then
      drop table t;
    else
      drop table t2;
      create view v as select 1 as x;
    end if;
  end if;
else
  if true then
    if false then
      if b then
        select 2;
        select 3;
      else
        select 4;
        select 5;
        select 6;
      end if;
    end if;
  end if;
end if
--
Script [0-406] [if x > y then...if; end if]
  StatementList [0-406] [if x > y then...if; end if]
    IfStatement [0-406] [if x > y then...if; end if]
      BinaryExpression(>) [3-8] [x > y]
        PathExpression [3-4] [x]
          Identifier(x) [3-4] [x]
        PathExpression [7-8] [y]
          Identifier(y) [7-8] [y]
      StatementList [16-209] [select 1;...end if;]
        QueryStatement [16-24] [select 1]
          Query [16-24] [select 1]
            Select [16-24] [select 1]
              SelectList [23-24] [1]
                SelectColumn [23-24] [1]
                  IntLiteral(1) [23-24] [1]
        IfStatement [28-207] [if true then...;   end if]
          BooleanLiteral(true) [31-35] [true]
          StatementList [45-201] [create table...end if;]
            CreateTableStatement [45-79] [create table...y string)]
              PathExpression [58-59] [t]
                Identifier(t) [58-59] [t]
              TableElementList [60-79] [(x int64, y string)]
                ColumnDefinition [61-68] [x int64]
                  Identifier(x) [61-62] [x]
                  SimpleColumnSchema [63-68] [int64]
                    PathExpression [63-68] [int64]
                      Identifier(int64) [63-68] [int64]
                ColumnDefinition [70-78] [y string]
                  Identifier(y) [70-71] [y]
                  SimpleColumnSchema [72-78] [string]
                    PathExpression [72-78] [string]
                      Identifier(string) [72-78] [string]
            IfStatement [85-197] [if false then...end if]
              BooleanLiteral(false) [88-93] [false]
              StatementList [105-123] [drop table t;]
                DropStatement TABLE [105-117] [drop table t]
                  PathExpression [116-117] [t]
                    Identifier(t) [116-117] [t]
              StatementList [134-191] [drop table...select 1 as x;]
                DropStatement TABLE [134-147] [drop table t2]
                  PathExpression [145-147] [t2]
                    Identifier(t2) [145-147] [t2]
                CreateViewStatement [155-185] [create view v as select 1 as x]
                  PathExpression [167-168] [v]
                    Identifier(v) [167-168] [v]
                  Query [172-185] [select 1 as x]
                    Select [172-185] [select 1 as x]
                      SelectList [179-185] [1 as x]
                        SelectColumn [179-185] [1 as x]
                          IntLiteral(1) [179-180] [1]
                          Alias [181-185] [as x]
                            Identifier(x) [184-185] [x]
      StatementList [216-400] [if true then...end if;]
        IfStatement [216-398] [if true then...;   end if]
          BooleanLiteral(true) [219-223] [true]
          StatementList [233-392] [if false then...end if;]
            IfStatement [233-388] [if false then...end if]
              BooleanLiteral(false) [236-241] [false]
              StatementList [253-382] [if b then...end if;]
                IfStatement [253-376] [if b then...end if]
                  PathExpression [256-257] [b]
                    Identifier(b) [256-257] [b]
                  StatementList [271-305] [select 2;         select 3;]
                    QueryStatement [271-279] [select 2]
                      Query [271-279] [select 2]
                        Select [271-279] [select 2]
                          SelectList [278-279] [2]
                            SelectColumn [278-279] [2]
                              IntLiteral(2) [278-279] [2]
                    QueryStatement [289-297] [select 3]
                      Query [289-297] [select 3]
                        Select [289-297] [select 3]
                          SelectList [296-297] [3]
                            SelectColumn [296-297] [3]
                              IntLiteral(3) [296-297] [3]
                  StatementList [318-370] [select 4;...select 6;]
                    QueryStatement [318-326] [select 4]
                      Query [318-326] [select 4]
                        Select [318-326] [select 4]
                          SelectList [325-326] [4]
                            SelectColumn [325-326] [4]
                              IntLiteral(4) [325-326] [4]
                    QueryStatement [336-344] [select 5]
                      Query [336-344] [select 5]
                        Select [336-344] [select 5]
                          SelectList [343-344] [5]
                            SelectColumn [343-344] [5]
                              IntLiteral(5) [343-344] [5]
                    QueryStatement [354-362] [select 6]
                      Query [354-362] [select 6]
                        Select [354-362] [select 6]
                          SelectList [361-362] [6]
                            SelectColumn [361-362] [6]
                              IntLiteral(6) [361-362] [6]
--
IF x > y THEN
  SELECT
    1
  ;
  IF true THEN
    CREATE TABLE t
    (
      x int64,
      y string
    ) ;
    IF false THEN
      DROP TABLE t ;
    ELSE
      DROP TABLE t2 ;
      CREATE VIEW v AS
      SELECT
        1 AS x
      ;
    END IF ;
  END IF ;
ELSE
  IF true THEN
    IF false THEN
      IF b THEN
        SELECT
          2
        ;
        SELECT
          3
        ;
      ELSE
        SELECT
          4
        ;
        SELECT
          5
        ;
        SELECT
          6
        ;
      END IF ;
    END IF ;
  END IF ;
END IF ;
==

# if with if inside condition
if if(cond, x, y) then
  select 1;
else
  select 2;
end if;
--

Script [0-60] [if if(cond...2; end if;]
  StatementList [0-60] [if if(cond...2; end if;]
    IfStatement [0-58] [if if(cond...2; end if]
      FunctionCall [3-17] [if(cond, x, y)]
        PathExpression [3-5] [if]
          Identifier("if") [3-5] [if]
        PathExpression [6-10] [cond]
          Identifier(cond) [6-10] [cond]
        PathExpression [12-13] [x]
          Identifier(x) [12-13] [x]
        PathExpression [15-16] [y]
          Identifier(y) [15-16] [y]
      StatementList [25-35] [select 1;]
        QueryStatement [25-33] [select 1]
          Query [25-33] [select 1]
            Select [25-33] [select 1]
              SelectList [32-33] [1]
                SelectColumn [32-33] [1]
                  IntLiteral(1) [32-33] [1]
      StatementList [42-52] [select 2;]
        QueryStatement [42-50] [select 2]
          Query [42-50] [select 2]
            Select [42-50] [select 2]
              SelectList [49-50] [2]
                SelectColumn [49-50] [2]
                  IntLiteral(2) [49-50] [2]
--
IF "if"(cond, x, y) THEN
  SELECT
    1
  ;
ELSE
  SELECT
    2
  ;
END IF ;
==

# if with case/when inside condition
if case when x then y end then
  select 1;
  if true then
    create table t (x int64, y string);
    if false then
      drop table t;
    else
      drop table t2;
      create view v as select 1 as x;
    end if;
  end if;
else
  select 2;
end if;
--
Script [0-251] [if case when...2; end if;]
  StatementList [0-251] [if case when...2; end if;]
    IfStatement [0-249] [if case when...2; end if]
      CaseNoValueExpression [3-25] [case when x then y end]
        PathExpression [13-14] [x]
          Identifier(x) [13-14] [x]
        PathExpression [20-21] [y]
          Identifier(y) [20-21] [y]
      StatementList [33-226] [select 1;...end if;]
        QueryStatement [33-41] [select 1]
          Query [33-41] [select 1]
            Select [33-41] [select 1]
              SelectList [40-41] [1]
                SelectColumn [40-41] [1]
                  IntLiteral(1) [40-41] [1]
        IfStatement [45-224] [if true then...;   end if]
          BooleanLiteral(true) [48-52] [true]
          StatementList [62-218] [create table...end if;]
            CreateTableStatement [62-96] [create table...y string)]
              PathExpression [75-76] [t]
                Identifier(t) [75-76] [t]
              TableElementList [77-96] [(x int64, y string)]
                ColumnDefinition [78-85] [x int64]
                  Identifier(x) [78-79] [x]
                  SimpleColumnSchema [80-85] [int64]
                    PathExpression [80-85] [int64]
                      Identifier(int64) [80-85] [int64]
                ColumnDefinition [87-95] [y string]
                  Identifier(y) [87-88] [y]
                  SimpleColumnSchema [89-95] [string]
                    PathExpression [89-95] [string]
                      Identifier(string) [89-95] [string]
            IfStatement [102-214] [if false then...end if]
              BooleanLiteral(false) [105-110] [false]
              StatementList [122-140] [drop table t;]
                DropStatement TABLE [122-134] [drop table t]
                  PathExpression [133-134] [t]
                    Identifier(t) [133-134] [t]
              StatementList [151-208] [drop table...select 1 as x;]
                DropStatement TABLE [151-164] [drop table t2]
                  PathExpression [162-164] [t2]
                    Identifier(t2) [162-164] [t2]
                CreateViewStatement [172-202] [create view v as select 1 as x]
                  PathExpression [184-185] [v]
                    Identifier(v) [184-185] [v]
                  Query [189-202] [select 1 as x]
                    Select [189-202] [select 1 as x]
                      SelectList [196-202] [1 as x]
                        SelectColumn [196-202] [1 as x]
                          IntLiteral(1) [196-197] [1]
                          Alias [198-202] [as x]
                            Identifier(x) [201-202] [x]
      StatementList [233-243] [select 2;]
        QueryStatement [233-241] [select 2]
          Query [233-241] [select 2]
            Select [233-241] [select 2]
              SelectList [240-241] [2]
                SelectColumn [240-241] [2]
                  IntLiteral(2) [240-241] [2]
--
IF
CASE
  WHEN x THEN y
END THEN
  SELECT
    1
  ;
  IF true THEN
    CREATE TABLE t
    (
      x int64,
      y string
    ) ;
    IF false THEN
      DROP TABLE t ;
    ELSE
      DROP TABLE t2 ;
      CREATE VIEW v AS
      SELECT
        1 AS x
      ;
    END IF ;
  END IF ;
ELSE
  SELECT
    2
  ;
END IF ;
==

# if with various expressions
if {{if(a, b, c)|exists (select 1)|case when x then y end|extract(date from ts)}} then
  select 1;
end if
--
ALTERNATION GROUP: if(a, b, c)
--
Script [0-38] [if if(a, b...1; end if]
  StatementList [0-38] [if if(a, b...1; end if]
    IfStatement [0-38] [if if(a, b...1; end if]
      FunctionCall [3-14] [if(a, b, c)]
        PathExpression [3-5] [if]
          Identifier("if") [3-5] [if]
        PathExpression [6-7] [a]
          Identifier(a) [6-7] [a]
        PathExpression [9-10] [b]
          Identifier(b) [9-10] [b]
        PathExpression [12-13] [c]
          Identifier(c) [12-13] [c]
      StatementList [22-32] [select 1;]
        QueryStatement [22-30] [select 1]
          Query [22-30] [select 1]
            Select [22-30] [select 1]
              SelectList [29-30] [1]
                SelectColumn [29-30] [1]
                  IntLiteral(1) [29-30] [1]
--
IF "if"(a, b, c) THEN
  SELECT
    1
  ;
END IF ;
--
ALTERNATION GROUP: exists (select 1)
--
Script [0-44] [if exists...1; end if]
  StatementList [0-44] [if exists...1; end if]
    IfStatement [0-44] [if exists...1; end if]
      ExpressionSubquery(modifier=EXISTS) [3-20] [exists (select 1)]
        Query [11-19] [select 1]
          Select [11-19] [select 1]
            SelectList [18-19] [1]
              SelectColumn [18-19] [1]
                IntLiteral(1) [18-19] [1]
      StatementList [28-38] [select 1;]
        QueryStatement [28-36] [select 1]
          Query [28-36] [select 1]
            Select [28-36] [select 1]
              SelectList [35-36] [1]
                SelectColumn [35-36] [1]
                  IntLiteral(1) [35-36] [1]
--
IF EXISTS(
  SELECT
    1
) THEN
  SELECT
    1
  ;
END IF ;
--
ALTERNATION GROUP: case when x then y end
--
Script [0-49] [if case when...1; end if]
  StatementList [0-49] [if case when...1; end if]
    IfStatement [0-49] [if case when...1; end if]
      CaseNoValueExpression [3-25] [case when x then y end]
        PathExpression [13-14] [x]
          Identifier(x) [13-14] [x]
        PathExpression [20-21] [y]
          Identifier(y) [20-21] [y]
      StatementList [33-43] [select 1;]
        QueryStatement [33-41] [select 1]
          Query [33-41] [select 1]
            Select [33-41] [select 1]
              SelectList [40-41] [1]
                SelectColumn [40-41] [1]
                  IntLiteral(1) [40-41] [1]
--
IF
CASE
  WHEN x THEN y
END THEN
  SELECT
    1
  ;
END IF ;
--
ALTERNATION GROUP: extract(date from ts)
--
Script [0-48] [if extract...1; end if]
  StatementList [0-48] [if extract...1; end if]
    IfStatement [0-48] [if extract...1; end if]
      ExtractExpression [3-24] [extract(date from ts)]
        PathExpression [11-15] [date]
          Identifier(date) [11-15] [date]
        PathExpression [21-23] [ts]
          Identifier(ts) [21-23] [ts]
      StatementList [32-42] [select 1;]
        QueryStatement [32-40] [select 1]
          Query [32-40] [select 1]
            Select [32-40] [select 1]
              SelectList [39-40] [1]
                SelectColumn [39-40] [1]
                  IntLiteral(1) [39-40] [1]
--
IF EXTRACT(date FROM ts) THEN
  SELECT
    1
  ;
END IF ;
==

# if with hint (not allowed)
@{hint_name=5} if true then
  select 1;
end if
--
ERROR: Syntax error: Unexpected keyword IF [at 1:16]
@{hint_name=5} if true then
               ^
==

# if with hint on inner statement
if true then
  @{hint_name=5} select 1;
end if
--
Script [0-46] [if true then...1; end if]
  StatementList [0-46] [if true then...1; end if]
    IfStatement [0-46] [if true then...1; end if]
      BooleanLiteral(true) [3-7] [true]
      StatementList [15-40] [@{hint_name=5} select 1;]
        HintedStatement [15-38] [@{hint_name=5} select 1]
          Hint [15-29] [@{hint_name=5}]
            HintEntry [17-28] [hint_name=5]
              Identifier(hint_name) [17-26] [hint_name]
              IntLiteral(5) [27-28] [5]
          QueryStatement [30-38] [select 1]
            Query [30-38] [select 1]
              Select [30-38] [select 1]
                SelectList [37-38] [1]
                  SelectColumn [37-38] [1]
                    IntLiteral(1) [37-38] [1]
--
IF true THEN
  @{ hint_name = 5 }
  SELECT
    1
  ;
END IF ;
==

# if with empty statement list
if x < y then
end if
--
Script [0-20] [if x < y then end if]
  StatementList [0-20] [if x < y then end if]
    IfStatement [0-20] [if x < y then end if]
      BinaryExpression(<) [3-8] [x < y]
        PathExpression [3-4] [x]
          Identifier(x) [3-4] [x]
        PathExpression [7-8] [y]
          Identifier(y) [7-8] [y]
      StatementList [13-13] []
--
IF x < y THEN
END IF ;
==

# else with empty statement list
if x < y then
  select 1;
else
end if
--
Script [0-37] [if x < y then...else end if]
  StatementList [0-37] [if x < y then...else end if]
    IfStatement [0-37] [if x < y then...else end if]
      BinaryExpression(<) [3-8] [x < y]
        PathExpression [3-4] [x]
          Identifier(x) [3-4] [x]
        PathExpression [7-8] [y]
          Identifier(y) [7-8] [y]
      StatementList [16-26] [select 1;]
        QueryStatement [16-24] [select 1]
          Query [16-24] [select 1]
            Select [16-24] [select 1]
              SelectList [23-24] [1]
                SelectColumn [23-24] [1]
                  IntLiteral(1) [23-24] [1]
      StatementList [30-30] []
--
IF x < y THEN
  SELECT
    1
  ;
ELSE
END IF ;
==

# then and else with empty statement list
if x < y then
else
end if
--
Script [0-25] [if x < y then else end if]
  StatementList [0-25] [if x < y then else end if]
    IfStatement [0-25] [if x < y then else end if]
      BinaryExpression(<) [3-8] [x < y]
        PathExpression [3-4] [x]
          Identifier(x) [3-4] [x]
        PathExpression [7-8] [y]
          Identifier(y) [7-8] [y]
      StatementList [13-13] []
      StatementList [18-18] []
--
IF x < y THEN
ELSE
END IF ;
==


# unterminated statement in statement list
if x < y then
  select 1
end if
--
ERROR: Syntax error: Expected ";" but got keyword END [at 3:1]
end if
^
==

# unterminated statement in statement list with no end if
if x < y then
  select 1
--
ERROR: Syntax error: Expected ";" but got end of script [at 2:11]
  select 1
          ^
==

# else without if
else
  select 2;
end if
--
ERROR: Syntax error: Expected end of input but got keyword ELSE [at 1:1]
else
^
==

# end if without if
end if
--
ERROR: Syntax error: Expected end of input but got keyword END [at 1:1]
end if
^
==

# if/else without end if
if x < y then
  select 1;
else
  select 2;
--
ERROR: Syntax error: Expected END IF [at 5:1]

^
==

# if/else without end if, with multiple lines at the end
if x < y then
  select 1;
else
  select 2;



--
ERROR: Syntax error: Expected END IF [at 5:1]

^
==

# invalid statement inside if
IF true THEN
  SELECT 1;
  SELECT 2 a b
  SELECT 3;
END IF;
--
ERROR: Syntax error: Expected ";" but got identifier "b" [at 3:14]
  SELECT 2 a b
             ^
==

# misspelled keyword in statement inside if
IF true THEN
  SELECT 1;
  SSSELECT 1;
  SELECT 1;
END IF;
--
ERROR: Syntax error: Expected END IF [at 3:3]
  SSSELECT 1;
  ^
==

# nested end if without a trailing semicolon
IF true
THEN
  IF true THEN SELECT 1; END IF
  select 1;
END IF
--
ERROR: Syntax error: Expected ";" but got keyword SELECT [at 4:3]
  select 1;
  ^
==

# various incorrect "end if" forms
if x < y then
  select 1;
{{|end|if|end else|end drop}}
--
ALTERNATION GROUP: <empty>
--
ERROR: Syntax error: Expected END IF [at 4:1]

^
--
ALTERNATION GROUP: end
--
ERROR: Syntax error: Expected END IF [at 3:1]
end
^
--
ALTERNATION GROUP: if
--
ERROR: Syntax error: Unexpected end of script [at 3:3]
if
  ^
--
ALTERNATION GROUP: end else
--
ERROR: Syntax error: Expected END IF [at 3:1]
end else
^
--
ALTERNATION GROUP: end drop
--
ERROR: Syntax error: Expected END IF [at 3:1]
end drop
^
==

# Simple if/elseif/elseif
IF x = 2 THEN
  SELECT 1;
  SELECT 2;
ELSEIF x = 3 THEN
  SELECT 3;
  SELECT 4;
ELSEIF x = 4 THEN
  SELECT 5;
  SELECT 6;
END IF;
--
Script [0-130] [IF x = 2 THEN...6; END IF;]
  StatementList [0-130] [IF x = 2 THEN...6; END IF;]
    IfStatement [0-128] [IF x = 2 THEN...6; END IF]
      BinaryExpression(=) [3-8] [x = 2]
        PathExpression [3-4] [x]
          Identifier(x) [3-4] [x]
        IntLiteral(2) [7-8] [2]
      StatementList [16-38] [SELECT 1;   SELECT 2;]
        QueryStatement [16-24] [SELECT 1]
          Query [16-24] [SELECT 1]
            Select [16-24] [SELECT 1]
              SelectList [23-24] [1]
                SelectColumn [23-24] [1]
                  IntLiteral(1) [23-24] [1]
        QueryStatement [28-36] [SELECT 2]
          Query [28-36] [SELECT 2]
            Select [28-36] [SELECT 2]
              SelectList [35-36] [2]
                SelectColumn [35-36] [2]
                  IntLiteral(2) [35-36] [2]
      ElseifClauseList [38-122] [ELSEIF x =...SELECT 6;]
        ElseifClause [38-80] [ELSEIF x =...SELECT 4;]
          BinaryExpression(=) [45-50] [x = 3]
            PathExpression [45-46] [x]
              Identifier(x) [45-46] [x]
            IntLiteral(3) [49-50] [3]
          StatementList [58-80] [SELECT 3;   SELECT 4;]
            QueryStatement [58-66] [SELECT 3]
              Query [58-66] [SELECT 3]
                Select [58-66] [SELECT 3]
                  SelectList [65-66] [3]
                    SelectColumn [65-66] [3]
                      IntLiteral(3) [65-66] [3]
            QueryStatement [70-78] [SELECT 4]
              Query [70-78] [SELECT 4]
                Select [70-78] [SELECT 4]
                  SelectList [77-78] [4]
                    SelectColumn [77-78] [4]
                      IntLiteral(4) [77-78] [4]
        ElseifClause [80-122] [ELSEIF x =...SELECT 6;]
          BinaryExpression(=) [87-92] [x = 4]
            PathExpression [87-88] [x]
              Identifier(x) [87-88] [x]
            IntLiteral(4) [91-92] [4]
          StatementList [100-122] [SELECT 5;   SELECT 6;]
            QueryStatement [100-108] [SELECT 5]
              Query [100-108] [SELECT 5]
                Select [100-108] [SELECT 5]
                  SelectList [107-108] [5]
                    SelectColumn [107-108] [5]
                      IntLiteral(5) [107-108] [5]
            QueryStatement [112-120] [SELECT 6]
              Query [112-120] [SELECT 6]
                Select [112-120] [SELECT 6]
                  SelectList [119-120] [6]
                    SelectColumn [119-120] [6]
                      IntLiteral(6) [119-120] [6]
--
IF x = 2 THEN
  SELECT
    1
  ;
  SELECT
    2
  ;
ELSEIF x = 3 THEN
  SELECT
    3
  ;
  SELECT
    4
  ;
ELSEIF x = 4 THEN
  SELECT
    5
  ;
  SELECT
    6
  ;
END IF ;
==

# Simple if/elseif/else
IF x = 2 THEN
  SELECT 1;
  SELECT 2;
ELSEIF x = 3 THEN
  SELECT 3;
  SELECT 4;
ELSE
  SELECT 5;
  SELECT 6;
END IF;
--
Script [0-117] [IF x = 2 THEN...6; END IF;]
  StatementList [0-117] [IF x = 2 THEN...6; END IF;]
    IfStatement [0-115] [IF x = 2 THEN...6; END IF]
      BinaryExpression(=) [3-8] [x = 2]
        PathExpression [3-4] [x]
          Identifier(x) [3-4] [x]
        IntLiteral(2) [7-8] [2]
      StatementList [16-38] [SELECT 1;   SELECT 2;]
        QueryStatement [16-24] [SELECT 1]
          Query [16-24] [SELECT 1]
            Select [16-24] [SELECT 1]
              SelectList [23-24] [1]
                SelectColumn [23-24] [1]
                  IntLiteral(1) [23-24] [1]
        QueryStatement [28-36] [SELECT 2]
          Query [28-36] [SELECT 2]
            Select [28-36] [SELECT 2]
              SelectList [35-36] [2]
                SelectColumn [35-36] [2]
                  IntLiteral(2) [35-36] [2]
      ElseifClauseList [38-80] [ELSEIF x =...SELECT 4;]
        ElseifClause [38-80] [ELSEIF x =...SELECT 4;]
          BinaryExpression(=) [45-50] [x = 3]
            PathExpression [45-46] [x]
              Identifier(x) [45-46] [x]
            IntLiteral(3) [49-50] [3]
          StatementList [58-80] [SELECT 3;   SELECT 4;]
            QueryStatement [58-66] [SELECT 3]
              Query [58-66] [SELECT 3]
                Select [58-66] [SELECT 3]
                  SelectList [65-66] [3]
                    SelectColumn [65-66] [3]
                      IntLiteral(3) [65-66] [3]
            QueryStatement [70-78] [SELECT 4]
              Query [70-78] [SELECT 4]
                Select [70-78] [SELECT 4]
                  SelectList [77-78] [4]
                    SelectColumn [77-78] [4]
                      IntLiteral(4) [77-78] [4]
      StatementList [87-109] [SELECT 5;   SELECT 6;]
        QueryStatement [87-95] [SELECT 5]
          Query [87-95] [SELECT 5]
            Select [87-95] [SELECT 5]
              SelectList [94-95] [5]
                SelectColumn [94-95] [5]
                  IntLiteral(5) [94-95] [5]
        QueryStatement [99-107] [SELECT 6]
          Query [99-107] [SELECT 6]
            Select [99-107] [SELECT 6]
              SelectList [106-107] [6]
                SelectColumn [106-107] [6]
                  IntLiteral(6) [106-107] [6]
--
IF x = 2 THEN
  SELECT
    1
  ;
  SELECT
    2
  ;
ELSEIF x = 3 THEN
  SELECT
    3
  ;
  SELECT
    4
  ;
ELSE
  SELECT
    5
  ;
  SELECT
    6
  ;
END IF ;
==

# elseif with empty body
IF x = 2 THEN
  SELECT 1;
  SELECT 2;
ELSEIF x = 3 THEN
ELSE
  SELECT 5;
  SELECT 6;
END IF;
--
Script [0-93] [IF x = 2 THEN...6; END IF;]
  StatementList [0-93] [IF x = 2 THEN...6; END IF;]
    IfStatement [0-91] [IF x = 2 THEN...6; END IF]
      BinaryExpression(=) [3-8] [x = 2]
        PathExpression [3-4] [x]
          Identifier(x) [3-4] [x]
        IntLiteral(2) [7-8] [2]
      StatementList [16-38] [SELECT 1;   SELECT 2;]
        QueryStatement [16-24] [SELECT 1]
          Query [16-24] [SELECT 1]
            Select [16-24] [SELECT 1]
              SelectList [23-24] [1]
                SelectColumn [23-24] [1]
                  IntLiteral(1) [23-24] [1]
        QueryStatement [28-36] [SELECT 2]
          Query [28-36] [SELECT 2]
            Select [28-36] [SELECT 2]
              SelectList [35-36] [2]
                SelectColumn [35-36] [2]
                  IntLiteral(2) [35-36] [2]
      ElseifClauseList [38-55] [ELSEIF x = 3 THEN]
        ElseifClause [38-55] [ELSEIF x = 3 THEN]
          BinaryExpression(=) [45-50] [x = 3]
            PathExpression [45-46] [x]
              Identifier(x) [45-46] [x]
            IntLiteral(3) [49-50] [3]
          StatementList [55-55] []
      StatementList [63-85] [SELECT 5;   SELECT 6;]
        QueryStatement [63-71] [SELECT 5]
          Query [63-71] [SELECT 5]
            Select [63-71] [SELECT 5]
              SelectList [70-71] [5]
                SelectColumn [70-71] [5]
                  IntLiteral(5) [70-71] [5]
        QueryStatement [75-83] [SELECT 6]
          Query [75-83] [SELECT 6]
            Select [75-83] [SELECT 6]
              SelectList [82-83] [6]
                SelectColumn [82-83] [6]
                  IntLiteral(6) [82-83] [6]
--
IF x = 2 THEN
  SELECT
    1
  ;
  SELECT
    2
  ;
ELSEIF x = 3 THEN
ELSE
  SELECT
    5
  ;
  SELECT
    6
  ;
END IF ;
==

# elseif, then, and else, all with empty body
IF x = 2 THEN
ELSEIF x = 3 THEN
ELSE
END IF;
--
Script [0-45] [IF x = 2 THEN...ELSE END IF;]
  StatementList [0-45] [IF x = 2 THEN...ELSE END IF;]
    IfStatement [0-43] [IF x = 2 THEN...ELSE END IF]
      BinaryExpression(=) [3-8] [x = 2]
        PathExpression [3-4] [x]
          Identifier(x) [3-4] [x]
        IntLiteral(2) [7-8] [2]
      StatementList [13-13] []
      ElseifClauseList [14-31] [ELSEIF x = 3 THEN]
        ElseifClause [14-31] [ELSEIF x = 3 THEN]
          BinaryExpression(=) [21-26] [x = 3]
            PathExpression [21-22] [x]
              Identifier(x) [21-22] [x]
            IntLiteral(3) [25-26] [3]
          StatementList [31-31] []
      StatementList [36-36] []
--
IF x = 2 THEN
ELSEIF x = 3 THEN
ELSE
END IF ;
==

# Nested if/elseif statements
IF x = 2 THEN
ELSEIF x = 3 THEN
  IF y = 3 THEN
  ELSEIF y = 4 THEN
  ELSEIF y = 5 THEN
    IF z = 6 THEN SELECT 6;
    ELSEIF z = 7 THEN SELECT 7;
    ELSEIF z = 8 THEN SELECT 8;
    END IF;
  END IF;
END IF;
--
Script [0-210] [IF x = 2 THEN...IF; END IF;]
  StatementList [0-210] [IF x = 2 THEN...IF; END IF;]
    IfStatement [0-208] [IF x = 2 THEN...IF; END IF]
      BinaryExpression(=) [3-8] [x = 2]
        PathExpression [3-4] [x]
          Identifier(x) [3-4] [x]
        IntLiteral(2) [7-8] [2]
      StatementList [13-13] []
      ElseifClauseList [14-202] [ELSEIF x =...END IF;]
        ElseifClause [14-202] [ELSEIF x =...END IF;]
          BinaryExpression(=) [21-26] [x = 3]
            PathExpression [21-22] [x]
              Identifier(x) [21-22] [x]
            IntLiteral(3) [25-26] [3]
          StatementList [34-202] [IF y = 3 THEN...END IF;]
            IfStatement [34-200] [IF y = 3 THEN...;   END IF]
              BinaryExpression(=) [37-42] [y = 3]
                PathExpression [37-38] [y]
                  Identifier(y) [37-38] [y]
                IntLiteral(3) [41-42] [3]
              StatementList [47-47] []
              ElseifClauseList [50-194] [ELSEIF y =...END IF;]
                ElseifClause [50-67] [ELSEIF y = 4 THEN]
                  BinaryExpression(=) [57-62] [y = 4]
                    PathExpression [57-58] [y]
                      Identifier(y) [57-58] [y]
                    IntLiteral(4) [61-62] [4]
                  StatementList [67-67] []
                ElseifClause [70-194] [ELSEIF y =...END IF;]
                  BinaryExpression(=) [77-82] [y = 5]
                    PathExpression [77-78] [y]
                      Identifier(y) [77-78] [y]
                    IntLiteral(5) [81-82] [5]
                  StatementList [92-194] [IF z = 6 THEN...END IF;]
                    IfStatement [92-190] [IF z = 6 THEN...END IF]
                      BinaryExpression(=) [95-100] [z = 6]
                        PathExpression [95-96] [z]
                          Identifier(z) [95-96] [z]
                        IntLiteral(6) [99-100] [6]
                      StatementList [106-120] [SELECT 6;]
                        QueryStatement [106-114] [SELECT 6]
                          Query [106-114] [SELECT 6]
                            Select [106-114] [SELECT 6]
                              SelectList [113-114] [6]
                                SelectColumn [113-114] [6]
                                  IntLiteral(6) [113-114] [6]
                      ElseifClauseList [120-184] [ELSEIF z =...SELECT 8;]
                        ElseifClause [120-152] [ELSEIF z = 7 THEN SELECT 7;]
                          BinaryExpression(=) [127-132] [z = 7]
                            PathExpression [127-128] [z]
                              Identifier(z) [127-128] [z]
                            IntLiteral(7) [131-132] [7]
                          StatementList [138-152] [SELECT 7;]
                            QueryStatement [138-146] [SELECT 7]
                              Query [138-146] [SELECT 7]
                                Select [138-146] [SELECT 7]
                                  SelectList [145-146] [7]
                                    SelectColumn [145-146] [7]
                                      IntLiteral(7) [145-146] [7]
                        ElseifClause [152-184] [ELSEIF z = 8 THEN SELECT 8;]
                          BinaryExpression(=) [159-164] [z = 8]
                            PathExpression [159-160] [z]
                              Identifier(z) [159-160] [z]
                            IntLiteral(8) [163-164] [8]
                          StatementList [170-184] [SELECT 8;]
                            QueryStatement [170-178] [SELECT 8]
                              Query [170-178] [SELECT 8]
                                Select [170-178] [SELECT 8]
                                  SelectList [177-178] [8]
                                    SelectColumn [177-178] [8]
                                      IntLiteral(8) [177-178] [8]
--
IF x = 2 THEN
ELSEIF x = 3 THEN IF y = 3 THEN
  ELSEIF y = 4 THEN
  ELSEIF y = 5 THEN IF z = 6 THEN
      SELECT
        6
      ;
    ELSEIF z = 7 THEN
      SELECT
        7
      ;
    ELSEIF z = 8 THEN
      SELECT
        8
      ;
    END IF ;
  END IF ;
END IF ;
==

# ERROR: Missing then keyword
IF TRUE THEN
ELSEIF TRUE SELECT 1;
END IF;
--
ERROR: Syntax error: Unexpected keyword SELECT [at 2:13]
ELSEIF TRUE SELECT 1;
            ^
==

# ERROR: Missing elseif condition
IF TRUE THEN
ELSEIF THEN SELECT 1;
END IF;
--
ERROR: Syntax error: Unexpected keyword THEN [at 2:8]
ELSEIF THEN SELECT 1;
       ^
==

# ERROR: Missing end if with elseif
IF TRUE THEN
ELSEIF TRUE THEN SELECT 1;
--
ERROR: Syntax error: Expected END IF [at 3:1]

^
==

# Use of elseif as normal identifier
DECLARE ELSEIF INT64 DEFAULT 3;
IF ELSEIF THEN SELECT 1;
ELSEIF ELSEIF THEN SELECT 2;
ELSE SELECT ELSEIF;
END IF;
--
Script [0-114] [DECLARE ELSEIF...SEIF; END IF;]
  StatementList [0-114] [DECLARE ELSEIF...SEIF; END IF;]
    VariableDeclaration [0-30] [DECLARE ELSEIF INT64 DEFAULT 3]
      IdentifierList [8-14] [ELSEIF]
        Identifier(ELSEIF) [8-14] [ELSEIF]
      SimpleType [15-20] [INT64]
        PathExpression [15-20] [INT64]
          Identifier(INT64) [15-20] [INT64]
      IntLiteral(3) [29-30] [3]
    IfStatement [32-112] [IF ELSEIF...ELSEIF; END IF]
      PathExpression [35-41] [ELSEIF]
        Identifier(ELSEIF) [35-41] [ELSEIF]
      StatementList [47-57] [SELECT 1;]
        QueryStatement [47-55] [SELECT 1]
          Query [47-55] [SELECT 1]
            Select [47-55] [SELECT 1]
              SelectList [54-55] [1]
                SelectColumn [54-55] [1]
                  IntLiteral(1) [54-55] [1]
      ElseifClauseList [57-86] [ELSEIF ELSEIF THEN SELECT 2;]
        ElseifClause [57-86] [ELSEIF ELSEIF THEN SELECT 2;]
          PathExpression [64-70] [ELSEIF]
            Identifier(ELSEIF) [64-70] [ELSEIF]
          StatementList [76-86] [SELECT 2;]
            QueryStatement [76-84] [SELECT 2]
              Query [76-84] [SELECT 2]
                Select [76-84] [SELECT 2]
                  SelectList [83-84] [2]
                    SelectColumn [83-84] [2]
                      IntLiteral(2) [83-84] [2]
      StatementList [91-106] [SELECT ELSEIF;]
        QueryStatement [91-104] [SELECT ELSEIF]
          Query [91-104] [SELECT ELSEIF]
            Select [91-104] [SELECT ELSEIF]
              SelectList [98-104] [ELSEIF]
                SelectColumn [98-104] [ELSEIF]
                  PathExpression [98-104] [ELSEIF]
                    Identifier(ELSEIF) [98-104] [ELSEIF]
--
DECLARE ELSEIF INT64 DEFAULT 3 ;
IF ELSEIF THEN
  SELECT
    1
  ;
ELSEIF ELSEIF THEN
  SELECT
    2
  ;
ELSE
  SELECT
    ELSEIF
  ;
END IF ;
