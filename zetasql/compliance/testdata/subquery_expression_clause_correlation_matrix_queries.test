# Tests for correlated and uncorrelated subquery expressions in various
# query clauses. We distinguish a total of 25 cases: 5 types of correlation
# (2 uncorrelated and 3 correlated ones) times 5 clauses (SELECT, WHERE, HAVING,
# GROUP BY, ORDER BY).
[load_proto_files=zetasql/testdata/test_schema.proto]
[load_proto_names=zetasql_test__.KitchenSinkPB, zetasql_test__.TestExtraPB, zetasql_test__.KitchenSinkPB.Nested, zetasql_test__.RepeatedHolderPB]

[prepare_database]
CREATE TABLE Table1 AS
SELECT cast(1 as int64) as primary_key,
       cast(true as bool) as bool_val, cast(0.1 as double) as double_val,
       cast(1 as int64) as int64_val, cast("1" as string) as str_val UNION ALL
  SELECT 2, false, 0.2, 2, "2"
--
ARRAY<STRUCT<primary_key INT64,
             bool_val BOOL,
             double_val DOUBLE,
             int64_val INT64,
             str_val STRING>>
[
  {1, true, 0.1, 1, "1"},
  {2, false, 0.2, 2, "2"}
]
==
[prepare_database]
CREATE TABLE Table2 AS
SELECT 1 id,
       (SELECT AS "zetasql_test__.TestExtraPB"
         1 int32_val1, ['a', 'b', 'c'] str_value) Info
UNION ALL
SELECT 2 id,
       (SELECT AS "zetasql_test__.TestExtraPB"
         2 int32_val1, ['d'] str_value) Info
--
ARRAY<STRUCT<
        id INT64,
        Info PROTO<zetasql_test__.TestExtraPB>
      >>
[{1,
  {
    int32_val1: 1
    str_value: "a"
    str_value: "b"
    str_value: "c"
  }},
 {2,
  {
    int32_val1: 2
    str_value: "d"
  }}]
==

# Scalar subquery expression in SELECT clause. Uncorrelated without FROM clause.
[name=scalar_subquery_expression_in_select_uncorrelated_without_from]
SELECT (SELECT 1)
--
ARRAY<STRUCT<INT64>>[{1}]
==

# Scalar subquery expression in SELECT clause. Uncorrelated with FROM clause.
[name=scalar_subquery_expression_in_select_uncorrelated_with_from]
SELECT (SELECT 1 FROM Table2 LIMIT 1)
--
ARRAY<STRUCT<INT64>>[{1}]

NOTE: Reference implementation reports non-determinism.
==

# Scalar subquery expression in SELECT clause. Correlated without FROM clause.
[name=scalar_subquery_expression_in_select_correlated_without_from]
SELECT (SELECT id)
FROM Table2 t
WHERE id = 1
--
ARRAY<STRUCT<INT64>>[{1}]
==

# Scalar subquery expression in SELECT clause. Correlated outside FROM clause.
[name=scalar_subquery_expression_in_select_correlated_outside_from]
SELECT (SELECT id FROM Table1 LIMIT 1)
FROM Table2 t
WHERE id = 1
--
ARRAY<STRUCT<INT64>>[{1}]

NOTE: Reference implementation reports non-determinism.
==

# Scalar subquery expression in SELECT clause. Correlated inside FROM clause.
[name=scalar_subquery_expression_in_select_correlated_inside_from]
SELECT (SELECT 1 FROM t.Info.str_value LIMIT 1)
FROM Table2 t
WHERE id = 1
--
ARRAY<STRUCT<INT64>>[{1}]

NOTE: Reference implementation reports non-determinism.
==

# Scalar subquery expression in WHERE clause. Uncorrelated without FROM clause.
[name=scalar_subquery_expression_in_where_uncorrelated_without_from]
SELECT id
FROM Table2 t
WHERE (SELECT 1) = id
--
ARRAY<STRUCT<id INT64>>[{1}]
==

# Scalar subquery expression in WHERE clause. Uncorrelated with FROM clause.
[name=scalar_subquery_expression_in_where_uncorrelated_with_from]
SELECT id
FROM Table2 t
WHERE (SELECT 1 FROM Table1 LIMIT 1) = id
--
ARRAY<STRUCT<id INT64>>[{1}]

NOTE: Reference implementation reports non-determinism.
==

# Scalar subquery expression in WHERE clause. Correlated without FROM clause.
[name=scalar_subquery_expression_in_where_correlated_without_from]
SELECT id
FROM Table2 t
WHERE (SELECT id) = 1
--
ARRAY<STRUCT<id INT64>>[{1}]
==

# Scalar subquery expression in WHERE clause. Correlated outside FROM clause.
[name=scalar_subquery_expression_in_where_correlated_outside_from]
SELECT id
FROM Table2 t
WHERE (SELECT id FROM Table1 LIMIT 1) = 1
--
ARRAY<STRUCT<id INT64>>[{1}]

NOTE: Reference implementation reports non-determinism.
==

# Scalar subquery expression in WHERE clause. Correlated inside FROM clause.
[name=scalar_subquery_expression_in_where_correlated_inside_from]
SELECT id
FROM Table2 t
WHERE (SELECT 1 FROM t.Info.str_value LIMIT 1) = id
--
ARRAY<STRUCT<id INT64>>[{1}]

NOTE: Reference implementation reports non-determinism.
==

# Scalar subquery expression in HAVING clause. Uncorrelated without FROM clause.
[name=scalar_subquery_expression_in_having_uncorrelated_without_from]
SELECT id
FROM Table2 t
GROUP BY id
HAVING (SELECT 1) = id
--
ARRAY<STRUCT<id INT64>>[{1}]
==

# Scalar subquery expression in HAVING clause. Uncorrelated with FROM clause.
[name=scalar_subquery_expression_in_having_uncorrelated_with_from]
SELECT id
FROM Table2 t
GROUP BY id
HAVING (SELECT 1 FROM Table1 LIMIT 1) = id
--
ARRAY<STRUCT<id INT64>>[{1}]

NOTE: Reference implementation reports non-determinism.
==

# Scalar subquery expression in HAVING clause. Correlated without FROM clause.
[name=scalar_subquery_expression_in_having_correlated_without_from]
SELECT id
FROM Table2 t
GROUP BY id
HAVING (SELECT id) = 1
--
ARRAY<STRUCT<id INT64>>[{1}]
==

# Scalar subquery expression in HAVING clause. Correlated outside FROM clause.
[name=scalar_subquery_expression_in_having_correlated_outside_from]
SELECT id
FROM Table2 t
GROUP BY id
HAVING (SELECT id FROM Table1 LIMIT 1) = 1
--
ARRAY<STRUCT<id INT64>>[{1}]

NOTE: Reference implementation reports non-determinism.
==

# Scalar subquery expression in HAVING clause. Correlated inside FROM clause.
[name=scalar_subquery_expression_in_having_correlated_inside_from]
SELECT id
FROM Table2 t
GROUP BY id
HAVING (SELECT * FROM UNNEST(ARRAY(SELECT id))) = 1
--
ARRAY<STRUCT<id INT64>>[{1}]
==

# Scalar subquery expression in GROUP BY clause. Uncorrelated without FROM
# clause.
[name=scalar_subquery_expression_in_group_by_uncorrelated_without_from]
SELECT 1 AS id
FROM Table2 t
GROUP BY (SELECT 1)
--
ARRAY<STRUCT<id INT64>>[{1}]
==

# Scalar subquery expression in GROUP BY clause. Uncorrelated with FROM clause.
[name=scalar_subquery_expression_in_group_by_uncorrelated_with_from]
SELECT 1 AS id
FROM Table2 t
GROUP BY (SELECT 1 FROM Table1 LIMIT 1)
--
ARRAY<STRUCT<id INT64>>[{1}]

NOTE: Reference implementation reports non-determinism.
==

# Scalar subquery expression in GROUP BY clause. Correlated without FROM clause.
[name=scalar_subquery_expression_in_group_by_correlated_without_from]
SELECT SUM(int64_val) AS sum64
FROM Table1
GROUP BY (SELECT CONCAT('_', str_val)), str_val
ORDER BY str_val
--
ARRAY<STRUCT<sum64 INT64>>[known order:{1}, {2}]
==

# Scalar subquery expression in GROUP BY clause. Correlated outside FROM clause.
[name=scalar_subquery_expression_in_group_by_correlated_outside_from]
SELECT 1 AS id
FROM Table2 t
GROUP BY (SELECT id FROM Table1 LIMIT 1)
--
ARRAY<STRUCT<id INT64>>[unknown order:{1}, {1}]

NOTE: Reference implementation reports non-determinism.
==

# Scalar subquery expression in GROUP BY clause. Correlated inside FROM clause.
[name=scalar_subquery_expression_in_group_by_correlated_inside_from]
SELECT 1 AS id
FROM Table2 t
GROUP BY (SELECT * FROM UNNEST(ARRAY(SELECT id)))
--
ARRAY<STRUCT<id INT64>>[unknown order:{1}, {1}]
==

# Scalar subquery expression in ORDER BY clause. Uncorrelated without FROM
# clause.
[name=scalar_subquery_expression_in_order_by_uncorrelated_without_from]
SELECT id
FROM Table2 t
ORDER BY (SELECT 1), id
--
ARRAY<STRUCT<id INT64>>[known order:{1}, {2}]
==

# Scalar subquery expression in ORDER BY clause. Uncorrelated with FROM clause.
[name=scalar_subquery_expression_in_order_by_uncorrelated_with_from]
SELECT id
FROM Table2 t
ORDER BY (SELECT 1 FROM Table1 LIMIT 1), id
--
ARRAY<STRUCT<id INT64>>[known order:{1}, {2}]

NOTE: Reference implementation reports non-determinism.
==

# Scalar subquery expression in ORDER BY clause. Correlated without FROM clause.
[name=scalar_subquery_expression_in_order_by_correlated_without_from]
SELECT id
FROM Table2 t
ORDER BY (SELECT id)
--
ARRAY<STRUCT<id INT64>>[known order:{1}, {2}]
==

# Scalar subquery expression in ORDER BY clause. Correlated outside FROM clause.
[name=scalar_subquery_expression_in_order_by_correlated_outside_from]
SELECT id
FROM Table2 t
ORDER BY (SELECT id FROM Table1 LIMIT 1)
--
ARRAY<STRUCT<id INT64>>[known order:{1}, {2}]

NOTE: Reference implementation reports non-determinism.
==

# Scalar subquery expression in ORDER BY clause. Correlated inside FROM clause.
[name=scalar_subquery_expression_in_order_by_correlated_inside_from]
SELECT id
FROM Table2 t
ORDER BY (SELECT 1 FROM t.Info.str_value LIMIT 1), id
--
ARRAY<STRUCT<id INT64>>[known order:{1}, {2}]

NOTE: Reference implementation reports non-determinism.
==

# Array subquery expression in SELECT clause. Uncorrelated without FROM clause.
[name=array_subquery_expression_in_select_uncorrelated_without_from]
SELECT ARRAY(SELECT * FROM UNNEST([1, 2]))
--
ARRAY<STRUCT<ARRAY<>>>[{ARRAY<INT64>[unknown order:1, 2]}]
==

# Array subquery expression in SELECT clause. Uncorrelated with FROM clause.
[name=array_subquery_expression_in_select_uncorrelated_with_from]
SELECT ARRAY(SELECT int64_val FROM Table1 ORDER BY int64_val)
--
ARRAY<STRUCT<ARRAY<>>>[{ARRAY<INT64>[known order:1, 2]}]
==

# Array subquery expression in SELECT clause. Correlated without FROM clause.
[name=array_subquery_expression_in_select_correlated_without_from]
SELECT ARRAY(SELECT id)
FROM Table2 t
ORDER BY id
--
ARRAY<STRUCT<ARRAY<>>>[known order:{ARRAY<INT64>[1]}, {ARRAY<INT64>[2]}]
==

# Array subquery expression in SELECT clause. Correlated outside FROM clause.
[name=array_subquery_expression_in_select_correlated_outside_from]
SELECT ARRAY(SELECT id FROM Table1)
FROM Table2 t
ORDER BY id
--
ARRAY<STRUCT<ARRAY<>>>[known order:
  {ARRAY<INT64>[unknown order:1, 1]},
  {ARRAY<INT64>[unknown order:2, 2]}
]
==

# Array subquery expression in SELECT clause. Correlated inside FROM clause.
[name=array_subquery_expression_in_select_correlated_inside_from]
SELECT ARRAY(SELECT id FROM t.Info.str_value)
FROM Table2 t
ORDER BY id
--
ARRAY<STRUCT<ARRAY<>>>[known order:
  {ARRAY<INT64>[unknown order:1, 1, 1]},
  {ARRAY<INT64>[2]}
]
==

# Array subquery expression in WHERE clause. Uncorrelated without FROM clause.
[name=array_subquery_expression_in_where_uncorrelated_without_from]
SELECT id
FROM Table2 t
WHERE ARRAY_LENGTH(ARRAY(SELECT * FROM UNNEST([1, 2]))) = id
--
ARRAY<STRUCT<id INT64>>[{2}]
==

# Array subquery expression in WHERE clause. Uncorrelated with FROM clause.
[name=array_subquery_expression_in_where_uncorrelated_with_from]
SELECT id
FROM Table2 t
WHERE ARRAY_LENGTH(ARRAY(SELECT int64_val FROM Table1)) = id
--
ARRAY<STRUCT<id INT64>>[{2}]
==

# Array subquery expression in WHERE clause. Correlated without FROM clause.
[name=array_subquery_expression_in_where_correlated_without_from]
SELECT id
FROM Table2 t
WHERE ARRAY_LENGTH(ARRAY(SELECT id)) = id
--
ARRAY<STRUCT<id INT64>>[{1}]
==

# Array subquery expression in WHERE clause. Correlated outside FROM clause.
[name=array_subquery_expression_in_where_correlated_outside_from]
SELECT id
FROM Table2 t
WHERE ARRAY_LENGTH(ARRAY(SELECT id FROM Table1)) = id
--
ARRAY<STRUCT<id INT64>>[{2}]
==

# Array subquery expression in WHERE clause. Correlated inside FROM clause.
[name=array_subquery_expression_in_where_correlated_inside_from]
SELECT id
FROM Table2 t
WHERE ARRAY_LENGTH(ARRAY(SELECT id FROM t.Info.str_value)) > id
--
ARRAY<STRUCT<id INT64>>[{1}]
==

# Array subquery expression in HAVING clause. Uncorrelated without FROM clause.
[name=array_subquery_expression_in_having_uncorrelated_without_from]
SELECT id
FROM Table2 t
GROUP BY id
HAVING ARRAY_LENGTH(ARRAY(SELECT * FROM UNNEST([1, 2]))) = id
--
ARRAY<STRUCT<id INT64>>[{2}]
==

# Array subquery expression in HAVING clause. Uncorrelated with FROM clause.
[name=array_subquery_expression_in_having_uncorrelated_with_from]
SELECT id
FROM Table2 t
GROUP BY id
HAVING ARRAY_LENGTH(ARRAY(SELECT int64_val FROM Table1)) = id
--
ARRAY<STRUCT<id INT64>>[{2}]
==

# Array subquery expression in HAVING clause. Correlated without FROM clause.
[name=array_subquery_expression_in_having_correlated_without_from]
SELECT id
FROM Table2 t
GROUP BY id
HAVING ARRAY_LENGTH(ARRAY(SELECT id)) = id
--
ARRAY<STRUCT<id INT64>>[{1}]
==

# Array subquery expression in HAVING clause. Correlated outside FROM clause.
[name=array_subquery_expression_in_having_correlated_outside_from]
SELECT id
FROM Table2 t
GROUP BY id
HAVING ARRAY_LENGTH(ARRAY(SELECT id FROM Table1)) = id
--
ARRAY<STRUCT<id INT64>>[{2}]
==

# Array subquery expression in HAVING clause. Correlated inside FROM clause.
[name=array_subquery_expression_in_having_correlated_inside_from]
SELECT id
FROM Table2 t
GROUP BY id
HAVING ARRAY(SELECT * FROM UNNEST(ARRAY(SELECT id)))[OFFSET(0)] = 1
--
ARRAY<STRUCT<id INT64>>[{1}]
==

# Array subquery expression in GROUP BY clause. Uncorrelated without FROM
# clause.
[name=array_subquery_expression_in_group_by_uncorrelated_without_from]
SELECT 1 AS id
FROM Table2 t
GROUP BY ARRAY_LENGTH(ARRAY(SELECT * FROM UNNEST([1, 2, 3])))
--
ARRAY<STRUCT<id INT64>>[{1}]
==

# Array subquery expression in GROUP BY clause. Uncorrelated with FROM clause.
[name=array_subquery_expression_in_group_by_uncorrelated_with_from]
SELECT 1 AS id
FROM Table2 t
GROUP BY ARRAY_LENGTH(ARRAY(SELECT int64_val FROM Table1))
--
ARRAY<STRUCT<id INT64>>[{1}]
==

# Array subquery expression in GROUP BY clause. Correlated without FROM clause.
[name=array_subquery_expression_in_group_by_correlated_without_from]
SELECT 1 AS id
FROM Table2 t
GROUP BY ARRAY(SELECT id)[OFFSET(0)]
--
ARRAY<STRUCT<id INT64>>[unknown order:{1}, {1}]
==

# Array subquery expression in GROUP BY clause. Correlated outside FROM clause.
[name=array_subquery_expression_in_group_by_correlated_outside_from]
SELECT 1 AS id
FROM Table2 t
GROUP BY ARRAY(SELECT id FROM Table1)[OFFSET(1)]
--
ARRAY<STRUCT<id INT64>>[unknown order:{1}, {1}]

NOTE: Reference implementation reports non-determinism.
==

# Array subquery expression in GROUP BY clause. Correlated inside FROM clause.
[name=array_subquery_expression_in_group_by_correlated_inside_from]
SELECT 1 AS id
FROM Table2 t
GROUP BY ARRAY(SELECT * FROM UNNEST(ARRAY(SELECT id)))[OFFSET(0)]
--
ARRAY<STRUCT<id INT64>>[unknown order:{1}, {1}]
==

# Array subquery expression in ORDER BY clause. Uncorrelated without FROM
# clause.
[name=array_subquery_expression_in_order_by_uncorrelated_without_from]
SELECT id
FROM Table2 t
ORDER BY ARRAY_LENGTH(ARRAY(SELECT * FROM UNNEST([1, 2, 3]))), id
--
ARRAY<STRUCT<id INT64>>[known order:{1}, {2}]
==

# Array subquery expression in ORDER BY clause. Uncorrelated with FROM clause.
[name=array_subquery_expression_in_order_by_uncorrelated_with_from]
SELECT id
FROM Table2 t
ORDER BY ARRAY_LENGTH(ARRAY(SELECT int64_val FROM Table1)) > id
--
ARRAY<STRUCT<id INT64>>[known order:{2}, {1}]
==

# Array subquery expression in ORDER BY clause. Correlated without FROM clause.
[name=array_subquery_expression_in_order_by_correlated_without_from]
SELECT id
FROM Table2 t
ORDER BY ARRAY(SELECT id)[OFFSET(0)] DESC
--
ARRAY<STRUCT<id INT64>>[known order:{2}, {1}]
==

# Array subquery expression in ORDER BY clause. Correlated outside FROM clause.
[name=array_subquery_expression_in_order_by_correlated_outside_from]
SELECT id
FROM Table2 t
ORDER BY ARRAY(SELECT id FROM Table1)[OFFSET(1)]
--
ARRAY<STRUCT<id INT64>>[known order:{1}, {2}]

NOTE: Reference implementation reports non-determinism.
==

# Array subquery expression in ORDER BY clause. Correlated inside FROM clause.
[name=array_subquery_expression_in_order_by_correlated_inside_from]
SELECT id, ARRAY_LENGTH(ARRAY(SELECT s FROM t.Info.str_value s)) AS size
FROM Table2 t
ORDER BY ARRAY_LENGTH(ARRAY(SELECT s FROM t.Info.str_value s)) DESC
LIMIT 10
--
ARRAY<STRUCT<id INT64, size INT64>>[known order:{1, 3}, {2, 1}]
