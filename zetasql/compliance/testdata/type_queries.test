[name=type_1]
SELECT cast(1 as INT32) int32_val
--
ARRAY<STRUCT<int32_val INT32>>[{1}]
==
[name=type_2]
SELECT cast(2 as INT64) int64_val
--
ARRAY<STRUCT<int64_val INT64>>[{2}]
==
[name=type_3]
SELECT cast(3 as UINT32) uint32_val
--
ARRAY<STRUCT<uint32_val UINT32>>[{3}]
==
[name=type_4]
SELECT cast(4 as UINT64) uint64_val
--
ARRAY<STRUCT<uint64_val UINT64>>[{4}]
==
[name=type_5]
SELECT cast(true as BOOL) bool_val
--
ARRAY<STRUCT<bool_val BOOL>>[{true}]
==
[name=type_6]
SELECT cast(6 as FLOAT) float_val
--
ARRAY<STRUCT<float_val FLOAT>>[{6}]
==
[name=type_7]
SELECT cast(7 as DOUBLE) double_val
--
ARRAY<STRUCT<double_val DOUBLE>>[{7}]
==
[name=type_8]
SELECT cast("8" as STRING) string_val
--
ARRAY<STRUCT<string_val STRING>>[{"8"}]
==
[name=type_9]
SELECT cast(b"9" as BYTES) bytes_val
--
ARRAY<STRUCT<bytes_val BYTES>>[{b"9"}]
==
[name=type_10]
SELECT DATE '2014-07-18' date_val
--
ARRAY<STRUCT<date_val DATE>>[{2014-07-18}]
==
[name=type_13]
SELECT TIMESTAMP "2014-07-18 00:00:00.000013 UTC" ts_micros_val
--
ARRAY<STRUCT<ts_micros_val TIMESTAMP>>[{2014-07-18 00:00:00.000013+00}]
==
[name=type_15]
SELECT [16, 16.25, 16.5, 16.75] array_val
--
ARRAY<STRUCT<array_val ARRAY<>>>[
  {ARRAY<DOUBLE>[known order:16, 16.25, 16.5, 16.75]}
]
==
[name=type_16]
SELECT (SELECT AS STRUCT 17 x, 17.5 y) struct_val
--
ARRAY<STRUCT<struct_val STRUCT<x INT64, y DOUBLE>>>[{{17, 17.5}}]
==
# Conditionals are used to avoid introducing a CAST when producing a NULL value
# of a particular output type.
[name=type_17]
SELECT IF(FALSE, CAST(1 AS INT32), NULL) int32_val
--
ARRAY<STRUCT<int32_val INT32>>[{NULL}]
==
[name=type_18]
SELECT IF(FALSE, CAST(2 AS INT64), NULL) int64_val
--
ARRAY<STRUCT<int64_val INT64>>[{NULL}]
==
[name=type_19]
SELECT IF(FALSE, CAST(3 AS UINT32), NULL) uint32_val
--
ARRAY<STRUCT<uint32_val UINT32>>[{NULL}]
==
[name=type_20]
SELECT IF(FALSE, CAST(4 AS UINT64), NULL) uint64_val
--
ARRAY<STRUCT<uint64_val UINT64>>[{NULL}]
==
[name=type_21]
SELECT IF(FALSE, cast(true as bool), NULL) bool_val
--
ARRAY<STRUCT<bool_val BOOL>>[{NULL}]
==
[name=type_22]
SELECT IF(FALSE, CAST(6 AS FLOAT), NULL) float_val
--
ARRAY<STRUCT<float_val FLOAT>>[{NULL}]
==
[name=type_23]
SELECT IF(FALSE, CAST(7 AS DOUBLE), NULL) double_val
--
ARRAY<STRUCT<double_val DOUBLE>>[{NULL}]
==
[name=type_24]
SELECT IF(FALSE, CAST("8" AS STRING), NULL) string_val
--
ARRAY<STRUCT<string_val STRING>>[{NULL}]
==
[name=type_25]
SELECT IF(FALSE, CAST(b"9" AS BYTES), NULL) bytes_val
--
ARRAY<STRUCT<bytes_val BYTES>>[{NULL}]
==
[name=type_26]
SELECT IF(FALSE, DATE '2014-07-18', NULL) date_val
--
ARRAY<STRUCT<date_val DATE>>[{NULL}]
==
[name=type_29]
SELECT IF(FALSE, TIMESTAMP "2014-07-18 00:00:00.000013 UTC", NULL)
  ts_micros_val
--
ARRAY<STRUCT<ts_micros_val TIMESTAMP>>[{NULL}]
==
[name=type_31]
SELECT IF(FALSE, [16], NULL) array_val
--
ARRAY<STRUCT<array_val ARRAY<>>>[{ARRAY<INT64>(NULL)}]
==
[name=type_32]
SELECT IF(FALSE, (SELECT AS STRUCT 17 x, 17.5 y), NULL) struct_val
--
ARRAY<STRUCT<struct_val STRUCT<x INT64, y DOUBLE>>>[{NULL}]
==
# Tests for ARRAY<type>
[name=type_33]
SELECT [1, 4, 9, NULL, 10] non_empty_array
--
ARRAY<STRUCT<non_empty_array ARRAY<>>>[
  {ARRAY<INT64>[known order:1, 4, 9, NULL, 10]}
]
==
[name=type_34]
SELECT [NULL, CAST(1 AS INT32), CAST(2 AS INT32), CAST(-1 AS INT32)] int32_val
--
ARRAY<STRUCT<int32_val ARRAY<>>>[{ARRAY<INT32>[known order:NULL, 1, 2, -1]}]
==
[name=type_35]
SELECT [CAST(5 AS INT64), NULL] int64_val
--
ARRAY<STRUCT<int64_val ARRAY<>>>[{ARRAY<INT64>[known order:5, NULL]}]
==
[name=type_36]
SELECT [NULL, CAST(3 AS UINT32), CAST(4 AS UINT32)] uint32_val
--
ARRAY<STRUCT<uint32_val ARRAY<>>>[{ARRAY<UINT32>[known order:NULL, 3, 4]}]
==
[name=type_37]
SELECT [CAST(4 AS UINT64), NULL, CAST(0 AS UINT64), CAST(2 AS UINT64)] uint64_val
--
ARRAY<STRUCT<uint64_val ARRAY<>>>[{ARRAY<UINT64>[known order:4, NULL, 0, 2]}]
==
[name=type_38]
SELECT [true, NULL, false, true] bool_val
--
ARRAY<STRUCT<bool_val ARRAY<>>>[
  {ARRAY<BOOL>[known order:true, NULL, false, true]}
]
==
[name=type_39]
SELECT [CAST(6 AS FLOAT), CAST(2 AS FLOAT), NULL] float_val
--
ARRAY<STRUCT<float_val ARRAY<>>>[{ARRAY<FLOAT>[known order:6, 2, NULL]}]
==
[name=type_40]
SELECT [CAST(7 AS DOUBLE), NULL, CAST(3.14 AS DOUBLE)] double_val
--
ARRAY<STRUCT<double_val ARRAY<>>>[{ARRAY<DOUBLE>[known order:7, NULL, 3.14]}]
==
[name=type_41]
SELECT [CAST("8" AS STRING), NULL, CAST("zetasql" AS STRING)] string_val
--
ARRAY<STRUCT<string_val ARRAY<>>>[
  {ARRAY<STRING>[known order:"8", NULL, "zetasql"]}
]
==
[name=type_42]
SELECT [NULL, CAST(b"9" AS BYTES)] bytes_val
--
ARRAY<STRUCT<bytes_val ARRAY<>>>[{ARRAY<BYTES>[known order:NULL, b"9"]}]
==
[name=type_43]
SELECT [DATE '2014-07-23', NULL, DATE '2014-07-18', NULL] date_val
--
ARRAY<STRUCT<date_val ARRAY<>>>[
  {ARRAY<DATE>[known order:2014-07-23, NULL, 2014-07-18, NULL]}
]
==
[name=type_46]
SELECT [NULL, TIMESTAMP "2014-07-18 00:00:00.000013 UTC"] ts_micros_val
--
ARRAY<STRUCT<ts_micros_val ARRAY<>>>[
  {ARRAY<TIMESTAMP>[known order:
     NULL,
     2014-07-18 00:00:00.000013+00
   ]}
]
==
[name=type_48]
SELECT ARRAY(SELECT AS STRUCT [1, 2, NULL] x, [NULL, "y"] y) array_val
--
ARRAY<STRUCT<array_val ARRAY<>>>[
  {ARRAY<STRUCT<x ARRAY<>, y ARRAY<>>>[
     {
       ARRAY<INT64>[known order:1, 2, NULL],
       ARRAY<STRING>[known order:NULL, "y"]
     }
   ]}
]
==
[name=type_49]
SELECT [(SELECT AS STRUCT 17 x, 17.5 y), (SELECT AS STRUCT NULL x, 17.75 y), NULL] struct_val
--
ARRAY<STRUCT<struct_val ARRAY<>>>[
  {
    ARRAY<STRUCT<x INT64, y DOUBLE>>[known order:{17, 17.5}, {NULL, 17.75}, NULL]
  }
]
==
# Struct of simple types
[name=type_50]
SELECT (
  SELECT AS STRUCT
  CAST(0 AS INT32) int32_val,
  CAST(1 AS INT64) int64_val,
  CAST(2 AS UINT32) uint32_val,
  CAST(3 AS UINT64) uint64_val,
  cast(false as bool) bool_val,
  CAST("8" AS STRING) string_val,
  CAST(b"9" AS BYTES) bytes_val) struct_val
--
ARRAY<STRUCT<struct_val STRUCT<int32_val INT32,
                         int64_val INT64,
                         uint32_val UINT32,
                         uint64_val UINT64,
                         bool_val BOOL,
                         string_val STRING,
                         bytes_val BYTES>>>[{{0, 1, 2, 3, false, "8", b"9"}}]
==
# Struct of date and timestamp types
[name=type_51]
SELECT (
  SELECT AS STRUCT
  DATE '2014-07-18' date_val,
  TIMESTAMP "2014-07-18 00:00:00.000013 UTC" ts_micros_val)
    struct_val
--
ARRAY<STRUCT<struct_val STRUCT<
                    date_val DATE,
                    ts_micros_val TIMESTAMP
                  >>>
[{{
    2014-07-18,
    2014-07-18 00:00:00.000013+00
  }}]
