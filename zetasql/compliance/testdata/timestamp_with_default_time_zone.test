# This file was originally copied from timestamp.test, but instead of using a
# default time zone of 'America/Los_Angeles' it uses a default time zone of
# '+00'.  Note that TIMESTAMPs render in the results using time zone '+00',
# so it is easy to see the results are as expected.
#
# The "timestamp_type_and_functions" label applies to all queries in this
# file related to the ZetaSQL V1 TIMESTAMP type.
#
# TODO: Once we can set the default time zone anywhere in the
# file, then merge timestamp_with_default_time_zone_2.test into this file
# and show side-by-side how changing the default time zone affects the
# results of queries.
#
# TODO: Support a default default_time_zone correctly, i.e.,
# [default default_time_zone=...], like we do other configuration settings,
# and make [default_time_zone=...] be specific to the query it is part of.
# Right now, [default_time_zone=...] acts like the default default (applies
# to all queries after it).
[default_time_zone=+00]
[default global_labels=timestamp_type_and_functions,different_default_time_zone]

[load_proto_files=zetasql/testdata/test_schema.proto]
[load_proto_names=zetasql_test__.KitchenSinkPB]
[load_enum_names=zetasql_test__.TestEnum]

[prepare_database]
CREATE TABLE TzTable1 AS
SELECT timestamp '2014-12-01' as timestamp_val
--
ARRAY<STRUCT<timestamp_val TIMESTAMP>>[{2014-12-01 00:00:00+00}]
==

[prepare_database]
CREATE TABLE EpochTable AS
SELECT timestamp '1970-01-01 00:00:00+00' as timestamp_column,
       '1970-01-01 00:00:00+00' as string_with_timezone_column,
       '1970-01-01 00:00:00' as string_without_timezone_column
--
ARRAY<STRUCT<
        timestamp_column TIMESTAMP,
        string_with_timezone_column STRING,
        string_without_timezone_column STRING
      >>
[{
   1970-01-01 00:00:00+00,
   "1970-01-01 00:00:00+00",
   "1970-01-01 00:00:00"
 }]
==

[prepare_database]
CREATE TABLE TzTable2 AS
SELECT timestamp '1970-01-01 00:00:00.000000+00' as timestamp_val
union all
SELECT timestamp '1970-01-01 00:00:00.000001+00' as timestamp_val
union all
SELECT timestamp '1970-01-01 00:00:00.000010+00' as timestamp_val
union all
SELECT timestamp '1970-01-01 00:00:00.000100+00' as timestamp_val
union all
SELECT timestamp '1970-01-01 00:00:00.001000+00' as timestamp_val
union all
SELECT timestamp '1970-01-01 00:00:00.010000+00' as timestamp_val
union all
SELECT timestamp '1970-01-01 00:00:00.100000+00' as timestamp_val
union all
SELECT timestamp '1970-01-01 00:00:01.000000+00' as timestamp_val
--
ARRAY<STRUCT<timestamp_val TIMESTAMP>>[
  {1970-01-01 00:00:00+00},
  {1970-01-01 00:00:00.000001+00},
  {1970-01-01 00:00:00.000010+00},
  {1970-01-01 00:00:00.000100+00},
  {1970-01-01 00:00:00.001+00},
  {1970-01-01 00:00:00.010+00},
  {1970-01-01 00:00:00.100+00},
  {1970-01-01 00:00:01+00}
]
==

[name=timestamp_type_1]
SELECT timestamp '2014-12-01'
--
ARRAY<STRUCT<TIMESTAMP>>[{2014-12-01 00:00:00+00}]
==

[name=timestamp_type_2]
SELECT timestamp_val
FROM TzTable1
--
ARRAY<STRUCT<timestamp_val TIMESTAMP>>[{2014-12-01 00:00:00+00}]
==

[name=timestamp_diff_1]
SELECT timestamp_diff(timestamp1, timestamp2, HOUR)
from (select timestamp '2014-12-25' as timestamp1,
             timestamp '2014-12-25' as timestamp2)
--
ARRAY<STRUCT<INT64>>[{0}]
==

[name=timestamp_diff_2]
SELECT timestamp_diff(timestamp '2014-12-26', timestamp1, HOUR)
from (select timestamp '2014-12-25' as timestamp1)
--
ARRAY<STRUCT<INT64>>[{24}]
==

[name=timestamp_to_string_1]
select [cast(timestamp '2015-01-28' as string),
        cast(timestamp "2015-01-28 00:00:00" as string),
        cast(timestamp "2015-01-28 00:00:00.0" as string),
        cast(timestamp "2015-01-28 00:00:00.00" as string),
        cast(timestamp "2015-01-28 00:00:00.000" as string),
        cast(timestamp "2015-01-28 00:00:00.0000" as string),
        cast(timestamp "2015-01-28 00:00:00.00000" as string),
        cast(timestamp "2015-01-28 00:00:00.000000" as string)]
--
ARRAY<STRUCT<ARRAY<>>>[
  {ARRAY<STRING>[known order:
     "2015-01-28 00:00:00+00",
     "2015-01-28 00:00:00+00",
     "2015-01-28 00:00:00+00",
     "2015-01-28 00:00:00+00",
     "2015-01-28 00:00:00+00",
     "2015-01-28 00:00:00+00",
     "2015-01-28 00:00:00+00",
     "2015-01-28 00:00:00+00"
   ]}
]
==

[name=timestamp_to_string_2]
select [cast(timestamp "2015-01-28 00:00:00" as string),
        cast(timestamp "2015-01-28 00:00:00.1" as string),
        cast(timestamp "2015-01-28 00:00:00.01" as string),
        cast(timestamp "2015-01-28 00:00:00.001" as string),
        cast(timestamp "2015-01-28 00:00:00.0001" as string),
        cast(timestamp "2015-01-28 00:00:00.00001" as string),
        cast(timestamp "2015-01-28 00:00:00.000001" as string)]
--
ARRAY<STRUCT<ARRAY<>>>[
  {ARRAY<STRING>[known order:
     "2015-01-28 00:00:00+00",
     "2015-01-28 00:00:00.100+00",
     "2015-01-28 00:00:00.010+00",
     "2015-01-28 00:00:00.001+00",
     "2015-01-28 00:00:00.000100+00",
     "2015-01-28 00:00:00.000010+00",
     "2015-01-28 00:00:00.000001+00"
   ]}
]
==

[name=timestamp_to_string_3]
select cast(timestamp_val as string)
from TzTable2
--
ARRAY<STRUCT<STRING>>[unknown order:
  {"1970-01-01 00:00:00.000001+00"},
  {"1970-01-01 00:00:00.000100+00"},
  {"1970-01-01 00:00:00.010+00"},
  {"1970-01-01 00:00:01+00"},
  {"1970-01-01 00:00:00+00"},
  {"1970-01-01 00:00:00.000010+00"},
  {"1970-01-01 00:00:00.001+00"},
  {"1970-01-01 00:00:00.100+00"}
]
==

[name=literal_string_without_timezone_to_timestamp_1]
select cast("2014-12-01 12:34:56" as timestamp)
--
ARRAY<STRUCT<TIMESTAMP>>[{2014-12-01 12:34:56+00}]
==

[name=literal_string_with_timezone_to_timestamp_1]
select cast("2014-12-01 12:34:56+07:30" as timestamp)
--
ARRAY<STRUCT<TIMESTAMP>>[{2014-12-01 05:04:56+00}]
==

[name=epoch_casts_between_string_and_timestamp]
select timestamp_column, cast(timestamp_column as string),
       string_with_timezone_column,
       cast(string_with_timezone_column as timestamp),
       string_without_timezone_column,
       cast(string_without_timezone_column as timestamp)
from EpochTable
--
ARRAY<STRUCT<
        timestamp_column TIMESTAMP,
        STRING,
        string_with_timezone_column STRING,
        TIMESTAMP,
        string_without_timezone_column STRING,
        TIMESTAMP
      >>
[{
   1970-01-01 00:00:00+00,
   "1970-01-01 00:00:00+00",
   "1970-01-01 00:00:00+00",
   1970-01-01 00:00:00+00,
   "1970-01-01 00:00:00",
   1970-01-01 00:00:00+00
 }]

==

# Ideally this would be in GetFunctionTestsDateFromTimestamp() alongside the
# other tests for timestamp -> date conversion, but the code-based compliance
# tests do not support setting the default timezone.
[name=date_from_timestamp]
select date(timestamp('2014-01-31 18:12:34'))
--
ARRAY<STRUCT<DATE>>[{2014-01-31}]
==

# Ideally this would be in GetFunctionTestsTimestampFromDate() alongside the
# other tests for date -> timestamp conversion, but the code-based compliance
# tests do not support setting the default timezone.
[name=timestamp_from_date]
select timestamp(date '2014-01-31')
--
ARRAY<STRUCT<TIMESTAMP>>[{2014-01-31 00:00:00+00}]
==

[name=timestamp_trunc]
select
  timestamp_trunc('2000-02-03 04:05:06.789', SECOND),
  timestamp_trunc('2000-02-03 04:05:06.789', MINUTE),
  timestamp_trunc('2000-02-03 04:05:06.789', HOUR),
  timestamp_trunc('2000-02-03 04:05:06.789', DAY),
  timestamp_trunc('2000-02-03 04:05:06.789', MONTH),
  timestamp_trunc('2000-02-03 04:05:06.789', YEAR)
--
ARRAY<STRUCT<TIMESTAMP, TIMESTAMP, TIMESTAMP, TIMESTAMP, TIMESTAMP, TIMESTAMP>>[
  {
    2000-02-03 04:05:06+00,
    2000-02-03 04:05:00+00,
    2000-02-03 04:00:00+00,
    2000-02-03 00:00:00+00,
    2000-02-01 00:00:00+00,
    2000-01-01 00:00:00+00
  }
]
==

[required_features=TIME_BUCKET_FUNCTIONS,INTERVAL_TYPE]
[name=timestamp_bucket]
select
  timestamp_bucket(ts, INTERVAL '0.0005' SECOND),
  timestamp_bucket(ts, INTERVAL '0.1' SECOND),
  timestamp_bucket(ts, INTERVAL 15 SECOND),
  timestamp_bucket(ts, INTERVAL 20 MINUTE),
  timestamp_bucket(ts, INTERVAL 3 HOUR),
  timestamp_bucket(ts, INTERVAL 7 DAY)
from (select timestamp '2020-02-15 14:57:39.646565' ts)
--
ARRAY<STRUCT<TIMESTAMP, TIMESTAMP, TIMESTAMP, TIMESTAMP, TIMESTAMP, TIMESTAMP>>[
  {
    2020-02-15 14:57:39.646500+00,
    2020-02-15 14:57:39.600+00,
    2020-02-15 14:57:30+00,
    2020-02-15 14:40:00+00,
    2020-02-15 12:00:00+00,
    2020-02-09 00:00:00+00
  }
]
==

[required_features=TIME_BUCKET_FUNCTIONS,INTERVAL_TYPE]
[name=timestamp_bucket_custom_origin]
select
  timestamp_bucket(ts, INTERVAL '0.0005' SECOND, origin),
  timestamp_bucket(ts, INTERVAL '0.1' SECOND, origin),
  timestamp_bucket(ts, INTERVAL 15 SECOND, origin),
  timestamp_bucket(ts, INTERVAL 20 MINUTE, origin),
  timestamp_bucket(ts, INTERVAL 3 HOUR, origin),
  timestamp_bucket(ts, INTERVAL 7 DAY, origin)
from (select timestamp '2020-02-15 14:57:39.646565' ts,
             timestamp '2150-12-11 07:00:00' origin)
--
ARRAY<STRUCT<TIMESTAMP, TIMESTAMP, TIMESTAMP, TIMESTAMP, TIMESTAMP, TIMESTAMP>>[
  {
    2020-02-15 14:57:39.646500+00,
    2020-02-15 14:57:39.600+00,
    2020-02-15 14:57:30+00,
    2020-02-15 14:40:00+00,
    2020-02-15 13:00:00+00,
    2020-02-14 07:00:00+00
  }
]
==

[required_features=TIME_BUCKET_FUNCTIONS,INTERVAL_TYPE,TIMESTAMP_NANOS]
[name=timestamp_bucket_nanos]
select
  timestamp_bucket('2020-02-15 14:57:39.123456789',
                   INTERVAL '0.000000005' SECOND),
  timestamp_bucket('2020-02-15 14:57:39', INTERVAL 7 DAY,
                   '2100-01-12 07:31:55.123456789')
--
ARRAY<STRUCT<TIMESTAMP, TIMESTAMP>>[
  {
    2020-02-15 14:57:39.123456785+00,
    2020-02-11 07:31:55.123456789+00
  }
]
==

[required_features=TIME_BUCKET_FUNCTIONS,INTERVAL_TYPE,V_1_2_CIVIL_TIME,V_1_3_EXTENDED_DATE_TIME_SIGNATURES]
[name=timestamp_in_datetime_bucket]
select
  datetime_bucket(ts, INTERVAL 7 DAY),
  datetime_bucket(ts, INTERVAL 7 DAY, timestamp '2150-12-11 07:00:00')
from (select timestamp '2020-02-15 14:57:39.646565' ts)
--
ARRAY<STRUCT<TIMESTAMP, TIMESTAMP>>[
  {
    2020-02-09 00:00:00+00,
    2020-02-14 07:00:00+00
  }
]
==

[required_features=TIME_BUCKET_FUNCTIONS,INTERVAL_TYPE,V_1_3_EXTENDED_DATE_TIME_SIGNATURES]
[name=timestamp_in_date_bucket]
select
  date_bucket(ts, INTERVAL 7 DAY),
  date_bucket(ts, INTERVAL 7 DAY, timestamp '2150-12-11 07:00:00')
from (select timestamp '2020-02-15 14:57:39.646565' ts)
--
ARRAY<STRUCT<TIMESTAMP, TIMESTAMP>>[
  {
    2020-02-09 00:00:00+00,
    2020-02-14 07:00:00+00
  }
]
