#
# Create tables
#
[load_proto_files=zetasql/testdata/test_schema.proto]
[load_proto_names=zetasql_test__.KitchenSinkPB]
[load_enum_names=zetasql_test__.TestEnum]

[prepare_database]
CREATE TABLE TableDistincts AS
SELECT cast(1 as int64) as primary_key,
       cast(1 as int64) as distinct_1, cast(1 as int64) as distinct_2,
       cast(1 as int64) as distinct_4, cast(1 as int64) as distinct_8,
       cast(1 as int64) as distinct_16, cast(1 as int64) as distinct_2B,
       cast(1 as int64) as distinct_4B UNION ALL
  SELECT 2, 1, 2, 2, 2, 2, 1, 1 UNION ALL
  SELECT 3, 1, 1, 3, 3, 3,  1, 1 UNION ALL
  SELECT 4, 1, 2, 4, 4, 4,  1, 1 UNION ALL
  SELECT 5, 1, 1, 1, 5, 5,  1, 2 UNION ALL
  SELECT 6, 1, 2, 2, 6, 6,  1, 2 UNION ALL
  SELECT 7, 1, 1, 3, 7, 7,  1, 2 UNION ALL
  SELECT 8, 1, 2, 4, 8, 8,  1, 2 UNION ALL
  SELECT 9, 1, 1, 1, 1, 9,  2, 3 UNION ALL
  SELECT 10, 1, 2, 2, 2, 10, 2, 3 UNION ALL
  SELECT 11, 1, 1, 3, 3, 11, 2, 3 UNION ALL
  SELECT 12, 1, 2, 4, 4, 12, 2, 3 UNION ALL
  SELECT 13, 1, 1, 1, 5, 13, 2, 4 UNION ALL
  SELECT 14, 1, 2, 2, 6, 14, 2, 4 UNION ALL
  SELECT 15, 1, 1, 3, 7, 15, 2, 4 UNION ALL
  SELECT 16, 1, 2, 4, 8, 16, 2, 4
--
ARRAY<STRUCT<primary_key INT64,
             distinct_1 INT64,
             distinct_2 INT64,
             distinct_4 INT64,
             distinct_8 INT64,
             distinct_16 INT64,
             distinct_2B INT64,
             distinct_4B INT64>>
[
  {1, 1, 1, 1, 1, 1, 1, 1},
  {2, 1, 2, 2, 2, 2, 1, 1},
  {3, 1, 1, 3, 3, 3, 1, 1},
  {4, 1, 2, 4, 4, 4, 1, 1},
  {5, 1, 1, 1, 5, 5, 1, 2},
  {6, 1, 2, 2, 6, 6, 1, 2},
  {7, 1, 1, 3, 7, 7, 1, 2},
  {8, 1, 2, 4, 8, 8, 1, 2},
  {9, 1, 1, 1, 1, 9, 2, 3},
  {10, 1, 2, 2, 2, 10, 2, 3},
  {11, 1, 1, 3, 3, 11, 2, 3},
  {12, 1, 2, 4, 4, 12, 2, 3},
  {13, 1, 1, 1, 5, 13, 2, 4},
  {14, 1, 2, 2, 6, 14, 2, 4},
  {15, 1, 1, 3, 7, 15, 2, 4},
  {16, 1, 2, 4, 8, 16, 2, 4}
]
==
[prepare_database]
CREATE TABLE TableAllNull AS
SELECT cast(1 as int64) as primary_key,
       cast(null as bool) as bool_val, cast(null as double) as double_val,
       cast(null as int64) as int64_val, cast(null as string) as str_val
--
ARRAY<STRUCT<primary_key INT64,
             bool_val BOOL,
             double_val DOUBLE,
             int64_val INT64,
             str_val STRING>>[{1, NULL, NULL, NULL, NULL}]
==
[prepare_database]
CREATE TABLE TableLarge AS
SELECT cast(1 as int64) as primary_key,
       cast(null as bool) as bool_val, cast(null as double) as double_val,
       cast(null as int64) as int64_val,
       cast(null as string) as str_val UNION ALL
  SELECT 2, true,  null, null, null UNION ALL
  SELECT 3, false, 0.2,  null, null UNION ALL
  SELECT 4, true,  0.3,  3,    null UNION ALL
  SELECT 5, false, 0.4,  4,     "4" UNION ALL
  SELECT 6, true,  0.5,  5,     "5" UNION ALL
  SELECT 7, false, 0.6,  6,     "6" UNION ALL
  SELECT 8, true,  0.7,  7,     "7" UNION ALL
  SELECT 9, false, 0.8,  8,     "8" UNION ALL
  SELECT 10, true,  0.9,  9,     "9" UNION ALL
  SELECT 11, false, 1.0, 10,    "10"
--
ARRAY<STRUCT<primary_key INT64,
             bool_val BOOL,
             double_val DOUBLE,
             int64_val INT64,
             str_val STRING>>
[
  {1, NULL, NULL, NULL, NULL},
  {2, true, NULL, NULL, NULL},
  {3, false, 0.2, NULL, NULL},
  {4, true, 0.3, 3, NULL},
  {5, false, 0.4, 4, "4"},
  {6, true, 0.5, 5, "5"},
  {7, false, 0.6, 6, "6"},
  {8, true, 0.7, 7, "7"},
  {9, false, 0.8, 8, "8"},
  {10, true, 0.9, 9, "9"},
  {11, false, 1, 10, "10"}
]
==
[prepare_database]
CREATE TABLE AllTypesTable AS
SELECT CAST(1 AS int64) as row_id,
       CAST(true AS bool) as bool_val,
       CAST(-1 AS int32) as int32_val,
       CAST(-1 AS int64) as int64_val,
       CAST(1 AS uint32) as uint32_val,
       CAST(1 AS uint64) as uint64_val,
       CAST(0.125 AS float) as float_val,
       CAST(0.125 AS double) as double_val,
       CAST("1" AS string) as str_val,
       CAST("1" AS BYTES) as bytes_val,
       CAST('2014-01-01' AS DATE) as date_val,
       TIMESTAMP '2014-01-01 00:00:01.011011 UTC' as
           timestamp_val
UNION ALL
SELECT CAST(2 AS int64) as row_id,
       CAST(true AS bool) as bool_val,
       CAST(-1 AS int32) as int32_val,
       CAST(-1 AS int64) as int64_val,
       CAST(1 AS uint32) as uint32_val,
       CAST(1 AS uint64) as uint64_val,
       CAST("NaN" AS float) as float_val,
       CAST("+Inf" AS double) as double_val,
       CAST("1" AS string) as str_val,
       CAST("1" AS BYTES) as bytes_val,
       CAST('2014-01-01' AS DATE) as date_val,
       TIMESTAMP '2014-01-01 00:00:01.011011 UTC' as
           timestamp_val
UNION ALL
SELECT CAST(3 AS int64) as row_id,
       CAST(true AS bool) as bool_val,
       CAST(-1 AS int32) as int32_val,
       CAST(-1 AS int64) as int64_val,
       CAST(1 AS uint32) as uint32_val,
       CAST(1 AS uint64) as uint64_val,
       CAST("+Inf" AS float) as float_val,
       CAST("-Inf" AS double) as double_val,
       CAST("1" AS string) as str_val,
       CAST("1" AS BYTES) as bytes_val,
       CAST('2014-01-01' AS DATE) as date_val,
       TIMESTAMP '2014-01-01 00:00:01.011011 UTC' as
           timestamp_val
UNION ALL
SELECT CAST(4 AS int64) as row_id,
       CAST(false AS bool) as bool_val,
       CAST(-2 AS int32) as int32_val,
       CAST(-2 AS int64) as int64_val,
       CAST(2 AS uint32) as uint32_val,
       CAST(2 AS uint64) as uint64_val,
       CAST(0.25 AS float) as float_val,
       CAST(pow(0.1, 324) AS double) as double_val, #positive 0 of type double
       CAST("2" AS string) as str_val,
       CAST("2" AS BYTES) as bytes_val,
       CAST('2014-01-02' AS DATE) as date_val,
       TIMESTAMP '2014-01-02 00:00:02.022022 UTC' as
           timestamp_val
UNION ALL
SELECT CAST(5 AS int64) as row_id,
       CAST(false AS bool) as bool_val,
       CAST(-2 AS int32) as int32_val,
       CAST(-2 AS int64) as int64_val,
       CAST(2 AS uint32) as uint32_val,
       CAST(2 AS uint64) as uint64_val,
       CAST("-Inf" AS float) as float_val,
       CAST(0.25 AS double) as double_val,
       CAST("2" AS string) as str_val,
       CAST("2" AS BYTES) as bytes_val,
       CAST('2014-01-02' AS DATE) as date_val,
       TIMESTAMP '2014-01-02 00:00:02.022022 UTC' as
           timestamp_val
UNION ALL
SELECT CAST(6 AS int64) as row_id,
       CAST(true AS bool) as bool_val,
       CAST(-3 AS int32) as int32_val,
       CAST(-3 AS int64) as int64_val,
       CAST(3 AS uint32) as uint32_val,
       CAST(3 AS uint64) as uint64_val,
       CAST(0.375 AS float) as float_val,
       CAST(0.375 AS double) as double_val,
       CAST("3" AS string) as str_val,
       CAST("3" AS BYTES) as bytes_val,
       CAST('2014-01-03' AS DATE) as date_val,
       TIMESTAMP '2014-01-03 00:00:03.033033 UTC' as
           timestamp_val
UNION ALL
SELECT CAST(7 AS int64) as row_id,
       CAST(false AS bool) as bool_val,
       CAST(-4 AS int32) as int32_val,
       CAST(-4 AS int64) as int64_val,
       CAST(4 AS uint32) as uint32_val,
       CAST(4 AS uint64) as uint64_val,
       CAST(0.5 AS float) as float_val,
       CAST(0.5 AS double) as double_val,
       CAST("4" AS string) as str_val,
       CAST("4" AS BYTES) as bytes_val,
       CAST('2014-01-04' AS DATE) as date_val,
       TIMESTAMP '2014-01-04 00:00:04.044044 UTC' as
           timestamp_val
UNION ALL
SELECT CAST(8 AS int64) as row_id,
       CAST(NULL AS bool) as bool_val,
       CAST(NULL AS int32) as int32_val,
       CAST(NULL AS int64) as int64_val,
       CAST(NULL AS uint32) as uint32_val,
       CAST(NULL AS uint64) as uint64_val,
       CAST(NULL AS float) as float_val,
       CAST(NULL AS double) as double_val,
       CAST(NULL AS string) as str_val,
       CAST(NULL AS BYTES) as bytes_val,
       CAST(NULL AS DATE) as date_val,
       CAST(NULL AS TIMESTAMP) as timestamp_val
UNION ALL
SELECT CAST(9 AS int64) as row_id,
       CAST(NULL AS bool) as bool_val,
       CAST(NULL AS int32) as int32_val,
       CAST(NULL AS int64) as int64_val,
       CAST(NULL AS uint32) as uint32_val,
       CAST(NULL AS uint64) as uint64_val,
       CAST(-pow(0.1, 46) AS float) as float_val, #negative 0 of type float
       CAST("NaN" AS double) as double_val,
       CAST(NULL AS string) as str_val,
       CAST(NULL AS BYTES) as bytes_val,
       CAST(NULL AS DATE) as date_val,
       CAST(NULL AS TIMESTAMP) as timestamp_val
UNION ALL
SELECT CAST(10 AS int64) as row_id,
       CAST(true AS bool) as bool_val,
       CAST(1 AS int32) as int32_val,
       CAST(1 AS int64) as int64_val,
       CAST(11 AS uint32) as uint32_val,
       CAST(11 AS uint64) as uint64_val,
       CAST(0.625 AS float) as float_val,
       CAST(0.625 AS double) as double_val,
       CAST("6" AS string) as str_val,
       CAST("7" AS BYTES) as bytes_val,
       CAST('2014-01-08' AS DATE) as date_val,
       TIMESTAMP '2014-01-02 00:00:01.011011 UTC' as
           timestamp_val
UNION ALL
SELECT CAST(11 AS int64) as row_id,
       CAST(false AS bool) as bool_val,
       CAST(5 AS int32) as int32_val,
       CAST(3 AS int64) as int64_val,
       CAST(11 AS uint32) as uint32_val,
       CAST(8 AS uint64) as uint64_val,
       CAST(-0.125 AS float) as float_val,
       CAST(-0.125 AS double) as double_val,
       CAST("123" AS string) as str_val,
       CAST("123" AS BYTES) as bytes_val,
       CAST('2014-02-01' AS DATE) as date_val,
       TIMESTAMP '2014-04-01 00:00:01.011011 UTC' as
           timestamp_val
UNION ALL
SELECT CAST(12 AS int64) as row_id,
       CAST(false AS bool) as bool_val,
       CAST(2 AS int32) as int32_val,
       CAST(16 AS int64) as int64_val,
       CAST(5 AS uint32) as uint32_val,
       CAST(9 AS uint64) as uint64_val,
       CAST(0.75 AS float) as float_val,
       CAST(-0.25 AS double) as double_val,
       CAST("24" AS string) as str_val,
       CAST("22" AS BYTES) as bytes_val,
       CAST('2014-02-02' AS DATE) as date_val,
       TIMESTAMP '2014-01-05 00:00:02.022022 UTC' as
           timestamp_val
UNION ALL
SELECT CAST(13 AS int64) as row_id,
       CAST(false AS bool) as bool_val,
       CAST(9 AS int32) as int32_val,
       CAST(9 AS int64) as int64_val,
       CAST(4 AS uint32) as uint32_val,
       CAST(8 AS uint64) as uint64_val,
       CAST(-0.25 AS float) as float_val,
       CAST(-0.75 AS double) as double_val,
       CAST("222" AS string) as str_val,
       CAST("234" AS BYTES) as bytes_val,
       CAST('2014-05-02' AS DATE) as date_val,
       TIMESTAMP '2014-05-02 00:00:02.022022 UTC' as
           timestamp_val
UNION ALL
SELECT CAST(14 AS int64) as row_id,
       CAST(true AS bool) as bool_val,
       CAST(13 AS int32) as int32_val,
       CAST(23 AS int64) as int64_val,
       CAST(31 AS uint32) as uint32_val,
       CAST(32 AS uint64) as uint64_val,
       CAST(-0.375 AS float) as float_val,
       CAST(-0.375 AS double) as double_val,
       CAST("345" AS string) as str_val,
       CAST("345" AS BYTES) as bytes_val,
       CAST('2014-01-06' AS DATE) as date_val,
       TIMESTAMP '2014-01-04 00:00:03.033033 UTC' as
           timestamp_val
UNION ALL
SELECT CAST(15 AS int64) as row_id,
       CAST(false AS bool) as bool_val,
       CAST(-24 AS int32) as int32_val,
       CAST(-14 AS int64) as int64_val,
       CAST(41 AS uint32) as uint32_val,
       CAST(54 AS uint64) as uint64_val,
       CAST(-0.5 AS float) as float_val,
       CAST(-0.5 AS double) as double_val,
       CAST("432" AS string) as str_val,
       CAST("433" AS BYTES) as bytes_val,
       CAST('2014-02-04' AS DATE) as date_val,
       TIMESTAMP '2014-02-04 00:00:04.044044 UTC' as
           timestamp_val
UNION ALL
SELECT CAST(16 AS int64) as row_id,
       CAST(false AS bool) as bool_val,
       CAST(NULL AS int32) as int32_val,
       CAST(-1 AS int64) as int64_val,
       CAST(NULL AS uint32) as uint32_val,
       CAST(1 AS uint64) as uint64_val,
       CAST(NULL AS float) as float_val,
       CAST(-pow(0.1, 324) AS double) as double_val, #negative 0 of type double
       CAST(NULL AS string) as str_val,
       CAST("1" AS BYTES) as bytes_val,
       CAST(NULL AS DATE) as date_val,
       TIMESTAMP '2014-02-04 00:00:04.044044 UTC' as
           timestamp_val
UNION ALL
SELECT CAST(17 AS int64) as row_id,
       CAST(NULL AS bool) as bool_val,
       CAST(-1 AS int32) as int32_val,
       CAST(NULL AS int64) as int64_val,
       CAST(1 AS uint32) as uint32_val,
       CAST(NULL AS uint64) as uint64_val,
       CAST(pow(0.1, 46) AS float) as float_val, #positive 0 of type float
       CAST(NULL AS double) as double_val,
       CAST("1" AS string) as str_val,
       CAST(NULL AS BYTES) as bytes_val,
       CAST('2014-02-04' AS DATE) as date_val,
       CAST(NULL AS TIMESTAMP) as timestamp_val
UNION ALL
SELECT CAST(18 AS int64) as row_id,
       CAST(true AS bool) as bool_val,
       CAST(-1 AS int32) as int32_val,
       CAST(-1 AS int64) as int64_val,
       CAST(1 AS uint32) as uint32_val,
       CAST(1 AS uint64) as uint64_val,
       CAST(0.125 AS float) as float_val,
       CAST(0.125 AS double) as double_val,
       CAST("1" AS string) as str_val,
       CAST("1" AS BYTES) as bytes_val,
       CAST('2014-01-01' AS DATE) as date_val,
       TIMESTAMP '2014-01-01 00:00:01.011011 UTC' as
           timestamp_val
UNION ALL
SELECT CAST(19 AS int64) as row_id,
       CAST(true AS bool) as bool_val,
       CAST(-1 AS int32) as int32_val,
       CAST(-1 AS int64) as int64_val,
       CAST(1 AS uint32) as uint32_val,
       CAST(1 AS uint64) as uint64_val,
       CAST("NaN" AS float) as float_val,
       CAST("+Inf" AS double) as double_val,
       CAST("1" AS string) as str_val,
       CAST("1" AS BYTES) as bytes_val,
       CAST('2014-01-01' AS DATE) as date_val,
       TIMESTAMP '2014-01-01 00:00:01.011011 UTC' as
           timestamp_val
UNION ALL
SELECT CAST(20 AS int64) as row_id,
       CAST(true AS bool) as bool_val,
       CAST(-1 AS int32) as int32_val,
       CAST(-1 AS int64) as int64_val,
       CAST(1 AS uint32) as uint32_val,
       CAST(1 AS uint64) as uint64_val,
       CAST("+Inf" AS float) as float_val,
       CAST("-Inf" AS double) as double_val,
       CAST("1" AS string) as str_val,
       CAST("1" AS BYTES) as bytes_val,
       CAST('2014-01-01' AS DATE) as date_val,
       TIMESTAMP '2014-01-01 00:00:01.011011 UTC' as
           timestamp_val
UNION ALL
SELECT CAST(21 AS int64) as row_id,
       CAST(false AS bool) as bool_val,
       CAST(-2 AS int32) as int32_val,
       CAST(-2 AS int64) as int64_val,
       CAST(2 AS uint32) as uint32_val,
       CAST(2 AS uint64) as uint64_val,
       CAST(0.25 AS float) as float_val,
       CAST(pow(0.1, 324) AS double) as double_val, #positive 0 of type double
       CAST("2" AS string) as str_val,
       CAST("2" AS BYTES) as bytes_val,
       CAST('2014-01-02' AS DATE) as date_val,
       TIMESTAMP '2014-01-02 00:00:02.022022 UTC' as
           timestamp_val
UNION ALL
SELECT CAST(22 AS int64) as row_id,
       CAST(false AS bool) as bool_val,
       CAST(-2 AS int32) as int32_val,
       CAST(-2 AS int64) as int64_val,
       CAST(2 AS uint32) as uint32_val,
       CAST(2 AS uint64) as uint64_val,
       CAST("-Inf" AS float) as float_val,
       CAST(0.25 AS double) as double_val,
       CAST("2" AS string) as str_val,
       CAST("2" AS BYTES) as bytes_val,
       CAST('2014-01-02' AS DATE) as date_val,
       TIMESTAMP '2014-01-02 00:00:02.022022 UTC' as
           timestamp_val
UNION ALL
SELECT CAST(23 AS int64) as row_id,
       CAST(true AS bool) as bool_val,
       CAST(-3 AS int32) as int32_val,
       CAST(-3 AS int64) as int64_val,
       CAST(3 AS uint32) as uint32_val,
       CAST(3 AS uint64) as uint64_val,
       CAST(0.375 AS float) as float_val,
       CAST(0.375 AS double) as double_val,
       CAST("3" AS string) as str_val,
       CAST("3" AS BYTES) as bytes_val,
       CAST('2014-01-03' AS DATE) as date_val,
       TIMESTAMP '2014-01-03 00:00:03.033033 UTC' as
           timestamp_val
UNION ALL
SELECT CAST(24 AS int64) as row_id,
       CAST(false AS bool) as bool_val,
       CAST(-4 AS int32) as int32_val,
       CAST(-4 AS int64) as int64_val,
       CAST(4 AS uint32) as uint32_val,
       CAST(4 AS uint64) as uint64_val,
       CAST(0.5 AS float) as float_val,
       CAST(0.5 AS double) as double_val,
       CAST("4" AS string) as str_val,
       CAST("4" AS BYTES) as bytes_val,
       CAST('2014-01-04' AS DATE) as date_val,
       TIMESTAMP '2014-01-04 00:00:04.044044 UTC' as
           timestamp_val
UNION ALL
SELECT CAST(25 AS int64) as row_id,
       CAST(NULL AS bool) as bool_val,
       CAST(NULL AS int32) as int32_val,
       CAST(NULL AS int64) as int64_val,
       CAST(NULL AS uint32) as uint32_val,
       CAST(NULL AS uint64) as uint64_val,
       CAST(NULL AS float) as float_val,
       CAST(NULL AS double) as double_val,
       CAST(NULL AS string) as str_val,
       CAST(NULL AS BYTES) as bytes_val,
       CAST(NULL AS DATE) as date_val,
       CAST(NULL AS TIMESTAMP) as timestamp_val
UNION ALL
SELECT CAST(26 AS int64) as row_id,
       CAST(NULL AS bool) as bool_val,
       CAST(NULL AS int32) as int32_val,
       CAST(NULL AS int64) as int64_val,
       CAST(NULL AS uint32) as uint32_val,
       CAST(NULL AS uint64) as uint64_val,
       CAST(-pow(0.1, 46) AS float) as float_val, #negative 0 of type float
       CAST("NaN" AS double) as double_val,
       CAST(NULL AS string) as str_val,
       CAST(NULL AS BYTES) as bytes_val,
       CAST(NULL AS DATE) as date_val,
       CAST(NULL AS TIMESTAMP) as timestamp_val
UNION ALL
SELECT CAST(27 AS int64) as row_id,
       CAST(true AS bool) as bool_val,
       CAST(1 AS int32) as int32_val,
       CAST(1 AS int64) as int64_val,
       CAST(11 AS uint32) as uint32_val,
       CAST(11 AS uint64) as uint64_val,
       CAST(0.625 AS float) as float_val,
       CAST(0.625 AS double) as double_val,
       CAST("6" AS string) as str_val,
       CAST("7" AS BYTES) as bytes_val,
       CAST('2014-01-08' AS DATE) as date_val,
       TIMESTAMP '2014-01-02 00:00:01.011011 UTC' as
           timestamp_val
UNION ALL
SELECT CAST(28 AS int64) as row_id,
       CAST(false AS bool) as bool_val,
       CAST(5 AS int32) as int32_val,
       CAST(3 AS int64) as int64_val,
       CAST(11 AS uint32) as uint32_val,
       CAST(8 AS uint64) as uint64_val,
       CAST(-0.125 AS float) as float_val,
       CAST(-0.125 AS double) as double_val,
       CAST("123" AS string) as str_val,
       CAST("123" AS BYTES) as bytes_val,
       CAST('2014-02-01' AS DATE) as date_val,
       TIMESTAMP '2014-04-01 00:00:01.011011 UTC' as
           timestamp_val
UNION ALL
SELECT CAST(29 AS int64) as row_id,
       CAST(false AS bool) as bool_val,
       CAST(2 AS int32) as int32_val,
       CAST(16 AS int64) as int64_val,
       CAST(5 AS uint32) as uint32_val,
       CAST(9 AS uint64) as uint64_val,
       CAST(0.75 AS float) as float_val,
       CAST(-0.25 AS double) as double_val,
       CAST("24" AS string) as str_val,
       CAST("22" AS BYTES) as bytes_val,
       CAST('2014-02-02' AS DATE) as date_val,
       TIMESTAMP '2014-01-05 00:00:02.022022 UTC' as
           timestamp_val
UNION ALL
SELECT CAST(30 AS int64) as row_id,
       CAST(false AS bool) as bool_val,
       CAST(9 AS int32) as int32_val,
       CAST(9 AS int64) as int64_val,
       CAST(4 AS uint32) as uint32_val,
       CAST(8 AS uint64) as uint64_val,
       CAST(-0.25 AS float) as float_val,
       CAST(-0.75 AS double) as double_val,
       CAST("222" AS string) as str_val,
       CAST("234" AS BYTES) as bytes_val,
       CAST('2014-05-02' AS DATE) as date_val,
       TIMESTAMP '2014-05-02 00:00:02.022022 UTC' as
           timestamp_val
UNION ALL
SELECT CAST(31 AS int64) as row_id,
       CAST(true AS bool) as bool_val,
       CAST(13 AS int32) as int32_val,
       CAST(23 AS int64) as int64_val,
       CAST(31 AS uint32) as uint32_val,
       CAST(32 AS uint64) as uint64_val,
       CAST(-0.375 AS float) as float_val,
       CAST(-0.375 AS double) as double_val,
       CAST("345" AS string) as str_val,
       CAST("345" AS BYTES) as bytes_val,
       CAST('2014-01-06' AS DATE) as date_val,
       TIMESTAMP '2014-01-04 00:00:03.033033 UTC' as
           timestamp_val
UNION ALL
SELECT CAST(32 AS int64) as row_id,
       CAST(false AS bool) as bool_val,
       CAST(-24 AS int32) as int32_val,
       CAST(-14 AS int64) as int64_val,
       CAST(41 AS uint32) as uint32_val,
       CAST(54 AS uint64) as uint64_val,
       CAST(-0.5 AS float) as float_val,
       CAST(-0.5 AS double) as double_val,
       CAST("432" AS string) as str_val,
       CAST("433" AS BYTES) as bytes_val,
       CAST('2014-02-04' AS DATE) as date_val,
       TIMESTAMP '2014-02-04 00:00:04.044044 UTC' as
           timestamp_val
UNION ALL
SELECT CAST(33 AS int64) as row_id,
       CAST(false AS bool) as bool_val,
       CAST(NULL AS int32) as int32_val,
       CAST(-1 AS int64) as int64_val,
       CAST(NULL AS uint32) as uint32_val,
       CAST(1 AS uint64) as uint64_val,
       CAST(NULL AS float) as float_val,
       CAST(-pow(0.1, 324) AS double) as double_val, #negative 0 of type double
       CAST(NULL AS string) as str_val,
       CAST("1" AS BYTES) as bytes_val,
       CAST(NULL AS DATE) as date_val,
       TIMESTAMP '2014-02-04 00:00:04.044044 UTC' as
           timestamp_val
UNION ALL
SELECT CAST(34 AS int64) as row_id,
       CAST(NULL AS bool) as bool_val,
       CAST(-1 AS int32) as int32_val,
       CAST(NULL AS int64) as int64_val,
       CAST(1 AS uint32) as uint32_val,
       CAST(NULL AS uint64) as uint64_val,
       CAST(pow(0.1, 46) AS float) as float_val, #positive 0 of type float
       CAST(NULL AS double) as double_val,
       CAST("1" AS string) as str_val,
       CAST(NULL AS BYTES) as bytes_val,
       CAST('2014-02-04' AS DATE) as date_val,
       CAST(NULL AS TIMESTAMP) as timestamp_val
--
ARRAY<STRUCT<
        row_id INT64,
        bool_val BOOL,
        int32_val INT32,
        int64_val INT64,
        uint32_val UINT32,
        uint64_val UINT64,
        float_val FLOAT,
        double_val DOUBLE,
        str_val STRING,
        bytes_val BYTES,
        date_val DATE,
        timestamp_val TIMESTAMP
      >>
[{
   1,
   true,
   -1,
   -1,
   1,
   1,
   0.125,
   0.125,
   "1",
   b"1",
   2014-01-01,
   2014-01-01 00:00:01.011011+00
 },
 {
   2,
   true,
   -1,
   -1,
   1,
   1,
   nan,
   inf,
   "1",
   b"1",
   2014-01-01,
   2014-01-01 00:00:01.011011+00
 },
 {
   3,
   true,
   -1,
   -1,
   1,
   1,
   inf,
   -inf,
   "1",
   b"1",
   2014-01-01,
   2014-01-01 00:00:01.011011+00
 },
 {
   4,
   false,
   -2,
   -2,
   2,
   2,
   0.25,
   0,
   "2",
   b"2",
   2014-01-02,
   2014-01-02 00:00:02.022022+00
 },
 {
   5,
   false,
   -2,
   -2,
   2,
   2,
   -inf,
   0.25,
   "2",
   b"2",
   2014-01-02,
   2014-01-02 00:00:02.022022+00
 },
 {
   6,
   true,
   -3,
   -3,
   3,
   3,
   0.375,
   0.375,
   "3",
   b"3",
   2014-01-03,
   2014-01-03 00:00:03.033033+00
 },
 {
   7,
   false,
   -4,
   -4,
   4,
   4,
   0.5,
   0.5,
   "4",
   b"4",
   2014-01-04,
   2014-01-04 00:00:04.044044+00
 },
 {8, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL},
 {9, NULL, NULL, NULL, NULL, NULL, -0, nan, NULL, NULL, NULL, NULL},
 {
   10,
   true,
   1,
   1,
   11,
   11,
   0.625,
   0.625,
   "6",
   b"7",
   2014-01-08,
   2014-01-02 00:00:01.011011+00
 },
 {
   11,
   false,
   5,
   3,
   11,
   8,
   -0.125,
   -0.125,
   "123",
   b"123",
   2014-02-01,
   2014-04-01 00:00:01.011011+00
 },
 {
   12,
   false,
   2,
   16,
   5,
   9,
   0.75,
   -0.25,
   "24",
   b"22",
   2014-02-02,
   2014-01-05 00:00:02.022022+00
 },
 {
   13,
   false,
   9,
   9,
   4,
   8,
   -0.25,
   -0.75,
   "222",
   b"234",
   2014-05-02,
   2014-05-02 00:00:02.022022+00
 },
 {
   14,
   true,
   13,
   23,
   31,
   32,
   -0.375,
   -0.375,
   "345",
   b"345",
   2014-01-06,
   2014-01-04 00:00:03.033033+00
 },
 {
   15,
   false,
   -24,
   -14,
   41,
   54,
   -0.5,
   -0.5,
   "432",
   b"433",
   2014-02-04,
   2014-02-04 00:00:04.044044+00
 },
 {
   16,
   false,
   NULL,
   -1,
   NULL,
   1,
   NULL,
   -0,
   NULL,
   b"1",
   NULL,
   2014-02-04 00:00:04.044044+00
 },
 {17, NULL, -1, NULL, 1, NULL, 0, NULL, "1", NULL, 2014-02-04, NULL},
 {
   18,
   true,
   -1,
   -1,
   1,
   1,
   0.125,
   0.125,
   "1",
   b"1",
   2014-01-01,
   2014-01-01 00:00:01.011011+00
 },
 {
   19,
   true,
   -1,
   -1,
   1,
   1,
   nan,
   inf,
   "1",
   b"1",
   2014-01-01,
   2014-01-01 00:00:01.011011+00
 },
 {
   20,
   true,
   -1,
   -1,
   1,
   1,
   inf,
   -inf,
   "1",
   b"1",
   2014-01-01,
   2014-01-01 00:00:01.011011+00
 },
 {
   21,
   false,
   -2,
   -2,
   2,
   2,
   0.25,
   0,
   "2",
   b"2",
   2014-01-02,
   2014-01-02 00:00:02.022022+00
 },
 {
   22,
   false,
   -2,
   -2,
   2,
   2,
   -inf,
   0.25,
   "2",
   b"2",
   2014-01-02,
   2014-01-02 00:00:02.022022+00
 },
 {
   23,
   true,
   -3,
   -3,
   3,
   3,
   0.375,
   0.375,
   "3",
   b"3",
   2014-01-03,
   2014-01-03 00:00:03.033033+00
 },
 {
   24,
   false,
   -4,
   -4,
   4,
   4,
   0.5,
   0.5,
   "4",
   b"4",
   2014-01-04,
   2014-01-04 00:00:04.044044+00
 },
 {25, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL},
 {26, NULL, NULL, NULL, NULL, NULL, -0, nan, NULL, NULL, NULL, NULL},
 {
   27,
   true,
   1,
   1,
   11,
   11,
   0.625,
   0.625,
   "6",
   b"7",
   2014-01-08,
   2014-01-02 00:00:01.011011+00
 },
 {
   28,
   false,
   5,
   3,
   11,
   8,
   -0.125,
   -0.125,
   "123",
   b"123",
   2014-02-01,
   2014-04-01 00:00:01.011011+00
 },
 {
   29,
   false,
   2,
   16,
   5,
   9,
   0.75,
   -0.25,
   "24",
   b"22",
   2014-02-02,
   2014-01-05 00:00:02.022022+00
 },
 {
   30,
   false,
   9,
   9,
   4,
   8,
   -0.25,
   -0.75,
   "222",
   b"234",
   2014-05-02,
   2014-05-02 00:00:02.022022+00
 },
 {
   31,
   true,
   13,
   23,
   31,
   32,
   -0.375,
   -0.375,
   "345",
   b"345",
   2014-01-06,
   2014-01-04 00:00:03.033033+00
 },
 {
   32,
   false,
   -24,
   -14,
   41,
   54,
   -0.5,
   -0.5,
   "432",
   b"433",
   2014-02-04,
   2014-02-04 00:00:04.044044+00
 },
 {
   33,
   false,
   NULL,
   -1,
   NULL,
   1,
   NULL,
   -0,
   NULL,
   b"1",
   NULL,
   2014-02-04 00:00:04.044044+00
 },
 {34, NULL, -1, NULL, 1, NULL, 0, NULL, "1", NULL, 2014-02-04, NULL}]
==

#
# Multiple columns, with first as base table column
#
[name=groupby_multi_base_column_str]
SELECT str_val, bytes_val, count(*) as cnt FROM AllTypesTable t
GROUP BY str_val, bytes_val
ORDER BY str_val ASC, bytes_val ASC
--
ARRAY<STRUCT<str_val STRING, bytes_val BYTES, cnt INT64>>[known order:
  {NULL, NULL, 4},
  {NULL, b"1", 2},
  {"1", NULL, 2},
  {"1", b"1", 6},
  {"123", b"123", 2},
  {"2", b"2", 4},
  {"222", b"234", 2},
  {"24", b"22", 2},
  {"3", b"3", 2},
  {"345", b"345", 2},
  {"4", b"4", 2},
  {"432", b"433", 2},
  {"6", b"7", 2}
]
==
[name=groupby_multi_base_column_bytes]
SELECT bytes_val, date_val, count(*) as cnt FROM AllTypesTable t
GROUP BY bytes_val, date_val
ORDER BY bytes_val ASC, date_val ASC
--
ARRAY<STRUCT<bytes_val BYTES, date_val DATE, cnt INT64>>[known order:
  {NULL, NULL, 4},
  {NULL, 2014-02-04, 2},
  {b"1", NULL, 2},
  {b"1", 2014-01-01, 6},
  {b"123", 2014-02-01, 2},
  {b"2", 2014-01-02, 4},
  {b"22", 2014-02-02, 2},
  {b"234", 2014-05-02, 2},
  {b"3", 2014-01-03, 2},
  {b"345", 2014-01-06, 2},
  {b"4", 2014-01-04, 2},
  {b"433", 2014-02-04, 2},
  {b"7", 2014-01-08, 2}
]
==
[name=groupby_multi_base_column_date_and_timestamp]
SELECT date_val, timestamp_val, count(*) as cnt FROM AllTypesTable t
GROUP BY date_val, timestamp_val
ORDER BY date_val ASC, timestamp_val
--
ARRAY<STRUCT<
        date_val DATE,
        timestamp_val TIMESTAMP,
        cnt INT64
      >>
[known order:{NULL, NULL, 4},
             {
               NULL,
               2014-02-04 00:00:04.044044+00,
               2
             },
             {
               2014-01-01,
               2014-01-01 00:00:01.011011+00,
               6
             },
             {
               2014-01-02,
               2014-01-02 00:00:02.022022+00,
               4
             },
             {
               2014-01-03,
               2014-01-03 00:00:03.033033+00,
               2
             },
             {
               2014-01-04,
               2014-01-04 00:00:04.044044+00,
               2
             },
             {
               2014-01-06,
               2014-01-04 00:00:03.033033+00,
               2
             },
             {
               2014-01-08,
               2014-01-02 00:00:01.011011+00,
               2
             },
             {
               2014-02-01,
               2014-04-01 00:00:01.011011+00,
               2
             },
             {
               2014-02-02,
               2014-01-05 00:00:02.022022+00,
               2
             },
             {2014-02-04, NULL, 2},
             {
               2014-02-04,
               2014-02-04 00:00:04.044044+00,
               2
             },
             {
               2014-05-02,
               2014-05-02 00:00:02.022022+00,
               2
             }]
==
#
# Multiple columns, with first as computed column
#
[name=groupby_multi_computed_column_bool]
SELECT (NOT bool_val) as c1, int32_val, count(*) as cnt FROM AllTypesTable t
GROUP BY c1, int32_val
ORDER BY c1 ASC, int32_val DESC
--
ARRAY<STRUCT<c1 BOOL, int32_val INT32, cnt INT64>>[known order:
  {NULL, -1, 2},
  {NULL, NULL, 4},
  {false, 13, 2},
  {false, 1, 2},
  {false, -1, 6},
  {false, -3, 2},
  {true, 9, 2},
  {true, 5, 2},
  {true, 2, 2},
  {true, -2, 4},
  {true, -4, 2},
  {true, -24, 2},
  {true, NULL, 2}
]
==
[name=groupby_multi_computed_column_int32]
SELECT int32_val * 2 as c1, -int64_val as c2, count(*) as cnt
FROM AllTypesTable t
GROUP BY c1, c2
ORDER BY c1 ASC, c2 ASC
--
ARRAY<STRUCT<c1 INT64, c2 INT64, cnt INT64>>[known order:
  {NULL, NULL, 4},
  {NULL, 1, 2},
  {-48, 14, 2},
  {-8, 4, 2},
  {-6, 3, 2},
  {-4, 2, 4},
  {-2, NULL, 2},
  {-2, 1, 6},
  {2, -1, 2},
  {4, -16, 2},
  {10, -3, 2},
  {18, -9, 2},
  {26, -23, 2}
]
==
[name=groupby_multi_computed_column_int64]
SELECT int64_val + 2 as c1, uint32_val + 2 as c2, count(*) as cnt
FROM AllTypesTable t
GROUP BY c1, c2
ORDER BY c1, c2
--
ARRAY<STRUCT<c1 INT64, c2 UINT64, cnt INT64>>[known order:
  {NULL, NULL, 4},
  {NULL, 3, 2},
  {-12, 43, 2},
  {-2, 6, 2},
  {-1, 5, 2},
  {0, 4, 4},
  {1, NULL, 2},
  {1, 3, 6},
  {3, 13, 2},
  {5, 13, 2},
  {11, 6, 2},
  {18, 7, 2},
  {25, 33, 2}
]
==
[name=groupby_multi_computed_column_uint32]
SELECT uint32_val + 7 as c1, uint64_val * 2 as c2, count(*) as cnt
FROM AllTypesTable t
GROUP BY c1, c2
ORDER BY c1, c2
--
ARRAY<STRUCT<c1 UINT64, c2 UINT64, cnt INT64>>[known order:
  {NULL, NULL, 4},
  {NULL, 2, 2},
  {8, NULL, 2},
  {8, 2, 6},
  {9, 4, 4},
  {10, 6, 2},
  {11, 8, 2},
  {11, 16, 2},
  {12, 18, 2},
  {18, 16, 2},
  {18, 22, 2},
  {38, 64, 2},
  {48, 108, 2}
]
==
[name=groupby_multi_computed_column_uint64]
SELECT uint64_val * 4 as c1, int32_val as c2, count(*) as cnt
FROM AllTypesTable t
GROUP BY c1, c2
ORDER BY c1, c2
--
ARRAY<STRUCT<c1 UINT64, c2 INT32, cnt INT64>>[known order:
  {NULL, NULL, 4},
  {NULL, -1, 2},
  {4, NULL, 2},
  {4, -1, 6},
  {8, -2, 4},
  {12, -3, 2},
  {16, -4, 2},
  {32, 5, 2},
  {32, 9, 2},
  {36, 2, 2},
  {44, 1, 2},
  {128, 13, 2},
  {216, -24, 2}
]
==
[name=groupby_multi_computed_column_float]
[forbidden_features=DISALLOW_GROUP_BY_FLOAT]
SELECT float_val + 0.5 as c1, double_val as c2, count(*) as cnt
FROM AllTypesTable t
GROUP BY c1, c2
ORDER BY c1, c2
--
ARRAY<STRUCT<c1 DOUBLE, c2 DOUBLE, cnt INT64>>[known order:
  {NULL, NULL, 2},
  {NULL, -0, 2},
  {nan, inf, 2},
  {-inf, 0.25, 2},
  {0, -0.5, 2},
  {0.125, -0.375, 2},
  {0.25, -0.75, 2},
  {0.375, -0.125, 2},
  {0.5, NULL, 2},
  {0.5, nan, 2},
  {0.625, 0.125, 2},
  {0.75, 0, 2},
  {0.875, 0.375, 2},
  {1, 0.5, 2},
  {1.125, 0.625, 2},
  {1.25, -0.25, 2},
  {inf, -inf, 2}
]

NOTE: Reference implementation reports non-determinism.
==
[name=groupby_multi_computed_column_double]
[forbidden_features=DISALLOW_GROUP_BY_FLOAT]
SELECT double_val - 0.75 as c1, str_val as c2, count(*) as cnt
FROM AllTypesTable t
GROUP BY c1, c2
ORDER BY c1, c2
--
ARRAY<STRUCT<c1 DOUBLE, c2 STRING, cnt INT64>>[known order:
  {NULL, NULL, 2},
  {NULL, "1", 2},
  {nan, NULL, 2},
  {-inf, "1", 2},
  {-1.5, "222", 2},
  {-1.25, "432", 2},
  {-1.125, "345", 2},
  {-1, "24", 2},
  {-0.875, "123", 2},
  {-0.75, NULL, 2},
  {-0.75, "2", 2},
  {-0.625, "1", 2},
  {-0.5, "2", 2},
  {-0.375, "3", 2},
  {-0.25, "4", 2},
  {-0.125, "6", 2},
  {inf, "1", 2}
]

NOTE: Reference implementation reports non-determinism.
==
[name=groupby_multi_computed_column_str]
SELECT RTRIM(str_val) as c1, bytes_val as c2, count(*) as cnt
FROM AllTypesTable t
GROUP BY c1, c2
ORDER BY c1, c2
--
ARRAY<STRUCT<c1 STRING, c2 BYTES, cnt INT64>>[known order:
  {NULL, NULL, 4},
  {NULL, b"1", 2},
  {"1", NULL, 2},
  {"1", b"1", 6},
  {"123", b"123", 2},
  {"2", b"2", 4},
  {"222", b"234", 2},
  {"24", b"22", 2},
  {"3", b"3", 2},
  {"345", b"345", 2},
  {"4", b"4", 2},
  {"432", b"433", 2},
  {"6", b"7", 2}
]
==
[name=groupby_multi_computed_column_bytes]
SELECT UPPER(bytes_val) as c1, date_val as c2, count(*) as cnt
FROM AllTypesTable t
GROUP BY c1, c2
ORDER BY c1, c2
--
ARRAY<STRUCT<c1 BYTES, c2 DATE, cnt INT64>>[known order:
  {NULL, NULL, 4},
  {NULL, 2014-02-04, 2},
  {b"1", NULL, 2},
  {b"1", 2014-01-01, 6},
  {b"123", 2014-02-01, 2},
  {b"2", 2014-01-02, 4},
  {b"22", 2014-02-02, 2},
  {b"234", 2014-05-02, 2},
  {b"3", 2014-01-03, 2},
  {b"345", 2014-01-06, 2},
  {b"4", 2014-01-04, 2},
  {b"433", 2014-02-04, 2},
  {b"7", 2014-01-08, 2}
]
==
#
# Enum tests
#
[name=groupby_single_base_column_enum]
SELECT enum_val FROM (
  SELECT CAST(1 AS int64) as row_id,
         CAST(0 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(2 AS int64) as row_id,
         CAST(0 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(3 AS int64) as row_id,
         CAST(1 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(4 AS int64) as row_id,
         CAST(1 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(5 AS int64) as row_id,
         CAST(2 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(6 AS int64) as row_id,
         CAST(2 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(7 AS int64) as row_id,
         CAST(2147483647 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(8 AS int64) as row_id,
         CAST(2147483647 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(9 AS int64) as row_id,
         CAST(NULL AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(10 AS int64) as row_id,
         CAST(NULL AS "zetasql_test__.TestEnum") as enum_val
) t
GROUP BY enum_val
ORDER BY enum_val ASC
--
ARRAY<STRUCT<enum_val ENUM<zetasql_test__.TestEnum>>>[known order:
  {NULL},
  {TESTENUM0},
  {TESTENUM1},
  {TESTENUM2},
  {TESTENUM2147483647}
]
==
[name=groupby_multi_base_column_enum]
SELECT enum_val, row_id FROM (
  SELECT CAST(1 AS int64) as row_id,
         CAST(0 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(2 AS int64) as row_id,
         CAST(0 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(3 AS int64) as row_id,
         CAST(1 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(4 AS int64) as row_id,
         CAST(1 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(5 AS int64) as row_id,
         CAST(2 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(6 AS int64) as row_id,
         CAST(2 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(7 AS int64) as row_id,
         CAST(2147483647 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(8 AS int64) as row_id,
         CAST(2147483647 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(9 AS int64) as row_id,
         CAST(NULL AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(10 AS int64) as row_id,
         CAST(NULL AS "zetasql_test__.TestEnum") as enum_val
) t
GROUP BY enum_val, row_id
ORDER BY enum_val ASC, row_id
--
ARRAY<STRUCT<
        enum_val ENUM<zetasql_test__.TestEnum>,
        row_id INT64
      >>
[known order:
  {NULL, 9},
  {NULL, 10},
  {TESTENUM0, 1},
  {TESTENUM0, 2},
  {TESTENUM1, 3},
  {TESTENUM1, 4},
  {TESTENUM2, 5},
  {TESTENUM2, 6},
  {TESTENUM2147483647, 7},
  {TESTENUM2147483647, 8}
]
==
#
# Distinct tests
# Single base table column
#
[name=distinct_single_base_column_bool]
SELECT s.c1 FROM (SELECT DISTINCT bool_val as c1 FROM AllTypesTable t) s
ORDER BY s.c1 ASC
--
ARRAY<STRUCT<c1 BOOL>>[known order:{NULL}, {false}, {true}]
==
[name=distinct_single_base_column_int32]
SELECT s.c1 FROM (SELECT DISTINCT int32_val as c1 FROM AllTypesTable t) s
ORDER BY s.c1 ASC
--
ARRAY<STRUCT<c1 INT32>>[known order:
  {NULL},
  {-24},
  {-4},
  {-3},
  {-2},
  {-1},
  {1},
  {2},
  {5},
  {9},
  {13}
]
==
[name=distinct_single_base_column_int64]
SELECT s.c1 FROM (SELECT DISTINCT int64_val as c1 FROM AllTypesTable t) s
ORDER BY s.c1 ASC
--
ARRAY<STRUCT<c1 INT64>>[known order:
  {NULL},
  {-14},
  {-4},
  {-3},
  {-2},
  {-1},
  {1},
  {3},
  {9},
  {16},
  {23}
]
==
[name=distinct_single_base_column_uint32]
SELECT s.c1 FROM (SELECT DISTINCT uint32_val as c1 FROM AllTypesTable t) s
ORDER BY s.c1 ASC
--
ARRAY<STRUCT<c1 UINT32>>[known order:
  {NULL},
  {1},
  {2},
  {3},
  {4},
  {5},
  {11},
  {31},
  {41}
]
==
[name=distinct_single_base_column_uint64]
SELECT s.c1 FROM (SELECT DISTINCT uint64_val as c1 FROM AllTypesTable t) s
ORDER BY s.c1 ASC
--
ARRAY<STRUCT<c1 UINT64>>[known order:
  {NULL},
  {1},
  {2},
  {3},
  {4},
  {8},
  {9},
  {11},
  {32},
  {54}
]
==
[name=distinct_single_base_column_float]
[forbidden_features=DISALLOW_GROUP_BY_FLOAT]
SELECT s.c1 FROM (SELECT DISTINCT float_val as c1 FROM AllTypesTable t) s
ORDER BY s.c1 ASC
--
ARRAY<STRUCT<c1 FLOAT>>[known order:
  {NULL},
  {nan},
  {-inf},
  {-0.5},
  {-0.375},
  {-0.25},
  {-0.125},
  {-0},
  {0.125},
  {0.25},
  {0.375},
  {0.5},
  {0.625},
  {0.75},
  {inf}
]

NOTE: Reference implementation reports non-determinism.
==
[name=distinct_single_base_column_double]
[forbidden_features=DISALLOW_GROUP_BY_FLOAT]
SELECT s.c1 FROM (SELECT DISTINCT double_val as c1 FROM AllTypesTable t) s
ORDER BY s.c1 ASC
--
ARRAY<STRUCT<c1 DOUBLE>>[known order:
  {NULL},
  {nan},
  {-inf},
  {-0.75},
  {-0.5},
  {-0.375},
  {-0.25},
  {-0.125},
  {0},
  {0.125},
  {0.25},
  {0.375},
  {0.5},
  {0.625},
  {inf}
]

NOTE: Reference implementation reports non-determinism.
==
[name=distinct_single_base_column_str]
SELECT s.c1 FROM (SELECT DISTINCT str_val as c1 FROM AllTypesTable t) s
ORDER BY s.c1 ASC
--
ARRAY<STRUCT<c1 STRING>>[known order:
  {NULL},
  {"1"},
  {"123"},
  {"2"},
  {"222"},
  {"24"},
  {"3"},
  {"345"},
  {"4"},
  {"432"},
  {"6"}
]
==
[name=distinct_single_base_column_bytes]
SELECT s.c1 FROM (SELECT DISTINCT bytes_val as c1 FROM AllTypesTable t) s
ORDER BY s.c1 ASC
--
ARRAY<STRUCT<c1 BYTES>>[known order:
  {NULL},
  {b"1"},
  {b"123"},
  {b"2"},
  {b"22"},
  {b"234"},
  {b"3"},
  {b"345"},
  {b"4"},
  {b"433"},
  {b"7"}
]
==
[name=distinct_single_base_column_date]
SELECT s.c1 FROM (SELECT DISTINCT date_val as c1 FROM AllTypesTable t) s
ORDER BY s.c1 ASC
--
ARRAY<STRUCT<c1 DATE>>[known order:
  {NULL},
  {2014-01-01},
  {2014-01-02},
  {2014-01-03},
  {2014-01-04},
  {2014-01-06},
  {2014-01-08},
  {2014-02-01},
  {2014-02-02},
  {2014-02-04},
  {2014-05-02}
]
==
[name=distinct_single_base_column_timestamp]
SELECT s.c1 FROM (
  SELECT DISTINCT timestamp_val as c1 FROM AllTypesTable t) s
ORDER BY s.c1 ASC
--
ARRAY<STRUCT<c1 TIMESTAMP>>[known order:
  {NULL},
  {2014-01-01 00:00:01.011011+00},
  {2014-01-02 00:00:01.011011+00},
  {2014-01-02 00:00:02.022022+00},
  {2014-01-03 00:00:03.033033+00},
  {2014-01-04 00:00:03.033033+00},
  {2014-01-04 00:00:04.044044+00},
  {2014-01-05 00:00:02.022022+00},
  {2014-02-04 00:00:04.044044+00},
  {2014-04-01 00:00:01.011011+00},
  {2014-05-02 00:00:02.022022+00}
]
==
#
# Single computed column
#
[name=distinct_single_computed_column_bool]
SELECT s.c1 FROM (SELECT DISTINCT (NOT bool_val) as c1 FROM AllTypesTable t) s
ORDER BY s.c1 ASC
--
ARRAY<STRUCT<c1 BOOL>>[known order:{NULL}, {false}, {true}]
==
[name=distinct_single_computed_column_int32]
SELECT s.c1 FROM (SELECT DISTINCT int32_val + 1 as c1 FROM AllTypesTable t) s
ORDER BY s.c1 ASC
--
ARRAY<STRUCT<c1 INT64>>[known order:
  {NULL},
  {-23},
  {-3},
  {-2},
  {-1},
  {0},
  {2},
  {3},
  {6},
  {10},
  {14}
]
==
[name=distinct_single_computed_column_int64]
SELECT s.c1 FROM (SELECT DISTINCT int64_val * 2 as c1 FROM AllTypesTable t) s
ORDER BY s.c1 ASC
--
ARRAY<STRUCT<c1 INT64>>[known order:
  {NULL},
  {-28},
  {-8},
  {-6},
  {-4},
  {-2},
  {2},
  {6},
  {18},
  {32},
  {46}
]
==
[name=distinct_single_computed_column_uint32]
SELECT s.c1 FROM (SELECT DISTINCT uint32_val + 7 as c1 FROM AllTypesTable t) s
ORDER BY s.c1 ASC
--
ARRAY<STRUCT<c1 UINT64>>[known order:
  {NULL},
  {8},
  {9},
  {10},
  {11},
  {12},
  {18},
  {38},
  {48}
]
==
[name=distinct_single_computed_column_uint64]
SELECT s.c1 FROM (SELECT DISTINCT uint64_val * 3 as c1 FROM AllTypesTable t) s
ORDER BY s.c1 ASC
--
ARRAY<STRUCT<c1 UINT64>>[known order:
  {NULL},
  {3},
  {6},
  {9},
  {12},
  {24},
  {27},
  {33},
  {96},
  {162}
]
==
[name=distinct_single_computed_column_float]
[forbidden_features=DISALLOW_GROUP_BY_FLOAT]
SELECT s.c1 FROM (
  SELECT DISTINCT float_val + 0.125 as c1 FROM AllTypesTable t) s
ORDER BY s.c1 ASC
--
ARRAY<STRUCT<c1 DOUBLE>>[known order:
  {NULL},
  {nan},
  {-inf},
  {-0.375},
  {-0.25},
  {-0.125},
  {0},
  {0.125},
  {0.25},
  {0.375},
  {0.5},
  {0.625},
  {0.75},
  {0.875},
  {inf}
]

NOTE: Reference implementation reports non-determinism.
==
[name=distinct_single_computed_column_double]
[forbidden_features=DISALLOW_GROUP_BY_FLOAT]
SELECT s.c1 FROM (SELECT DISTINCT double_val * 2 as c1 FROM AllTypesTable t) s
ORDER BY s.c1 ASC
--
ARRAY<STRUCT<c1 DOUBLE>>[known order:
  {NULL},
  {nan},
  {-inf},
  {-1.5},
  {-1},
  {-0.75},
  {-0.5},
  {-0.25},
  {0},
  {0.25},
  {0.5},
  {0.75},
  {1},
  {1.25},
  {inf}
]

NOTE: Reference implementation reports non-determinism.
==
[name=distinct_single_computed_column_str]
SELECT s.c1 FROM (SELECT DISTINCT LTRIM(str_val) as c1 FROM AllTypesTable t) s
ORDER BY s.c1 ASC
--
ARRAY<STRUCT<c1 STRING>>[known order:
  {NULL},
  {"1"},
  {"123"},
  {"2"},
  {"222"},
  {"24"},
  {"3"},
  {"345"},
  {"4"},
  {"432"},
  {"6"}
]
==
[name=distinct_single_computed_column_bytes]
SELECT s.c1 FROM (SELECT DISTINCT UPPER(bytes_val) as c1 FROM AllTypesTable t) s
ORDER BY s.c1 ASC
--
ARRAY<STRUCT<c1 BYTES>>[known order:
  {NULL},
  {b"1"},
  {b"123"},
  {b"2"},
  {b"22"},
  {b"234"},
  {b"3"},
  {b"345"},
  {b"4"},
  {b"433"},
  {b"7"}
]
==
#
# Multiple columns, with first as base table column
#
[name=distinct_multi_base_column_bool]
SELECT s.c1, s.c2 FROM (
  SELECT DISTINCT bool_val as c1, int32_val as c2 FROM AllTypesTable t) s
ORDER BY s.c1 ASC, s.c2 ASC
--
ARRAY<STRUCT<c1 BOOL, c2 INT32>>[known order:
  {NULL, NULL},
  {NULL, -1},
  {false, NULL},
  {false, -24},
  {false, -4},
  {false, -2},
  {false, 2},
  {false, 5},
  {false, 9},
  {true, -3},
  {true, -1},
  {true, 1},
  {true, 13}
]
==
[name=distinct_multi_base_column_int32]
SELECT s.c1, s.c2 FROM (
  SELECT DISTINCT int32_val as c1, -int64_val as c2 FROM AllTypesTable t) s
ORDER BY s.c1 ASC, s.c2 ASC
--
ARRAY<STRUCT<c1 INT32, c2 INT64>>[known order:
  {NULL, NULL},
  {NULL, 1},
  {-24, 14},
  {-4, 4},
  {-3, 3},
  {-2, 2},
  {-1, NULL},
  {-1, 1},
  {1, -1},
  {2, -16},
  {5, -3},
  {9, -9},
  {13, -23}
]
==
[name=distinct_multi_base_column_int64]
SELECT s.c1, s.c2 FROM (
  SELECT DISTINCT int64_val as c1, uint32_val + 2 as c2 FROM AllTypesTable t) s
ORDER BY s.c1 ASC, s.c2 ASC
--
ARRAY<STRUCT<c1 INT64, c2 UINT64>>[known order:
  {NULL, NULL},
  {NULL, 3},
  {-14, 43},
  {-4, 6},
  {-3, 5},
  {-2, 4},
  {-1, NULL},
  {-1, 3},
  {1, 13},
  {3, 13},
  {9, 6},
  {16, 7},
  {23, 33}
]
==
[name=distinct_multi_base_column_uint32]
SELECT s.c1, s.c2 FROM (
  SELECT DISTINCT uint32_val as c1, uint64_val * 2 as c2 FROM AllTypesTable t) s
ORDER BY s.c1 ASC, s.c2 ASC
--
ARRAY<STRUCT<c1 UINT32, c2 UINT64>>[known order:
  {NULL, NULL},
  {NULL, 2},
  {1, NULL},
  {1, 2},
  {2, 4},
  {3, 6},
  {4, 8},
  {4, 16},
  {5, 18},
  {11, 16},
  {11, 22},
  {31, 64},
  {41, 108}
]
==
[name=distinct_multi_base_column_uint64]
SELECT s.c1, s.c2 FROM (
SELECT DISTINCT uint64_val as c1, int32_val as c2 FROM AllTypesTable t) s
ORDER BY s.c1 ASC, s.c2 ASC
--
ARRAY<STRUCT<c1 UINT64, c2 INT32>>[known order:
  {NULL, NULL},
  {NULL, -1},
  {1, NULL},
  {1, -1},
  {2, -2},
  {3, -3},
  {4, -4},
  {8, 5},
  {8, 9},
  {9, 2},
  {11, 1},
  {32, 13},
  {54, -24}
]
==
[name=distinct_multi_base_column_float]
[forbidden_features=DISALLOW_GROUP_BY_FLOAT]
SELECT s.c1, s.c2 FROM (
  SELECT DISTINCT float_val as c1, double_val as c2 FROM AllTypesTable t) s
ORDER BY s.c1 ASC, s.c2 ASC
--
ARRAY<STRUCT<c1 FLOAT, c2 DOUBLE>>[known order:
  {NULL, NULL},
  {NULL, -0},
  {nan, inf},
  {-inf, 0.25},
  {-0.5, -0.5},
  {-0.375, -0.375},
  {-0.25, -0.75},
  {-0.125, -0.125},
  {0, NULL},
  {-0, nan},
  {0.125, 0.125},
  {0.25, 0},
  {0.375, 0.375},
  {0.5, 0.5},
  {0.625, 0.625},
  {0.75, -0.25},
  {inf, -inf}
]

NOTE: Reference implementation reports non-determinism.
==
[name=distinct_multi_base_column_double]
[forbidden_features=DISALLOW_GROUP_BY_FLOAT]
SELECT s.c1, s.c2 FROM (
  SELECT DISTINCT double_val as c1, str_val as c2 FROM AllTypesTable t) s
ORDER BY s.c1 ASC, s.c2 ASC
--
ARRAY<STRUCT<c1 DOUBLE, c2 STRING>>[known order:
  {NULL, NULL},
  {NULL, "1"},
  {nan, NULL},
  {-inf, "1"},
  {-0.75, "222"},
  {-0.5, "432"},
  {-0.375, "345"},
  {-0.25, "24"},
  {-0.125, "123"},
  {-0, NULL},
  {0, "2"},
  {0.125, "1"},
  {0.25, "2"},
  {0.375, "3"},
  {0.5, "4"},
  {0.625, "6"},
  {inf, "1"}
]

NOTE: Reference implementation reports non-determinism.
==
[name=distinct_multi_base_column_str]
SELECT s.c1, s.c2 FROM (
  SELECT DISTINCT str_val as c1, bytes_val as c2 FROM AllTypesTable t) s
ORDER BY s.c1 ASC, s.c2 ASC
--
ARRAY<STRUCT<c1 STRING, c2 BYTES>>[known order:
  {NULL, NULL},
  {NULL, b"1"},
  {"1", NULL},
  {"1", b"1"},
  {"123", b"123"},
  {"2", b"2"},
  {"222", b"234"},
  {"24", b"22"},
  {"3", b"3"},
  {"345", b"345"},
  {"4", b"4"},
  {"432", b"433"},
  {"6", b"7"}
]
==
[name=distinct_multi_base_column_bytes]
SELECT s.c1, s.c2 FROM (
  SELECT DISTINCT bytes_val as c1, date_val as c2 FROM AllTypesTable t) s
ORDER BY s.c1 ASC, s.c2 ASC
--
ARRAY<STRUCT<c1 BYTES, c2 DATE>>[known order:
  {NULL, NULL},
  {NULL, 2014-02-04},
  {b"1", NULL},
  {b"1", 2014-01-01},
  {b"123", 2014-02-01},
  {b"2", 2014-01-02},
  {b"22", 2014-02-02},
  {b"234", 2014-05-02},
  {b"3", 2014-01-03},
  {b"345", 2014-01-06},
  {b"4", 2014-01-04},
  {b"433", 2014-02-04},
  {b"7", 2014-01-08}
]
==
[name=distinct_multi_base_column_date]
SELECT s.c1, s.c2 FROM (
  SELECT DISTINCT date_val as c1, timestamp_val as c2
  FROM AllTypesTable t) s
ORDER BY s.c1 ASC, s.c2 ASC
--
ARRAY<STRUCT<c1 DATE, c2 TIMESTAMP>>[known order:
  {NULL, NULL},
  {
    NULL,
    2014-02-04 00:00:04.044044+00
  },
  {
    2014-01-01,
    2014-01-01 00:00:01.011011+00
  },
  {
    2014-01-02,
    2014-01-02 00:00:02.022022+00
  },
  {
    2014-01-03,
    2014-01-03 00:00:03.033033+00
  },
  {
    2014-01-04,
    2014-01-04 00:00:04.044044+00
  },
  {
    2014-01-06,
    2014-01-04 00:00:03.033033+00
  },
  {
    2014-01-08,
    2014-01-02 00:00:01.011011+00
  },
  {
    2014-02-01,
    2014-04-01 00:00:01.011011+00
  },
  {
    2014-02-02,
    2014-01-05 00:00:02.022022+00
  },
  {2014-02-04, NULL},
  {
    2014-02-04,
    2014-02-04 00:00:04.044044+00
  },
  {
    2014-05-02,
    2014-05-02 00:00:02.022022+00
  }
]
==
[name=distinct_multi_base_column_timestamp]
SELECT s.c1, s.c2 FROM (
  SELECT DISTINCT timestamp_val as c1, date_val as c2
  FROM AllTypesTable t) s
ORDER BY s.c1 ASC, s.c2 ASC
--
ARRAY<STRUCT<c1 TIMESTAMP, c2 DATE>>[known order:
  {NULL, NULL},
  {NULL, 2014-02-04},
  {
    2014-01-01 00:00:01.011011+00,
    2014-01-01
  },
  {
    2014-01-02 00:00:01.011011+00,
    2014-01-08
  },
  {
    2014-01-02 00:00:02.022022+00,
    2014-01-02
  },
  {
    2014-01-03 00:00:03.033033+00,
    2014-01-03
  },
  {
    2014-01-04 00:00:03.033033+00,
    2014-01-06
  },
  {
    2014-01-04 00:00:04.044044+00,
    2014-01-04
  },
  {
    2014-01-05 00:00:02.022022+00,
    2014-02-02
  },
  {
    2014-02-04 00:00:04.044044+00,
    NULL
  },
  {
    2014-02-04 00:00:04.044044+00,
    2014-02-04
  },
  {
    2014-04-01 00:00:01.011011+00,
    2014-02-01
  },
  {
    2014-05-02 00:00:02.022022+00,
    2014-05-02
  }
]
==
#
# Multiple columns, with first as computed column
#
[name=distinct_multi_computed_column_bool]
SELECT s.c1, s.c2 FROM (
  SELECT DISTINCT (NOT bool_val) as c1, int32_val as c2 FROM AllTypesTable t) s
ORDER BY s.c1 ASC, s.c2 ASC
--
ARRAY<STRUCT<c1 BOOL, c2 INT32>>[known order:
  {NULL, NULL},
  {NULL, -1},
  {false, -3},
  {false, -1},
  {false, 1},
  {false, 13},
  {true, NULL},
  {true, -24},
  {true, -4},
  {true, -2},
  {true, 2},
  {true, 5},
  {true, 9}
]
==
[name=distinct_multi_computed_column_int32]
SELECT s.c1, s.c2 FROM (
  SELECT DISTINCT int32_val * 2 as c1, -int64_val as c2 FROM AllTypesTable t) s
ORDER BY s.c1 ASC, s.c2 ASC
--
ARRAY<STRUCT<c1 INT64, c2 INT64>>[known order:
  {NULL, NULL},
  {NULL, 1},
  {-48, 14},
  {-8, 4},
  {-6, 3},
  {-4, 2},
  {-2, NULL},
  {-2, 1},
  {2, -1},
  {4, -16},
  {10, -3},
  {18, -9},
  {26, -23}
]
==
[name=distinct_multi_computed_column_int64]
SELECT s.c1, s.c2 FROM (
  SELECT DISTINCT int64_val + 2 as c1, uint32_val + 2 as c2
  FROM AllTypesTable t) s
ORDER BY s.c1 ASC, s.c2 ASC
--
ARRAY<STRUCT<c1 INT64, c2 UINT64>>[known order:
  {NULL, NULL},
  {NULL, 3},
  {-12, 43},
  {-2, 6},
  {-1, 5},
  {0, 4},
  {1, NULL},
  {1, 3},
  {3, 13},
  {5, 13},
  {11, 6},
  {18, 7},
  {25, 33}
]
==
[name=distinct_multi_computed_column_uint32]
SELECT s.c1, s.c2 FROM (
  SELECT DISTINCT uint32_val + 7 as c1, uint64_val * 2 as c2
  FROM AllTypesTable t) s
ORDER BY s.c1 ASC, s.c2 ASC
--
ARRAY<STRUCT<c1 UINT64, c2 UINT64>>[known order:
  {NULL, NULL},
  {NULL, 2},
  {8, NULL},
  {8, 2},
  {9, 4},
  {10, 6},
  {11, 8},
  {11, 16},
  {12, 18},
  {18, 16},
  {18, 22},
  {38, 64},
  {48, 108}
]
==
[name=distinct_multi_computed_column_uint64]
SELECT s.c1, s.c2 FROM (
  SELECT DISTINCT uint64_val * 4 as c1, int32_val as c2
  FROM AllTypesTable t) s
ORDER BY s.c1 ASC, s.c2 ASC
--
ARRAY<STRUCT<c1 UINT64, c2 INT32>>[known order:
  {NULL, NULL},
  {NULL, -1},
  {4, NULL},
  {4, -1},
  {8, -2},
  {12, -3},
  {16, -4},
  {32, 5},
  {32, 9},
  {36, 2},
  {44, 1},
  {128, 13},
  {216, -24}
]
==
[name=distinct_multi_computed_column_float]
[forbidden_features=DISALLOW_GROUP_BY_FLOAT]
SELECT s.c1, s.c2 FROM (
  SELECT DISTINCT float_val + 0.5 as c1, double_val as c2
  FROM AllTypesTable t) s
ORDER BY s.c1 ASC, s.c2 ASC
--
ARRAY<STRUCT<c1 DOUBLE, c2 DOUBLE>>[known order:
  {NULL, NULL},
  {NULL, -0},
  {nan, inf},
  {-inf, 0.25},
  {0, -0.5},
  {0.125, -0.375},
  {0.25, -0.75},
  {0.375, -0.125},
  {0.5, NULL},
  {0.5, nan},
  {0.625, 0.125},
  {0.75, 0},
  {0.875, 0.375},
  {1, 0.5},
  {1.125, 0.625},
  {1.25, -0.25},
  {inf, -inf}
]

NOTE: Reference implementation reports non-determinism.
==
[name=distinct_multi_computed_column_double]
[forbidden_features=DISALLOW_GROUP_BY_FLOAT]
SELECT s.c1, s.c2 FROM (
  SELECT DISTINCT double_val - 0.75 as c1, str_val as c2
  FROM AllTypesTable t) s
ORDER BY s.c1 ASC, s.c2 ASC
--
ARRAY<STRUCT<c1 DOUBLE, c2 STRING>>[known order:
  {NULL, NULL},
  {NULL, "1"},
  {nan, NULL},
  {-inf, "1"},
  {-1.5, "222"},
  {-1.25, "432"},
  {-1.125, "345"},
  {-1, "24"},
  {-0.875, "123"},
  {-0.75, NULL},
  {-0.75, "2"},
  {-0.625, "1"},
  {-0.5, "2"},
  {-0.375, "3"},
  {-0.25, "4"},
  {-0.125, "6"},
  {inf, "1"}
]

NOTE: Reference implementation reports non-determinism.
==
[name=distinct_multi_computed_column_str]
SELECT s.c1, s.c2 FROM (
  SELECT DISTINCT RTRIM(str_val) as c1, bytes_val as c2
  FROM AllTypesTable t) s
ORDER BY s.c1 ASC, s.c2 ASC
--
ARRAY<STRUCT<c1 STRING, c2 BYTES>>[known order:
  {NULL, NULL},
  {NULL, b"1"},
  {"1", NULL},
  {"1", b"1"},
  {"123", b"123"},
  {"2", b"2"},
  {"222", b"234"},
  {"24", b"22"},
  {"3", b"3"},
  {"345", b"345"},
  {"4", b"4"},
  {"432", b"433"},
  {"6", b"7"}
]
==
[name=distinct_multi_computed_column_bytes]
SELECT s.c1, s.c2 FROM (
  SELECT DISTINCT UPPER(bytes_val) as c1, date_val as c2
  FROM AllTypesTable t) s
ORDER BY s.c1 ASC, s.c2 ASC
--
ARRAY<STRUCT<c1 BYTES, c2 DATE>>[known order:
  {NULL, NULL},
  {NULL, 2014-02-04},
  {b"1", NULL},
  {b"1", 2014-01-01},
  {b"123", 2014-02-01},
  {b"2", 2014-01-02},
  {b"22", 2014-02-02},
  {b"234", 2014-05-02},
  {b"3", 2014-01-03},
  {b"345", 2014-01-06},
  {b"4", 2014-01-04},
  {b"433", 2014-02-04},
  {b"7", 2014-01-08}
]
==
#
# Enum tests
#
[name=distinct_single_base_column_enum]
SELECT s.c1 FROM (SELECT DISTINCT enum_val as c1 FROM (
  SELECT CAST(1 AS int64) as row_id,
         CAST(0 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(2 AS int64) as row_id,
         CAST(0 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(3 AS int64) as row_id,
         CAST(1 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(4 AS int64) as row_id,
         CAST(1 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(5 AS int64) as row_id,
         CAST(2 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(6 AS int64) as row_id,
         CAST(2 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(7 AS int64) as row_id,
         CAST(2147483647 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(8 AS int64) as row_id,
         CAST(2147483647 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(9 AS int64) as row_id,
         CAST(NULL AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(10 AS int64) as row_id,
         CAST(NULL AS "zetasql_test__.TestEnum") as enum_val
) t ) s
ORDER BY s.c1 ASC
--
ARRAY<STRUCT<c1 ENUM<zetasql_test__.TestEnum>>>[known order:
  {NULL},
  {TESTENUM0},
  {TESTENUM1},
  {TESTENUM2},
  {TESTENUM2147483647}
]
==
[name=distinct_multi_base_column_enum]
SELECT s.c1, s.c2 FROM (SELECT DISTINCT enum_val as c1, row_id as c2 FROM (
  SELECT CAST(1 AS int64) as row_id,
         CAST(0 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(2 AS int64) as row_id,
         CAST(0 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(3 AS int64) as row_id,
         CAST(1 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(4 AS int64) as row_id,
         CAST(1 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(5 AS int64) as row_id,
         CAST(2 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(6 AS int64) as row_id,
         CAST(2 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(7 AS int64) as row_id,
         CAST(2147483647 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(8 AS int64) as row_id,
         CAST(2147483647 AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(9 AS int64) as row_id,
         CAST(NULL AS "zetasql_test__.TestEnum") as enum_val
  UNION ALL
  SELECT CAST(10 AS int64) as row_id,
         CAST(NULL AS "zetasql_test__.TestEnum") as enum_val
) t ) s
ORDER BY s.c1 ASC, s.c2 ASC
--
ARRAY<STRUCT<
        c1 ENUM<zetasql_test__.TestEnum>,
        c2 INT64
      >>
[known order:
  {NULL, 9},
  {NULL, 10},
  {TESTENUM0, 1},
  {TESTENUM0, 2},
  {TESTENUM1, 3},
  {TESTENUM1, 4},
  {TESTENUM2, 5},
  {TESTENUM2, 6},
  {TESTENUM2147483647, 7},
  {TESTENUM2147483647, 8}
]
==

[name=group_by_subquery_constant]
select sum(primary_key) from TableDistincts
group by (select 'abc')
--
ARRAY<STRUCT<INT64>>[{136}]
==

[name=group_by_subquery_correlated]
select sum(primary_key) from TableDistincts
group by (select primary_key)
--
ARRAY<STRUCT<INT64>>[unknown order:
  {1},
  {2},
  {3},
  {4},
  {5},
  {6},
  {7},
  {8},
  {9},
  {10},
  {11},
  {12},
  {13},
  {14},
  {15},
  {16}
]
==

[name=group_by_subquery_with_table]
select sum(primary_key) from TableDistincts t1
group by (select count(*) from TableDistincts)
--
ARRAY<STRUCT<INT64>>[{136}]
==

[name=groupby_countif_all]
SELECT count(bool_val) as c, countif(bool_val) as cntif FROM AllTypesTable
--
ARRAY<STRUCT<c INT64, cntif INT64>>[{28, 12}]
==

[name=groupby_countif_by_bool_val]
SELECT bool_val, count(*) as c, count(bool_val) as cb,
       countif(bool_val) as cntif
FROM AllTypesTable
GROUP BY bool_val
--
ARRAY<STRUCT<bool_val BOOL, c INT64, cb INT64, cntif INT64>>[unknown order:
  {NULL, 6, 0, 0},
  {false, 16, 16, 0},
  {true, 12, 12, 12}
]
==

[name=countif_empty_input]
select count(x), countif(x > 0) from (select x from (select 1 x) where x < 0);
--
ARRAY<STRUCT<INT64, INT64>>[{0, 0}]
==

[name=group_by_empty_columns]
[required_features=V_1_4_GROUPING_SETS]
SELECT COUNT(primary_key), SUM(distinct_1) FROM TableDistincts GROUP BY ();
--
ARRAY<STRUCT<INT64, INT64>>[{16, 16}]
